{"version":3,"sources":["render/saved-history-preview.js"],"names":["define","$","jsbin","user","name","embed","$history","$body","loaded","requestAttempts","$document","on","panels","getVisible","length","appendTo","detach","loadList","hasClass","hookUserHistory","ajax","dataType","url","root","error","remove","setTimeout","console","success","html","frag","mobile","find","append","updatePreview","$iframe","attr","removeAttr","updateViewing","$viewing","updateLayout","$tbodys","archiveMode","$parent","parent","each","$tbody","this","$trs","filter","removeClass","first","addClass","$bins","$toggle","delegate","$this","$row","parents","toggleClass","analytics","pathname","indexOf","data","type","alert","change","archive","archiveView","selected","event","shiftKey","metaKey","closest","preventDefault","stopImmediatePropagation","$tr","window","location","editUrl","allEditors","panel","editor","getCode","trim","show","click","i","val","replace","prettyDate","trigger","document","$panelButtons","$homebtn","panelsVisible"],"mappings":"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","file":"../../render/saved-history-preview.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /*global jsbin, $, $document, analytics*/\r\n  'use strict';\r\n  if (!jsbin.user || !jsbin.user.name || jsbin.embed) {\r\n    return;\r\n  }\r\n\r\n  var $body = $('body'),\r\n      loaded = false,\r\n      requestAttempts = 5,\r\n      $history; // set in hookUserHistory()\r\n\r\n  $document.on('history:open', function () {\r\n    if ($history && jsbin.panels.getVisible().length === 0) {\r\n      $history.appendTo('main');\r\n    }\r\n  }).on('history:close', function () {\r\n    if ($history === null) {\r\n      $history = $('#history').detach();\r\n    }\r\n  });\r\n\r\n  var loadList = function () {\r\n    if (loaded) {\r\n      return;\r\n    }\r\n\r\n    if ($('html').hasClass('public-listing')) {\r\n      hookUserHistory();\r\n    } else {\r\n      $.ajax({\r\n        dataType: 'html',\r\n        url: jsbin.root + '/list',\r\n        error: function () {\r\n          requestAttempts--;\r\n          if (requestAttempts > 0) {\r\n            $('#history').remove();\r\n            setTimeout(loadList, 500);\r\n          } else {\r\n            console.error('Giving up to load history');\r\n          }\r\n        },\r\n        success: function (html) {\r\n          $('#history').remove();\r\n          var frag = $(html);\r\n          if (jsbin.mobile) {\r\n            // mobile is particularly slow at rendering 1,000s of tbodys\r\n            // so we'll remove some to relieve the pressure.\r\n            frag.find('tbody:gt(50)').remove();\r\n          }\r\n          $body.append(frag);\r\n          hookUserHistory();\r\n          loaded = true;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  var updatePreview = function(url, $iframe) {\r\n    $iframe.attr('src', url + '/quiet');\r\n    $iframe.removeAttr('hidden');\r\n  };\r\n\r\n  var updateViewing = function (url, $viewing) {\r\n    $viewing.html('<a href=\"' + url + '\">' + url + '</a>');\r\n  };\r\n\r\n  var updateLayout = function ($tbodys, archiveMode) {\r\n    var $parent = $tbodys.parent();\r\n    $tbodys\r\n      .detach()\r\n      .each(function () {\r\n        var $tbody = $(this),\r\n            filter = archiveMode ? '.archived' : ':not(.archived)',\r\n            $trs = $('tr' + filter, $tbody).filter(':not(.spacer)');\r\n        if ($trs.length > 0) {\r\n          $trs.filter('.first').removeClass('first');\r\n          $tbody.removeClass('hidden');\r\n          $trs.first().addClass('first');\r\n        } else {\r\n          $tbody.addClass('hidden');\r\n        }\r\n      })\r\n      .appendTo($parent);\r\n  };\r\n\r\n  var hookUserHistory = function () {\r\n    // Loading the HTML from the server may have failed\r\n    $history = $('#history').detach();\r\n    if (!$history.length) {\r\n      return $history;\r\n    }\r\n\r\n    // Cache some useful elements\r\n    var $iframe = $('iframe', $history),\r\n        $viewing = $('#viewing', $history),\r\n        $bins = $history,\r\n        $tbodys = $('tbody', $history),\r\n        $trs = $('tr', $history),\r\n        $toggle = $('.toggle_archive', $history),\r\n        current = null,\r\n        hoverTimer = null;\r\n\r\n    // Archive & un-archive click handlers\r\n    $bins.delegate('.archive, .unarchive', 'click', function () {\r\n      var $this = $(this),\r\n          $row = $this.parents('tr');\r\n      // Instantly update this row and the page layout\r\n      $row.toggleClass('archived');\r\n\r\n      analytics[this.pathname.indexOf('unarchive') === -1 ? 'archive' : 'unarchive'](jsbin.root + $row.data('url'));\r\n\r\n      updateLayout($tbodys, $history.hasClass('archive_mode'));\r\n      // Then send the update to the server\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: $this.attr('href'),\r\n        error: function () {\r\n          // Undo if something went wrong\r\n          alert('Something went wrong, please try again');\r\n          $row.toggleClass('archived');\r\n          updateLayout($tbodys, $history.hasClass('archive_mode'));\r\n        },\r\n        success: function () {}\r\n      });\r\n      return false;\r\n    });\r\n\r\n    // Handle toggling of archive view\r\n    $toggle.change(function () {\r\n      $history.toggleClass('archive_mode');\r\n      var archive = $history.hasClass('archive_mode');\r\n      analytics.archiveView(archive);\r\n      updateLayout($tbodys, archive);\r\n    });\r\n\r\n    var selected = null;\r\n    $bins.delegate('a', 'click', function (event) {\r\n      if (event.shiftKey || event.metaKey) { return; }\r\n\r\n      var $this = $(this);\r\n\r\n      if ($this.closest('.action').length) {\r\n        // let the existing handlers deal with action links\r\n        return;\r\n      }\r\n\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation(); // prevent further delegates\r\n      if ($this.data('toggle') === 'history') {\r\n        jsbin.panels.allEditors(function (panel) {\r\n          if (panel.editor.getCode().trim().length) {\r\n            panel.show();\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      var $tr = $this.closest('tr');\r\n      var data = $tr.data();\r\n      var url = jsbin.root + data.url;\r\n\r\n      if (selected === this) {\r\n        window.location = data.editUrl;\r\n      } else {\r\n        $trs.removeClass('selected');\r\n        $tr.addClass('selected');\r\n        updatePreview(url, $iframe);\r\n        updateViewing(url, $viewing);\r\n\r\n        selected = this;\r\n      }\r\n    });\r\n\r\n    // Load bin from data-edit-url attribute when user clicks on a row\r\n    $bins.delegate('tr:not(.spacer)', 'click', function (event) {\r\n      if (event.shiftKey || event.metaKey) { return; }\r\n      $(this).find('.url a:first').click();\r\n    });\r\n\r\n    // Update the time every 30 secs\r\n    // Need to replace Z in ISO8601 timestamp with +0000 so prettyDate() doesn't\r\n    // completely remove it (and parse the date using the local timezone).\r\n    $('a[pubdate]', $history).attr('pubdate', function (i, val) {\r\n      return val.replace('Z', '+0000');\r\n    }).prettyDate();\r\n\r\n    // Update the layout straight away\r\n    setTimeout(function () {\r\n      updateLayout($tbodys, false);\r\n    }, 0);\r\n\r\n    $document.trigger('history:open');\r\n\r\n    return $history;\r\n  };\r\n\r\n  // inside a ready call because history DOM is rendered *after* our JS to improve load times.\r\n  $(document).on('jsbinReady', function ()  {\r\n    if (jsbin.embed) {\r\n      return;\r\n    }\r\n\r\n    var $panelButtons = $('#panels a'),\r\n        $homebtn = $('.homebtn'),\r\n        panelsVisible = $body.hasClass('panelsVisible');\r\n\r\n    var panelCloseIntent = function() {\r\n      var activeCount = $panelButtons.filter('.active').length;\r\n      if (activeCount === 1 && $(this).hasClass('active')) {\r\n        loadList();\r\n      }\r\n    };\r\n\r\n    // this code attempts to only call the list ajax request only if\r\n    // the user should want to see the list page - most users will\r\n    // jump in and jump out of jsbin, and never see this page,\r\n    // so let's not send this ajax request.\r\n    //\r\n    // The list should be loaded when:\r\n    //   - user hovers the home button\r\n    //   - they close all the panels\r\n    //   - they arrive at the page with no panels open\r\n\r\n    $homebtn.on('click', loadList);\r\n    $panelButtons.on('mousedown', panelCloseIntent);\r\n\r\n    $document.on('history:load', loadList);\r\n\r\n    if (!panelsVisible) {\r\n      loadList();\r\n    }\r\n\r\n  });\r\n\r\n  return {\r\n    loadList,\r\n    updatePreview,\r\n    updateViewing,\r\n    updateLayout,\r\n    hookUserHistory\r\n  };\r\n\r\n});"]}