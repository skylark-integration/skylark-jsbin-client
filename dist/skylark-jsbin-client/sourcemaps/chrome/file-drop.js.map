{"version":3,"sources":["chrome/file-drop.js"],"names":["define","$","jsbin","window","File","FileList","FileReader","holder","cursorPosition","panel","guid","s4","Math","floor","random","toString","substring","uploadAsset","file","loading","document","createElement","className","innerHTML","currentStatus","widget","insertPosition","getCursor","lameEditor","insertTextArea","line","addLineWidget","coverGutter","nohscroll","S3Upload","s3_sign_put_url","s3_object_name","name","replace","files","onProgress","percent","status","requestAnimationFrame","progress","onError","reason","fromServer","console","error","style","color","setTimeout","clear","onFinishS3Put","url","getInsertText","type","trigger","panelId","id","replaceRange","el","string","select","start","selectionStart","end","selectionEnd","target","value","length","mime","cm","processor","state","processors","indexOf","dragging","getFileData","item","Promise","resolve","reject","kind","getAsString","filename","getAsFile","ondragover","ondragend","on","jQueryEvent","this","closest","CodeMirror","event","originalEvent","items","clipboardData","types","promises","i","push","all","then","data","sort","a","b","split","catch","log","stack","preventDefault","e","coordsChar","top","y","left","x","setCursor","jstypes","csstypes","htmltypes","ondrop","dataTransfer","reader","onload","toLowerCase","editors","scroller","result","editor","setCode","show","worker","Worker","postMessage","$el","find","append","onmessage","scrollTop","body","readAsText","allowDrop"],"mappings":"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","file":"../../chrome/file-drop.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  function allowDrop(holder) {\r\n    var cursorPosition = null;\r\n    var panel = null;\r\n\r\n    var guid = (function() {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n      }\r\n      return function() {\r\n        return s4() + s4();\r\n      };\r\n    })();\r\n\r\n    function uploadAsset(file) {\r\n      var loading = document.createElement('div');\r\n      loading.className = 'assetLoading';\r\n      loading.innerHTML = '0% uploading...';\r\n      var currentStatus = 0;\r\n\r\n      var progress = function progress(percent, status) {\r\n        if (percent - currentStatus < 10) {\r\n          currentStatus = percent;\r\n        } else {\r\n          currentStatus += 10;\r\n          requestAnimationFrame(function () {\r\n            progress(percent, status);\r\n          });\r\n        }\r\n\r\n        if (loading && currentStatus > 0) {\r\n          if (currentStatus > 97) {\r\n            loading.innerHTML = '97% uploaded...';\r\n            // because there's some lag between 100% and actually rendering\r\n          } else {\r\n            loading.innerHTML = currentStatus + '% uploaded...';\r\n          }\r\n        }\r\n      };\r\n\r\n      var widget = null;\r\n      var insertPosition = cursorPosition || panel.getCursor();\r\n      if (!jsbin.lameEditor) {\r\n        var line = cursorPosition ? cursorPosition.line : panel.getCursor().line;\r\n        widget = panel.addLineWidget(line, loading, {coverGutter: false, nohscroll: true});\r\n      } else {\r\n        insertTextArea(panel, 'Uploading ...', true);\r\n      }\r\n\r\n      var s3upload = new S3Upload({\r\n        s3_sign_put_url: '/account/assets/sign',\r\n        s3_object_name: file.name.replace(/\\s+/g, '-'),\r\n        files: [file],\r\n\r\n        onProgress: function (percent, status) {\r\n          if (!jsbin.lameEditor) {\r\n            requestAnimationFrame(function () {\r\n              progress(percent, status);\r\n            });\r\n          }\r\n        },\r\n\r\n        onError: function (reason, fromServer) {\r\n          currentStatus = -1;\r\n          console.error('Failed to upload: ' + fromServer);\r\n          loading.innerHTML = fromServer || 'Failed to complete';\r\n          loading.style.color = 'red';\r\n          panel = null;\r\n          cursorPosition = null;\r\n          if (widget) {\r\n            setTimeout(function () {\r\n              widget.clear();\r\n            }, 4000);\r\n          }\r\n        },\r\n\r\n        onFinishS3Put: function (url) {\r\n          if (!jsbin.lameEditor) {\r\n            widget.clear();\r\n            panel.replaceRange(getInsertText(file.type, panel, url), insertPosition);\r\n          } else {\r\n            insertTextArea(panel, getInsertText(file.type, panel, url));\r\n            $(document).trigger('codeChange', { panelId: panel.id });\r\n          }\r\n          panel = null;\r\n          cursorPosition = null;\r\n        }\r\n      });\r\n    }\r\n\r\n    function insertTextArea(el, string, select) {\r\n      var start = el.selectionStart;\r\n      var end = el.selectionEnd;\r\n\r\n      var target = el;\r\n      var value = target.value;\r\n\r\n      // set textarea value to: text before caret + tab + text after caret\r\n      target.value = value.substring(0, start) + string + value.substring(end);\r\n\r\n      // put caret at right position again (add one for the tab)\r\n      el.selectionStart = el.selectionEnd = start + 1;\r\n\r\n      if (select) {\r\n        el.selectionStart -= 1;\r\n        el.selectionEnd = el.selectionEnd + string.length;\r\n      } else {\r\n        el.selectionStart = el.selectionEnd = start + string.length;\r\n      }\r\n    }\r\n\r\n    function getInsertText(mime, cm, url) {\r\n      // var panel = jsbin.panels.panels[cm.id];\r\n      var processor = jsbin.state.processors[cm.id];\r\n\r\n      if (cm.id === 'html') {\r\n        if (mime.indexOf('image/') === 0) {\r\n          if (processor === 'markdown') {\r\n            return '![' + url + '](' + url + ')';\r\n          }\r\n\r\n          if (processor === 'jade') {\r\n            return 'img(src=\"' + url + '\")';\r\n          }\r\n\r\n          return '<img src=\"' + url + '\">';\r\n        }\r\n\r\n        return url;\r\n      }\r\n\r\n      if (cm.id === 'css') {\r\n        if (mime.indexOf('image/') === 0) {\r\n          return 'url(' + url + ')';\r\n        }\r\n\r\n        return url;\r\n      }\r\n\r\n      // note: js just gets the url...\r\n      return url;\r\n    }\r\n\r\n    var dragging = false;\r\n\r\n    holder.ondragover = function () {\r\n      dragging = true;\r\n      return false;\r\n    };\r\n\r\n    holder.ondragend = function () {\r\n      dragging = false;\r\n      return false;\r\n    };\r\n\r\n    function getFileData(item) {\r\n      return new Promise(function (resolve, reject) {\r\n        if (item.kind === 'string') {\r\n          item.getAsString(function (filename) {\r\n            resolve(filename);\r\n          });\r\n        } else {\r\n          resolve(item.getAsFile());\r\n        }\r\n      });\r\n    }\r\n\r\n    $('#bin textarea').on('paste', function (jQueryEvent) {\r\n      if ($(this).closest('.CodeMirror').length) {\r\n        panel = $(this).closest('.CodeMirror')[0].CodeMirror;\r\n      } else {\r\n        panel = this;\r\n      }\r\n\r\n      var event = jQueryEvent.originalEvent;\r\n      var items = event.clipboardData.items;\r\n\r\n      // this means we've copied a file that's an app icon, or it's just text\r\n      // which we don't want to kick in anyway.\r\n      if (!items || event.clipboardData.types[0].indexOf('text/') === 0) {\r\n        return;\r\n      }\r\n\r\n      var file = null;\r\n      var promises = [];\r\n      for (var i = 0; i < items.length; i++) {\r\n        promises.push(getFileData(items[i]));\r\n      }\r\n\r\n      Promise.all(promises).then(function (data) {\r\n        var blobname = data.sort(function (a, b) {\r\n          return typeof a === 'string' ? 1 : -1;\r\n        });\r\n        var file = data[0];\r\n        file.name = data[1] || guid() + '.' + file.type.split('/')[1];\r\n\r\n        uploadAsset(file);\r\n      }).catch(function (error) {\r\n        console.log(error.stack);\r\n      });\r\n\r\n      // FIXME???\r\n      jQueryEvent.preventDefault();\r\n    });\r\n\r\n    $('.CodeMirror').on('mousemove', function (e) {\r\n      if (!dragging) {\r\n        return;\r\n      }\r\n\r\n      panel = this.CodeMirror;\r\n      cursorPosition = this.CodeMirror.coordsChar({ top: event.y, left: event.x });\r\n      this.CodeMirror.setCursor(cursorPosition);\r\n    });\r\n\r\n    var jstypes = ['javascript', 'coffeescript', 'coffee', 'js'];\r\n    var csstypes = ['css', 'less', 'sass', 'scss'];\r\n    var htmltypes = ['html', 'markdown', 'plain'];\r\n\r\n    holder.ondrop = function (e) {\r\n      dragging = false;\r\n      e.preventDefault();\r\n\r\n      if ($(e.target).closest('.CodeMirror').length) {\r\n        panel = $(e.target).closest('.CodeMirror')[0].CodeMirror;\r\n      } else {\r\n        panel = e.target;\r\n      }\r\n\r\n      var file = e.dataTransfer.files[0],\r\n          reader = new FileReader();\r\n\r\n      if (file.type.indexOf('text/') !== 0) {\r\n        // this isn't a text file for populating the panel, try uploading instead\r\n        uploadAsset(file);\r\n        return;\r\n      }\r\n\r\n      reader.onload = function (event) {\r\n        // put JS in the JavaScript panel\r\n        var type = file.type ? file.type.toLowerCase().replace(/^(text|application)\\//, '') : file.name.toLowerCase().replace(/.*\\./g, ''),\r\n            panelId = null,\r\n            panel = editors[panelId],\r\n            syncCode = event.target.result,\r\n            scroller = null;\r\n\r\n        if (jstypes.indexOf(type) !== -1) {\r\n          panelId = 'javascript';\r\n        } else if (csstypes.indexOf(type) !== -1) {\r\n          panelId = 'css';\r\n        } else if (htmltypes.indexOf(type) !== -1) {\r\n          panelId = 'html';\r\n        }\r\n\r\n        if (panelId === null) {\r\n          // then we have an asset upload\r\n          return uploadAsset(file);\r\n        }\r\n\r\n        panel = editors[panelId];\r\n        scroller = panel.editor.scroller;\r\n\r\n        panel.setCode(event.target.result);\r\n        panel.show();\r\n\r\n        try {\r\n          // now kick off - basically just doing a copy and paste job from @wookiehangover - thanks man! :)\r\n          var worker = new Worker(jsbin['static'] + '/js/editors/sync-worker.js');\r\n\r\n          // pass the worker the file object\r\n          worker.postMessage(file);\r\n\r\n          panel.$el.find('> .label').append('<small> (live: edit & save in your fav editor)</small>');\r\n\r\n          // bind onmessage handler\r\n          worker.onmessage = function (event) {\r\n            var top = scroller.scrollTop;\r\n            panel.setCode(event.data.body);\r\n            scroller.scrollTop = top;\r\n            syncCode = event.data.body;\r\n          };\r\n        } catch (e) {\r\n          // fail on the awesomeness...oh well\r\n        }\r\n      };\r\n\r\n      reader.readAsText(file);\r\n\r\n      return false;\r\n    };\r\n  }\r\n\r\n  // test for dnd and file api first\r\n  if (!!(window.File && window.FileList && window.FileReader)) {\r\n    allowDrop(document.body);\r\n  }\r\n});"]}