{"version":3,"sources":["chrome/font.js"],"names":["define","$","jsbin","cache","font","document","head","getElementsByTagName","selectors","size","settings","cssText","el","createElement","type","styleSheet","appendChild","createTextNode","Object","defineProperty","configurable","enumerable","get","set","val","e","insertFont","value","style","innerHTML","window","localStorage","getItem","JSON","parse","md5","removeItem","addEventListener","request","XMLHttpRequest","url","static","version","open","onload","this","status","response","setItem","send"],"mappings":";;;;;;;AAAAA,QACE,iBACC,YACD,SAAUC,EAAEC,GAMZ,IA4CIC,EA5CAC,EAAO,SAAWC,GACpB,IAAIC,EAAOD,EAASE,qBAAqB,QAAQ,GAC7CC,EAAY,uHACZC,EAAOP,EAAMQ,SAASN,MAAQ,GAGlC,SAASA,EAAKK,GACZ,IAAIE,EAAUH,EAAY,gBAAkBC,EAAO,QAC/CG,EAAKP,EAASQ,cAAc,SAEhCD,EAAGE,KAAO,WACNF,EAAGG,WACLH,EAAGG,WAAWJ,QAAUA,EAExBC,EAAGI,YAAYX,EAASY,eAAeN,IAEzCL,EAAKU,YAAYJ,GAGnB,GAAIM,OAAOC,gBAAkBjB,EAAMQ,SACjC,IACEQ,OAAOC,eAAejB,EAAMQ,SAAU,QACpCU,cAAc,EACdC,YAAY,EACZC,IAAK,WACH,OAAOb,GAETc,IAAK,SAAUC,GAEbpB,EADAK,EAAa,EAANe,MAIX,MAAOC,IAOX,OAFArB,EAAKK,GAEEL,EAvCE,CAwCRC,UAMH,SAASqB,EAAWC,GAClB,IAAIC,EAAQvB,SAASQ,cAAc,SACnCe,EAAMC,UAAYF,EAClBtB,SAASC,KAAKU,YAAYY,GAG5B,KACEzB,EAAQ2B,OAAOC,aAAaC,QAVpB,YADA,sCAaN7B,EAAQ8B,KAAKC,MAAM/B,IACTgC,IACRT,EAAWvB,EAAMwB,QAGjBG,OAAOC,aAAaK,WAjBhB,SAkBJjC,EAAQ,OAGZ,MAAOsB,GAEP,OAyBF,OAtBKtB,GAEH2B,OAAOO,iBAAiB,OAAQ,WAC9B,IAAIC,EAAU,IAAIC,eAEdC,EAAMtC,EAAMuC,OAAS,yDAA2DvC,EAAMwC,QAC1FJ,EAAQK,KAAK,MAAOH,GAAK,GACzBF,EAAQM,OAAS,WACf,GAAmB,KAAfC,KAAKC,OACP,IAEEpB,EADWO,KAAKC,MAAMW,KAAKE,UACPpB,OACpBG,OAAOC,aAAaiB,QAtCpB,QAsCiCH,KAAKE,UACtC,MAAOtB,MAKba,EAAQW,SAIL/C,EAAME,KAAOA","file":"../../chrome/font.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /** =========================================================================\r\n   * font\r\n   * Reads user setting and configures the CodeMirror font size\r\n   * ========================================================================== */\r\n  /*global jsbin:true*/\r\n  var font = (function (document) {\r\n    var head = document.getElementsByTagName('head')[0],\r\n        selectors = '#output li, #exec, .fakeInput, .fakeInput:before, #exec:before, #bin .editbox .CodeMirror, .mobile .editbox textarea',\r\n        size = jsbin.settings.font || 14;\r\n\r\n    // via http://stackoverflow.com/questions/2041495/create-dynamic-inline-stylesheet\r\n    function font(size) {\r\n      var cssText = selectors + '{ font-size: ' + size + 'px; }',\r\n          el = document.createElement('style');\r\n\r\n      el.type = 'text/css';\r\n      if (el.styleSheet) {\r\n        el.styleSheet.cssText = cssText;//IE only\r\n      } else {\r\n        el.appendChild(document.createTextNode(cssText));\r\n      }\r\n      head.appendChild(el);\r\n    }\r\n\r\n    if (Object.defineProperty && jsbin.settings) {\r\n      try {\r\n        Object.defineProperty(jsbin.settings, 'font', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function () {\r\n            return size;\r\n          },\r\n          set: function (val) {\r\n            size = val * 1;\r\n            font(size);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        // IE8 seems to attempt the code above, but it totally fails\r\n      }\r\n    }\r\n\r\n    font(size);\r\n\r\n    return font;\r\n  })(document);\r\n\r\n  var md5 = 'a3a02e450f1f79f4c3482279d113b07e';\r\n  var key = 'fonts';\r\n  var cache;\r\n\r\n  function insertFont(value) {\r\n    var style = document.createElement('style');\r\n    style.innerHTML = value;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  try {\r\n    cache = window.localStorage.getItem(key);\r\n    if (cache) {\r\n      cache = JSON.parse(cache);\r\n      if (cache.md5 === md5) {\r\n        insertFont(cache.value);\r\n      } else {\r\n        // busting cache when md5 doesn't match\r\n        window.localStorage.removeItem(key);\r\n        cache = null;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // most likely LocalStorage disabled\r\n    return;\r\n  }\r\n\r\n  if (!cache) {\r\n    // fonts not in LocalStorage or md5 did not match\r\n    window.addEventListener('load', function () {\r\n      var request = new XMLHttpRequest();\r\n      var response;\r\n      var url = jsbin.static + '/css/fonts.a3a02e450f1f79f4c3482279d113b07e.woff.json?' + jsbin.version;\r\n      request.open('GET', url, true);\r\n      request.onload = function () {\r\n        if (this.status == 200) {\r\n          try {\r\n            response = JSON.parse(this.response);\r\n            insertFont(response.value);\r\n            window.localStorage.setItem(key, this.response);\r\n          } catch (e) {\r\n            // localStorage is probably full\r\n          }\r\n        }\r\n      };\r\n      request.send();\r\n    });\r\n  }\r\n\r\n  return jsbin.font = font;\r\n});"]}