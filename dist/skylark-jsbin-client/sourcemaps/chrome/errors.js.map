{"version":3,"sources":["chrome/errors.js"],"names":["define","$","jsbin","detailsSupport","document","createElement","html","browser","msie","version","$error","appendTo","hide","find","click","this","nextAll","toggle","open","setTimeout","$document","trigger","JSHINT","_data","data","onlyErrors","errors","i","length","evidence","push","reason","indexOf","delegate","index","editors","javascript","editor","setSelection","line","ch","focus","checkForErrors","visible","source","options","hint","panels","named","getCode","eqnull","extend","settings","jshintOptions","jshintErrors","is","escapeHTML","join","text","remove","append","show","jshint","undefined","bind","throttle"],"mappings":";;;;;;;AAAAA,QACE,iBACA,+BACC,YACD,SAAUC,EAAEC,GAGZ,IAgBIC,EAAiB,SAAUC,SAASC,cAAc,WAGlDC,EAAOL,EAAEM,QAAQC,MAAQP,EAAEM,QAAQE,QAAU,EAAI,2DAA6D,iEAE9GC,EAAST,EAAEK,GAAMK,SAAS,qBAAqBC,OAEnDF,EAAOG,KAAK,YAAYC,MAAM,WACvBX,IACHF,EAAEc,MAAMC,UAAUC,SAClBP,EAAO,GAAGQ,MAAQR,EAAO,GAAGQ,MAG9BC,WAAW,WACTjB,EAAMkB,UAAUC,QAAQ,gBACvB,MAGAlB,IACHO,EAAO,GAAGQ,MAAO,GAInBI,OAAOC,MAAQD,OAAOE,KACtBF,OAAOE,KAAO,SAAUC,GACtB,IAAID,EAAOF,OAAOC,QACdG,KAEJ,GAAID,GAAcD,EAAKE,OAAQ,CAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKE,OAAOE,OAAQD,IACf,OAAnBH,EAAKE,OAAOC,IAAeH,EAAKE,OAAOC,GAAGE,SAC5CH,EAAOI,KAAKN,EAAKE,OAAOC,IACI,OAAnBH,EAAKE,OAAOC,IAA6D,IAA9CH,EAAKE,OAAOC,GAAGI,OAAOC,QAAQ,aAClEN,EAAOI,KAAK,oCAGhB,OACEJ,OAAQA,GAIV,OADAF,EAAKE,UACEF,GAIXd,EAAOuB,SAAS,KAAM,QAAS,WAC7B,IAAIP,EAASJ,OAAOE,MAAK,GAAME,OAC/B,GAAIA,EAAOE,OAAQ,CACjB,IAAID,EAAIjB,EAAOG,KAAK,MAAMqB,MAAMnB,MAQhC,OAPIW,EAAOC,GAAGI,SACZI,QAAQC,WAAWC,OAAOC,cAAeC,KAAMb,EAAOC,GAAGY,KAAO,EAAGC,GAAI,IAAOD,KAAMb,EAAOC,GAAGY,KAAO,IACrGJ,QAAQC,WAAWC,OAAOI,UAKrB,KAIX,IAAIC,EAAiB,WAEnB,GAAKP,QAAQC,WAAWO,QAAxB,CAEA,IA/EIC,EAGAC,EA4EAC,GA/EAF,EAASG,OAAOC,MAAMZ,WAAWC,OAAOY,UAGxCJ,GACFK,QAAU,GAGZjD,EAAEkD,OAAON,EAAS3C,EAAMkD,SAASC,qBACxB/B,OAAOsB,EAAQC,IAELvB,OAAOE,QAsEtB8B,EAAehC,OAAOE,MAAK,GAC3BE,EAAS,GACTiB,EAAUjC,EAAO6C,GAAG,YAExB,IAAa,IAATT,GAAiBH,EACnBjC,EAAOE,OACPV,EAAMkB,UAAUC,QAAQ,oBACnB,GAAIiC,EAAa5B,OAAOE,OAAQ,CACrC,IAAItB,GAAQ,QACZoB,EAAS4B,EAAa5B,OACtB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IACR,iBAAdD,EAAOC,GAChBrB,EAAKwB,KAAK0B,WAAW9B,EAAOC,KAE5BrB,EAAKwB,KAAK,QAAUJ,EAAOC,GAAGY,KAAO,KAAOiB,WAAW9B,EAAOC,GAAGE,UAAY,QAAU2B,WAAW9B,EAAOC,GAAGI,SAIhHzB,EAAOA,EAAKmD,KAAK,QAAU,QAE3B/C,EAAOG,KAAK,YAAY6C,KAAoC,IAA/BJ,EAAa5B,OAAOE,OAAe,YAAc0B,EAAa5B,OAAOE,OAAS,aAC3GlB,EAAOG,KAAK,MAAM8C,SAEbxD,IAAqC,IAAnBO,EAAO,GAAGQ,OAAgBZ,EAAOL,EAAEK,GAAMM,QAEhEF,EAAOkD,OAAOtD,GAAMuD,OACpB3D,EAAMkB,UAAUC,QAAQ,mBAIE,IAA1BnB,EAAMkD,SAASU,aAA6CC,IAA1B7D,EAAMkD,SAASU,SACnD7D,EAAEG,UAAU4D,KAAK,aAAc9D,EAAM+D,SAASvB,EAAgB,MAC9DzC,EAAEG,UAAU4D,KAAK,aAActB","file":"../../chrome/errors.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n  \"skylark-coder/editors/panels\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /*globals $:true, JSHINT:true, editors:true, $document:true, escapeHTML:true, jsbin:true, throttle:true */\r\n\r\n  var jshint = function () {\r\n    var source = panels.named.javascript.editor.getCode();\r\n    \r\n    // default jshint options\r\n    var options = {\r\n      'eqnull': true\r\n    };\r\n    \r\n    $.extend(options, jsbin.settings.jshintOptions || {});\r\n    var ok = JSHINT(source, options);\r\n\r\n    return ok ? true : JSHINT.data();\r\n  };\r\n\r\n  var jshintEnabled = true;\r\n\r\n  var detailsSupport = 'open' in document.createElement('details');\r\n\r\n  // yeah, this is happening. Fucking IE...sheesh.\r\n  var html = $.browser.msie && $.browser.version < 9 ? '<div class=\"details\"><div class=\"summary\">warnings</div>' : '<details><summary class=\"summary\">warnings</summary></details>';\r\n\r\n  var $error = $(html).appendTo('.panel.javascript').hide();\r\n\r\n  $error.find('.summary').click(function () {\r\n    if (!detailsSupport) {\r\n      $(this).nextAll().toggle();\r\n      $error[0].open = !$error[0].open;\r\n    }\r\n    // trigger a resize after the click has completed and the details is close\r\n    setTimeout(function () {\r\n      jsbin.$document.trigger('sizeeditors');\r\n    }, 10);\r\n  });\r\n\r\n  if (!detailsSupport) {\r\n    $error[0].open = false;\r\n  }\r\n\r\n  // modify JSHINT to only return errors that are of value (to me, for displaying)\r\n  JSHINT._data = JSHINT.data;\r\n  JSHINT.data = function (onlyErrors) {\r\n    var data = JSHINT._data(),\r\n        errors = [];\r\n\r\n    if (onlyErrors && data.errors) {\r\n      for (var i = 0; i < data.errors.length; i++) {\r\n        if (data.errors[i] !== null && data.errors[i].evidence) { // ignore JSHINT just quitting\r\n          errors.push(data.errors[i]);\r\n        } else if (data.errors[i] !== null && data.errors[i].reason.indexOf('Stopping') === 0) {\r\n          errors.push('Fatal errors, unable to continue');\r\n        }\r\n      }\r\n      return {\r\n        errors: errors\r\n      };\r\n    } else {\r\n      data.errors = [];\r\n      return data;\r\n    }\r\n  };\r\n\r\n  $error.delegate('li', 'click', function () {\r\n    var errors = JSHINT.data(true).errors;\r\n    if (errors.length) {\r\n      var i = $error.find('li').index(this);\r\n      if (errors[i].reason) {\r\n        editors.javascript.editor.setSelection({ line: errors[i].line - 1, ch: 0 }, { line: errors[i].line - 1 });\r\n        editors.javascript.editor.focus();\r\n      }\r\n      // var line = editors.javascript.nthLine(errors[0].line);\r\n      // editors.javascript.jumpToLine(line);\r\n      // editors.javascript.selectLines(line, 0, editors.javascript.nthLine(errors[0].line + 1), 0);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  var checkForErrors = function () {\r\n    // exit if the javascript panel isn't visible or jshint is disabled (for example by the user or when using a js preprocessor)\r\n    if (!editors.javascript.visible || !jshintEnabled) return;\r\n\r\n    var hint = jshint(),\r\n        jshintErrors = JSHINT.data(true),\r\n        errors = '',\r\n        visible = $error.is(':visible');\r\n\r\n    if (hint === true && visible) {\r\n      $error.hide();\r\n      jsbin.$document.trigger('sizeeditors');\r\n    } else if (jshintErrors.errors.length) {\r\n      var html = ['<ol>'];\r\n      errors = jshintErrors.errors;\r\n      for (var i = 0; i < errors.length; i++) {\r\n        if (typeof errors[i] === 'string') {\r\n          html.push(escapeHTML(errors[i]));\r\n        } else {\r\n          html.push('Line ' + errors[i].line + ': ' + escapeHTML(errors[i].evidence) + ' --- ' + escapeHTML(errors[i].reason));\r\n        }\r\n      }\r\n\r\n      html = html.join('<li>') + '</ol>';\r\n\r\n      $error.find('.summary').text(jshintErrors.errors.length === 1 ? '1 warning' : jshintErrors.errors.length + ' warnings');\r\n      $error.find('ol').remove();\r\n\r\n      if (!detailsSupport && $error[0].open === false) html = $(html).hide();\r\n\r\n      $error.append(html).show();\r\n      jsbin.$document.trigger('sizeeditors');\r\n    }\r\n  };\r\n\r\n  if (jsbin.settings.jshint === true || jsbin.settings.jshint === undefined) {\r\n    $(document).bind('codeChange', jsbin.throttle(checkForErrors, 1000));\r\n    $(document).bind('jsbinReady', checkForErrors);\r\n  }\r\n\r\n  // })();\r\n});"]}