{"version":3,"sources":["chrome/infocard.js"],"names":["define","$","hideOpen","spinner","prettyDate","panels","jsbin","analytics","window","setupInfocard","embed","$template","$header","find","canvas","s","htmlpanel","named","html","viewers","es","re","head","meta","title","length","on","insertTag","getCode","value","this","updateCode","replace","all","capture","state","updateSettings","description","updateHeaders","headers","each","val","trim","add","e","toTrigger","infocardVisible","preventDefault","infocard","toggleClass","index","klass","indexOf","trigger","one","statusCode","data","getJSON","static","codes","forEach","code","string","$headers","event","$fields","$clones","clone","before","eq","focus","closest","initHandlers","updateInfoCard","$document","bind","updateStats","_data","JSON","parse","connections","addClass","$b","removeClass","c","setTimeout","listenStats","owner","EventSource","close","getURL","checksum","addEventListener","throttle","tag","editor","userhtml","type","text","processor","processors","getPanelText","test","setCode","result","cursor","cm","selected","somethingSelected","visible","listSelections","getCursor","mobile","setCursor","setSelections","metadata","classes","name","attr","avatar","push","user","stop","streaming","start","last_updated","pro","visibility","join","parent","removeAttr","hiddenProperty","document","visibilityChangeEvent","handleVisibility","url","newurl","location","toString","saveDisabled","pathname","slice","getScript","version"],"mappings":"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","file":"../../chrome/infocard.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-chrome/hideOpen\",\r\n  \"skylark-jsbin-chrome/spinner\",\r\n  \"skylark-jsbin-chrome/prettyDate\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,hideOpen,spinner,prettyDate, panels,jsbin,analytics) {\r\n  if ('EventSource' in window) {\r\n    return setupInfocard()\r\n  } else {\r\n    $.getScript(jsbin['static'] + '/js/vendor/eventsource.js', setupInfocard);\r\n  }\r\n  function setupInfocard() {\r\n    /*global spinner, $, jsbin, prettyDate, EventSource, throttle, $document, analytics, throttle*/\r\n    'use strict';\r\n\r\n    // don't insert this on embeded views\r\n    if (jsbin.embed) {\r\n      return;\r\n    }\r\n\r\n    var $template = $('#infocard'); // donkey way of cloning from template\r\n    var $header = $template.find('header');\r\n    var canvas = $header.find('canvas')[0];\r\n    var s = spinner(canvas);\r\n    var htmlpanel = panels.named.html;\r\n    var viewers = 0;\r\n    var es = null;\r\n\r\n    var re = {\r\n      head: /<head(.*)\\n/i,\r\n      meta: /(<meta name=\"description\" content=\")([^\"]*)/im,\r\n      title: /<title>(.*)<\\/title>/im\r\n    };\r\n\r\n    if ($template.length === 0) {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    function updateStats(event, _data) {\r\n      var data = _data ? JSON.parse(_data) : JSON.parse(event.data);\r\n\r\n      if (data.connections > 0 && viewers === 0) {\r\n        $template.addClass('viewers');\r\n      }\r\n\r\n      if (viewers !== data.connections) {\r\n        var $b = $header.find('.viewers b').removeClass('up down').html('<b>' + data.connections + '<br>' + viewers + '<br>' + data.connections + '</b>'),\r\n            c = viewers > data.connections ? 'down' : 'up';\r\n        setTimeout(function () {\r\n          $b.addClass(c);\r\n        }, 0);\r\n      }\r\n\r\n      viewers = data.connections;\r\n\r\n      if (viewers === 0) {\r\n        setTimeout(function () {\r\n          $template.removeClass('viewers');\r\n        }, 250);\r\n      }\r\n\r\n    }\r\n\r\n    function listenStats(owner) {\r\n      if (window.EventSource && owner) {\r\n        // TODO use pagevisibility api to close connection\r\n        if (es) {\r\n          es.close();\r\n        }\r\n        es = new EventSource(jsbin.getURL() + '/stats?checksum=' + jsbin.state.checksum);\r\n        es.addEventListener('stats', jsbin.throttle(updateStats, 1000));\r\n      }\r\n    }\r\n\r\n    function insertTag(tag) {\r\n      var cm = htmlpanel.editor;\r\n      var html = htmlpanel.getCode();\r\n\r\n      if (tag === 'meta') {\r\n        tag = 'meta name=\"description';\r\n      }\r\n\r\n\r\n      if (html.indexOf('<' + tag) === -1) {\r\n        var userhtml = getPanelText(tag === 'title' ? 'title' : 'description', '');\r\n        if (re.head.test(html)) {\r\n          html = html.replace(re.head, '<head$1\\n' + userhtml);\r\n        } else {\r\n          // slap in the top\r\n          html = userhtml + html;\r\n        }\r\n        htmlpanel.setCode(html);\r\n      }\r\n    }\r\n\r\n    function getPanelText(type, text) {\r\n      var processor = jsbin.state.processors.html;\r\n\r\n      text = text.replace(/\"/g, '&quot;');\r\n\r\n      if (type === 'title') {\r\n        if (processor === 'jade') {\r\n          return 'title ' + text + '\\n';\r\n        }\r\n\r\n        return '<title>' + text + '</title>\\n';\r\n      }\r\n\r\n      if (type === 'description') {\r\n        if (processor === 'jade') {\r\n          return 'meta(name=\"description\", content=\"' + text + '\")\\n';\r\n        }\r\n\r\n        return '<meta name=\"description\" content=\"' + text + '\">\\n';\r\n      }\r\n\r\n      return text;\r\n    }\r\n\r\n\r\n    if ($template.find('.settings')) {\r\n      $template.find('#title').on('input', function () {\r\n        insertTag('title');\r\n        var html = htmlpanel.getCode();\r\n        var value = this.value;\r\n        var result = html.replace(re.title, function (all, capture) {\r\n          return '<title>' + value.replace(/</g, '&lt;').replace(/>/g, '&gt;') + '</title>';\r\n        });\r\n        updateCode(result);\r\n        jsbin.state.updateSettings({ title: this.value });\r\n      });\r\n\r\n      $template.find('#description').on('input', function () {\r\n        insertTag('meta');\r\n        var html = htmlpanel.getCode();\r\n        var value = this.value;\r\n        var result = html.replace(re.meta, function (all, capture) {\r\n          return capture + value.replace(/\"/g, '&quot;');\r\n        });\r\n        updateCode(result);\r\n        jsbin.state.updateSettings({ description: this.value });\r\n      });\r\n    }\r\n\r\n    function updateCode(result) {\r\n      // capture selection and cursor\r\n      var state = null;\r\n      var cursor = null;\r\n      var cm = htmlpanel.editor;\r\n      var selected = cm.somethingSelected();\r\n      if (panels.named.html.visible) {\r\n        if (selected) {\r\n          state = cm.listSelections();\r\n        }\r\n        cursor = cm.getCursor();\r\n      }\r\n\r\n      htmlpanel.setCode(result);\r\n\r\n      // then restore\r\n      if (panels.named.html.visible) {\r\n        if (!jsbin.mobile) cm.setCursor(cursor);\r\n        if (selected) {\r\n          cm.setSelections(state);\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateInfoCard(event) {\r\n      var meta = jsbin.state.metadata || {};\r\n      var classes = [];\r\n      var owner = false;\r\n\r\n      if (meta.name) {\r\n        $header.find('.name b').html(meta.name);\r\n        $header.find('img').attr('src', meta.avatar);\r\n        classes.push(meta.name);\r\n      }\r\n\r\n      if (jsbin.state.checksum || (jsbin.user && (meta.name === jsbin.user.name))) {\r\n        owner = true;\r\n        classes.push('author');\r\n      }\r\n\r\n      if (s) {\r\n        s.stop();\r\n      }\r\n\r\n      if (!jsbin.state.streaming || owner === true) {\r\n        $header.find('time').html(event ? 'just now' : prettyDate(meta.last_updated));\r\n      } else if (owner === false) {\r\n        $header.find('time').html('Streaming');\r\n        classes.push('streaming');\r\n        if (s) {\r\n          s.start();\r\n        }\r\n      }\r\n\r\n      if (!jsbin.checksum) {\r\n        classes.push('meta');\r\n      }\r\n\r\n      if (meta.pro) {\r\n        classes.push('pro');\r\n      }\r\n\r\n      $header.find('.visibility').text(meta.visibility);\r\n\r\n      if (meta.visibility === 'private') {\r\n        classes.push('private');\r\n      } else if (meta.visibility === 'public') {\r\n        classes.push('public');\r\n      } // TODO handle team\r\n\r\n      if (jsbin.state.code) {\r\n        $template.addClass(classes.join(' ')).parent().removeAttr('hidden');\r\n      }\r\n\r\n      if (jsbin.state.streaming) {\r\n        if (window.EventSource && owner) {\r\n          listenStats(owner);\r\n          handleVisibility(owner);\r\n          var url = jsbin.getURL();\r\n          jsbin.$document.on('saved', function () {\r\n            var newurl = window.location.toString();\r\n            if (url !== newurl) {\r\n              es.close();\r\n              listenStats(owner);\r\n            }\r\n          });\r\n        } else if (jsbin.saveDisabled === true && window.location.pathname.slice(-5) === '/edit') {\r\n          $.getScript(jsbin.static + '/js/spike.js?' + jsbin.version);\r\n          jsbin.$document.on('stats', jsbin.throttle(updateStats, 1000));\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleVisibility(owner) {\r\n      var hiddenProperty = 'hidden' in document ? 'hidden' :\r\n        'webkitHidden' in document ? 'webkitHidden' :\r\n        'mozHidden' in document ? 'mozHidden' :\r\n        null;\r\n      var visibilityStateProperty = 'visibilityState' in document ? 'visibilityState' :\r\n        'webkitVisibilityState' in document ? 'webkitVisibilityState' :\r\n        'mozVisibilityState' in document ? 'mozVisibilityState' :\r\n        null;\r\n\r\n      if (visibilityStateProperty) {\r\n        var visibilityChangeEvent = hiddenProperty.replace(/hidden/i, 'visibilitychange');\r\n        document.addEventListener(visibilityChangeEvent, function visibilityChangeEvent() {\r\n          if (document[hiddenProperty]) { // hidden\r\n            es.close();\r\n          } else {\r\n            listenStats(owner);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function initHandlers() {\r\n      $('a.more').add($header).on('mousedown touchstart', function (e) {\r\n        infocardVisible = !infocardVisible; // this is hack :-\\\r\n        hideOpen();\r\n        e.preventDefault();\r\n        analytics.infocard('click', 'no-result');\r\n        var toTrigger;\r\n        $template.toggleClass(function (index, klass) {\r\n          toTrigger = klass.indexOf('open') === -1 ? 'open' : 'close';\r\n          infocardVisible = toTrigger === 'open';\r\n          return 'open';\r\n        }).trigger(toTrigger);\r\n      });\r\n\r\n      $template.one('open', function () {\r\n        var statusCode = $('#status').data('status') || 200;\r\n        $.getJSON(jsbin.static + '/js/http-codes.json', function (codes) {\r\n          var html = '';\r\n          codes.forEach(function (code) {\r\n            html += '<option value=\"' + code.code + '\">' + code.string + '</option>';\r\n          });\r\n          $('#status').html(html).val(statusCode).on('change', function () {\r\n            jsbin.state.updateSettings({ statusCode: this.value });\r\n          });\r\n        });\r\n      }).on('close', function () {\r\n\r\n      });\r\n\r\n      function updateHeaders() {\r\n        // grab all the headers with values and send that instead\r\n        var headers = {};\r\n        $template.find('.row').each(function () {\r\n          if ($(this).find('[name=\"header-value\"]').val().trim()) {\r\n            headers[$(this).find('input:first').val()] = $(this).find('input:last').val();\r\n          }\r\n        });\r\n\r\n        jsbin.state.updateSettings({ headers: headers }, 'PUT');\r\n      }\r\n\r\n      var $headers = $template.find('#headers');\r\n      $template.on('click', '#headers button', function (event) {\r\n        event.preventDefault();\r\n        var $fields = $headers.find('span:last');\r\n        updateHeaders();\r\n\r\n        var $clones = $fields.clone(true);\r\n        $fields.before($clones);\r\n        $fields.find('input').val('').eq(0).focus();\r\n      });\r\n\r\n      $template.on('input', '.row input', function () {\r\n        updateHeaders($(this).closest('.row'));\r\n      });\r\n    }\r\n\r\n    initHandlers();\r\n    updateInfoCard();\r\n    jsbin.$document.bind('saved', updateInfoCard);\r\n  }\r\n});\r\n"]}