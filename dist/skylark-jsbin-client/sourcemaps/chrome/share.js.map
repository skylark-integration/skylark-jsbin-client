{"version":3,"sources":["chrome/share.js"],"names":["define","$","panels","jsbin","length","mapping","live","javascript","$sharepanels","selectedSnapshot","state","revision","$document","on","changed","window","history","replaceState","getURL","withRevision","getQuery","$sharemenu","bind","prop","getVisible","forEach","p","filter","id","latest","checksum","$realtime","$snapshot","$andlive","show","checked","hide","$withLiveReload","disabled","update","find","saveChecksum","trigger","$sharepreview","link","linkselect","embed","form","$directLinks","this","value","removeClass","$share","closest","shareElement","$showShare","hasClass","closedropdown","opendropdown","blur","data","el","type","name","append","undefined","push","i","formData","url","root","shareRoot","OGurl","shareurl","query","panel","join","view","attr","each","hidden","indexOf","className","empty","directLinksHTML","code","ext","named","html","getCode","trim","processors","extensions","toLowerCase","css","JSON","parse","e","href","documentTitle","static","version","replace","m","<",">","\"","&"],"mappings":"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","file":"../../chrome/share.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\"\r\n],function ($,panels,jsbin) {\r\n  'use strict';\r\n  /*globals $, panels, saveChecksum, jsbin, $document, documentTitle*/\r\n\r\n  // only continue if the new share is enabled\r\n  if ($('#sharemenu .share-split').length === 0) {\r\n    return;\r\n  }\r\n\r\n  var mapping = {\r\n    live: 'output',\r\n    javascript: 'js'\r\n  };\r\n  var $sharepanels = $('#sharepanels input[type=\"checkbox\"]');\r\n\r\n  var selectedSnapshot = jsbin.state.revision;\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    selectedSnapshot = jsbin.state.revision;\r\n  });\r\n\r\n  jsbin.$document.on('snapshot', function () {\r\n    jsbin.state.changed = false;\r\n    if (window.history.replaceState) {\r\n      window.history.replaceState(null, '', jsbin.getURL({ withRevision: true }) + '/edit?' + panels.getQuery());\r\n    }\r\n  });\r\n\r\n  var $sharemenu = $('#sharemenu').bind('open', function () {\r\n    // select the right panels\r\n    // hideOpen();\r\n    $sharepanels.prop('checked', false);\r\n    jsbin.panels.getVisible().forEach(function (p) {\r\n      $sharepanels.filter('[value=\"' + (mapping[p.id] || p.id) + '\"]').prop('checked', true);\r\n    });\r\n\r\n    // if we're the latest bin, then allow the user to switch to a snapshot\r\n    if (jsbin.state.latest) {\r\n      // if they have write access then select the latest & live by default\r\n      if (jsbin.state.checksum) {\r\n        $realtime.prop('checked', jsbin.state.latest);\r\n        $snapshot.prop('checked', false);\r\n\r\n        $andlive.show();\r\n      // otherwise select the snapshot first\r\n      } else {\r\n        $realtime.prop({ checked: false });\r\n        $snapshot.prop('checked', true);\r\n        $andlive.hide();\r\n      }\r\n\r\n      $withLiveReload.show();\r\n    } else {\r\n      // otherwise, disable live\r\n      $realtime.prop({ checked: false, disabled: true });\r\n      $snapshot.prop('checked', true);\r\n      $withLiveReload.hide();\r\n    }\r\n\r\n    update();\r\n  });\r\n  $sharemenu.find('.lockrevision').on('change', function () {\r\n    jsbin.saveChecksum = false; // jshint ignore:line\r\n    jsbin.state.checksum = false;\r\n    jsbin.$document.trigger('locked');\r\n  });\r\n  var $sharepreview = $('#share-preview');\r\n  var $realtime = $('#sharebintype input[type=radio][value=\"realtime\"]');\r\n  var $snapshot = $('#sharebintype input[type=radio][value=\"snapshot\"]');\r\n  var link = $sharemenu.find('a.link')[0];\r\n  var linkselect = $sharemenu.find('input[name=\"url\"]')[0];\r\n  var embed = $sharemenu.find('textarea')[0];\r\n  var form = $sharemenu.find('form')[0];\r\n  var $directLinks = $sharemenu.find('.direct-links');\r\n  var $andlive = $('#andlive');\r\n  var $withLiveReload = $sharemenu.find('.codecasting');\r\n\r\n  // get an object representation of a form's state\r\n  function formData(form) {\r\n    var length = form.length;\r\n    var data = {};\r\n    var value;\r\n    var el;\r\n    var type;\r\n    var name;\r\n\r\n    var append = function (data, name, value) {\r\n      if (data[name] === undefined) {\r\n        data[name] = value;\r\n      } else {\r\n        if (typeof data[name] === 'string') {\r\n          data[name] = [data[name]];\r\n        }\r\n        data[name].push(value);\r\n      }\r\n    };\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      el = form[i];\r\n      value = el.value;\r\n      type = el.type;\r\n      name = el.name;\r\n\r\n      if (type === 'radio') {\r\n        if (el.checked) {\r\n          append(data, name, value);\r\n        }\r\n      } else if (type === 'checkbox') {\r\n        if (data[name] === undefined) {\r\n          data[name] = [];\r\n        }\r\n        if (el.checked) {\r\n          append(data, name, value);\r\n        }\r\n      } else {\r\n        append(data, name, value);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  function update() {\r\n    var data = formData(form);\r\n    var url = jsbin.getURL({ root: jsbin.shareRoot });\r\n    var OGurl = jsbin.getURL();\r\n\r\n    if (data.state === 'snapshot' && jsbin.state.latest) {\r\n      url += '/' + selectedSnapshot;\r\n      OGurl += '/' + selectedSnapshot;\r\n    }\r\n\r\n    var shareurl = url;\r\n\r\n    // get a comma separated list of the panels that should be shown\r\n    var query = data.panel.join(',');\r\n\r\n    if (query) {\r\n      query = '?' + query;\r\n    }\r\n\r\n    $sharepanels.prop('disabled', data.view === 'output');\r\n    $sharepreview.attr('class', data.view);\r\n\r\n    if (data.view !== 'output') {\r\n      $sharepreview.find('.editor div').each(function () {\r\n        this.hidden = data.panel.indexOf(this.className) === -1;\r\n      });\r\n    }\r\n\r\n    if (data.view === 'editor') {\r\n      shareurl += '/edit';\r\n    } else {\r\n      query = '';\r\n    }\r\n\r\n    // create the direct links, it'll be faster to inject HTML rather than\r\n    // updating hrefs of a bunch of HTML elements\r\n    $directLinks.empty();\r\n\r\n    var directLinksHTML = []; //['<a href=\"' + url + '.html\">html</a>'];\r\n\r\n    var code = ''\r\n    var ext = '';\r\n\r\n    code = jsbin.panels.named.html.getCode().trim();\r\n\r\n    if (code) {\r\n      ext = processors[jsbin.state.processors.html || 'html'].extensions[0];\r\n      if (ext !== 'html') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n      } else if (code.toLowerCase().indexOf('<svg') === 0) {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.svg\">svg</a>');\r\n      }\r\n    }\r\n\r\n    if (jsbin.panels.named.css.getCode().trim()) {\r\n      ext = processors[jsbin.state.processors.css || 'css'].extensions[0];\r\n      if (ext !== 'css') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.css\">css</a>');\r\n      }\r\n      directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n    }\r\n\r\n    code = jsbin.panels.named.javascript.getCode().trim();\r\n\r\n    if (code) {\r\n      ext = processors[jsbin.state.processors.javascript || 'javascript'].extensions[0];\r\n\r\n      if (ext !== 'js') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.js\">js</a>');\r\n      }\r\n\r\n      try {\r\n        JSON.parse(code);\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.json\">json</a>');\r\n      } catch (e) {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n      }\r\n\r\n    }\r\n\r\n    $directLinks.html(directLinksHTML.join(''));\r\n\r\n    linkselect.value = link.href = shareurl + query;\r\n    embed.value = ('<a class=\"jsbin-embed\" href=\"' + OGurl + '/embed' + query + '\">' + jsbin.documentTitle + ' on jsbin.com</a><' + 'script src=\"' + jsbin.static + '/js/embed.min.js?' + jsbin.version + '\"><' + '/script>').replace(/<>\"&/g, function (m) {\r\n        return {\r\n          '<': '&lt;',\r\n          '>': '&gt;',\r\n          '\"': '&quot;',\r\n          '&': '&amp;'\r\n        }[m];\r\n      });\r\n  }\r\n\r\n  // when the user clicks on \"snapshot\" we automatically create a snapshot at\r\n  // that point (technically this isn't a snapshot, but clearing the write\r\n  // access, so the next user input creates the *next* snapshot - which is\r\n  // actually the latest copy).\r\n  $('#sharebintype input[type=radio]').on('change', function () {\r\n    if (this.value === 'snapshot') {\r\n      jsbin.state.checksum = false;\r\n      jsbin.saveChecksum = false; // jshint ignore:line\r\n      $withLiveReload.hide();\r\n    } else {\r\n      $withLiveReload.show();\r\n    }\r\n  });\r\n\r\n  $sharemenu.find('input').on('change', update);\r\n\r\n  jsbin.$document.on('saved', function () {\r\n\r\n    // revert to the latest bin state\r\n    $realtime.prop('checked', true);\r\n\r\n    // show the share menu\r\n    $sharemenu.removeClass('hidden');\r\n\r\n    update();\r\n  });\r\n\r\n  var $share = $('#share').closest('.menu');\r\n  var shareElement = $('#sharemenu a')[0];\r\n  var $showShare = $('a.show-share').on('click', function () {\r\n    if ($share.hasClass('open')) {\r\n      closedropdown(shareElement);\r\n    } else {\r\n      opendropdown(shareElement, true); // true = no focus\r\n    }\r\n    $showShare.blur();\r\n  });\r\n\r\n});\r\n"]}