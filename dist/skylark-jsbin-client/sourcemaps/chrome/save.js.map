{"version":3,"sources":["chrome/save.js"],"names":["define","jsbin","saving","todo","html","css","javascript","_inprogress","inprogress","panels","save","pop","updateCode","getTagContent","tag","getCode","result","indexOf","console","error","replace","re","all","capture1","capture2","meta","title","$","click","event","preventDefault","analytics","milestone","ajax","saveDisabled","state","changed","mobile","owner","saveCode","$shareLinks","$panelCheckboxes","split","length","updateSavedState","mapping","live","query","filter","map","this","getAttribute","get","join","each","path","url","getURL","withRevision","id","nodeName","hash","getHighlightLines","href","value","documentTitle","static","m","<",">","\"","&","bind","on","checksum","saveChecksum","lastHTML","updateDocMeta","data","panelId","currentHTML","description","updateSettings","document","name","$document","prop","closest","removeClass","attr","store","sessionStorage","getItem","onSaveError","jqXHR","status","documentElement","addClass","trigger","type","content","window","location","savingLabels","text","animate","opacity","_console","message","unbind","one","shown","embed","sandbox","onload","origin","ismac","navigator","userAgent","cmd","shift","plus","root","append","allEditors","panel","stop","throttle","delay","deleted","savecontent","code","compressKeys","keys","obj","compressed","forEach","key","LZString","compressToUTF16","callback","panelSettings","processors","revision","method","editors","settings","JSON","stringify","useCompression","protocol","cache","processed","dataType","headers","Accept","success","latest","complete","clone","setupform","submit","$form","empty","token","find","val","ajaxCallback","saveOnExit","serializeArray","reduce","setItem","metadata","user","history","pushState","getQuery","edit","delegate"],"mappings":"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","file":"../../chrome/save.js","sourcesContent":["define([\r\n   \"../jsbin\"\r\n],function (jsbin) {\r\n  /*jshint strict: false */\r\n  /*globals $, analytics, jsbin, documentTitle, $document, throttle, editors*/\r\n  var saving = {\r\n    todo: {\r\n      html: false,\r\n      css: false,\r\n      javascript: false\r\n    },\r\n    _inprogress: false,\r\n    inprogress: function (inprogress) {\r\n      if (typeof inprogress === 'undefined') {\r\n        return saving._inprogress;\r\n      }\r\n\r\n      saving._inprogress = inprogress;\r\n      if (inprogress === false) {\r\n        var panels = ['html','css','javascript'];\r\n\r\n        var save = function () {\r\n          var todo = panels.pop();\r\n          if (todo && saving.todo[todo]) {\r\n            saving._inprogress = true;\r\n            updateCode(todo, save);\r\n            saving.todo[todo] = false;\r\n          } else if (todo) {\r\n            save();\r\n          }\r\n        };\r\n\r\n        save();\r\n      }\r\n    }\r\n  };\r\n\r\n  function getTagContent(tag) {\r\n    var html = jsbin.panels.panels.html.getCode();\r\n    var result = '';\r\n\r\n    // if we don't have the tag, bail with an empty string\r\n    if (html.indexOf('<' + tag) === -1) {\r\n      return result;\r\n    }\r\n\r\n    if (tag !== 'title' && tag !== 'meta') {\r\n      console.error('getTagContent for ' + tag + ' is not supported');\r\n      return result;\r\n    }\r\n\r\n    // grab the content based on the earlier defined regexp\r\n    html.replace(getTagContent.re[tag], function (all, capture1, capture2) {\r\n      result = tag === 'title' ? capture1 : capture2;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getTagContent.re = {\r\n    meta: /(<meta name=\"description\" content=\")([^\"]*)/im,\r\n    title: /<title>(.*)<\\/title>/im\r\n  };\r\n\r\n\r\n  // to allow for download button to be introduced via beta feature\r\n  $('a.save').click(function (event) {\r\n    event.preventDefault();\r\n\r\n    analytics.milestone();\r\n    // if save is disabled, hitting save will trigger a reload\r\n    var ajax = true;\r\n    if (jsbin.saveDisabled === true) {\r\n      ajax = false;\r\n    }\r\n\r\n    if ((jsbin.state.changed || jsbin.mobile) || !jsbin.owner()) {\r\n      saveCode('save', ajax);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  var $shareLinks = $('#share .link');\r\n  var $panelCheckboxes = $('#sharemenu #sharepanels input');\r\n\r\n  // TODO remove split when live\r\n  var split = $('#sharemenu .share-split').length;\r\n\r\n  // TODO candidate for removal\r\n  function updateSavedState() {\r\n    'use strict';\r\n    if (split) {\r\n      return;\r\n    }\r\n\r\n    var mapping = {\r\n      live: 'output',\r\n      javascript: 'js',\r\n      css: 'css',\r\n      html: 'html',\r\n      console: 'console'\r\n    };\r\n\r\n    var withRevision = true;\r\n\r\n    var query = $panelCheckboxes.filter(':checked').map(function () {\r\n      return mapping[this.getAttribute('data-panel')];\r\n    }).get().join(',');\r\n    $shareLinks.each(function () {\r\n      var path = this.getAttribute('data-path');\r\n      var url = jsbin.getURL({ withRevision: withRevision }) + path + (query && this.id !== 'livepreview' ? '?' + query : ''),\r\n          nodeName = this.nodeName;\r\n      var hash = panels.getHighlightLines();\r\n\r\n      if (hash) {\r\n        hash = '#' + hash;\r\n      }\r\n\r\n      if (nodeName === 'A') {\r\n        this.href = url;\r\n      } else if (nodeName === 'INPUT') {\r\n        this.value = url;\r\n        if (path === '/edit') {\r\n          this.value += hash;\r\n        }\r\n      } else if (nodeName === 'TEXTAREA') {\r\n        this.value = ('<a class=\"jsbin-embed\" href=\"' + url + hash + '\">' + documentTitle + '</a><' + 'script src=\"' + jsbin.static + '/js/embed.js\"><' + '/script>').replace(/<>\"&/g, function (m) {\r\n            return {\r\n              '<': '&lt;',\r\n              '>': '&gt;',\r\n              '\"': '&quot;',\r\n              '&': '&amp;'\r\n            }[m];\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  $('#sharemenu').bind('open', updateSavedState);\r\n  $('#sharebintype input[type=radio]').on('click', function () {\r\n    if (this.value === 'snapshot') {\r\n      jsbin.state.checksum = false;\r\n      saveChecksum = false;\r\n    }\r\n    updateSavedState();\r\n  });\r\n\r\n  var lastHTML = null;\r\n\r\n  function updateDocMeta(event, data) {\r\n    if (data) {\r\n      if (data.panelId !== 'html') {\r\n        return; // ignore non-html updates\r\n      }\r\n    }\r\n\r\n    var currentHTML = jsbin.panels.panels.html.getCode();\r\n    if (lastHTML !== currentHTML) {\r\n      lastHTML = currentHTML;\r\n\r\n      var description = getTagContent('meta');\r\n      if (description !== jsbin.state.description) {\r\n        jsbin.state.description = description;\r\n        jsbin.state.updateSettings({ description: description });\r\n      }\r\n\r\n      var title = getTagContent('title');\r\n      if (title !== jsbin.state.title) {\r\n        jsbin.state.title = title;\r\n        jsbin.state.updateSettings({ title: title });\r\n\r\n        documentTitle = title;\r\n        if (documentTitle) {\r\n          document.title = documentTitle + ' - ' + jsbin.name;\r\n        } else {\r\n          document.title = jsbin.name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  $document.on('saveComplete', updateDocMeta); // update, not create\r\n\r\n  $document.on('saved', function () {\r\n    jsbin.state.changed = false;\r\n    updateSavedState();\r\n\r\n    $('#sharebintype input[type=radio][value=\"realtime\"]').prop('checked', true);\r\n\r\n    $shareLinks.closest('.menu').removeClass('hidden');\r\n\r\n    $('#jsbinurl').attr('href', jsbin.getURL()).removeClass('hidden');\r\n    $('#clone').removeClass('hidden');\r\n\r\n    updateDocMeta();\r\n  });\r\n\r\n  var saveChecksum = jsbin.state.checksum || store.sessionStorage.getItem('checksum') || false;\r\n\r\n  // store it back on state\r\n  jsbin.state.checksum = saveChecksum;\r\n\r\n  if (saveChecksum) {\r\n    // remove the disabled class, but also remove the cancelling event handlers\r\n    $('#share div.disabled').removeClass('disabled').unbind('click mousedown mouseup');\r\n  } else {\r\n    $('#share div.disabled').one('click', function (event) {\r\n      event.preventDefault();\r\n      $('a.save').click();\r\n    });\r\n  }\r\n\r\n  $document.one('saved', function () {\r\n    $('#share div.disabled').removeClass('disabled').unbind('click mousedown mouseup');\r\n  });\r\n\r\n  function onSaveError(jqXHR, panelId) {\r\n    if (jqXHR.status === 413) {\r\n      // Hijack the tip label to show an error message.\r\n      $('#tip p').html('Sorry this bin is too large for us to save');\r\n      $(document.documentElement).addClass('showtip');\r\n    } else if (jqXHR.status === 403) {\r\n      $document.trigger('tip', {\r\n        type: 'error',\r\n        content: 'I think there\\'s something wrong with your session and I\\'m unable to save. <a href=\"' + window.location + '\"><strong>Refresh to fix this</strong></a>, you <strong>will not</strong> lose your code.'\r\n      });\r\n    } else if (panelId) {\r\n      if (panelId) { savingLabels[panelId].text('Saving...').animate({ opacity: 1 }, 100); }\r\n      window._console.error({message: 'Warning: Something went wrong while saving. Your most recent work is not saved.'});\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // only start live saving it they're allowed to (whereas save is disabled if they're following)\r\n  if (!jsbin.saveDisabled) {\r\n    $('.code.panel .label .name').append('<span class=\"saved\">Saved</span>');\r\n\r\n    var savingLabels = {\r\n      html: $('.panel.html .name span.saved'),\r\n      javascript: $('.panel.javascript .name span.saved'),\r\n      css: $('.panel.css .name span.saved'),\r\n    };\r\n\r\n    $document.bind('jsbinReady', function () {\r\n      jsbin.state.changed = false;\r\n      jsbin.panels.allEditors(function (panel) {\r\n        panel.on('processor', function () {\r\n          // if the url doesn't match the root - i.e. they've actually saved something then save on processor change\r\n          if (jsbin.root !== jsbin.getURL()) {\r\n            $document.trigger('codeChange', [{ panelId: panel.id }]);\r\n          }\r\n        });\r\n      });\r\n\r\n      $document.bind('codeChange', function (event, data) {\r\n        jsbin.state.changed = true;\r\n        // savingLabels[data.panelId].text('Saving');\r\n        if (savingLabels[data.panelId]) {\r\n          savingLabels[data.panelId].css({ 'opacity': 0 }).stop(true, true);\r\n        }\r\n      });\r\n\r\n      $document.bind('saveComplete', throttle(function (event, data) {\r\n        // show saved, then revert out animation\r\n        savingLabels[data.panelId]\r\n          .text('Saved')\r\n          .stop(true, true)\r\n          .animate({ opacity: 1 }, 100)\r\n          .delay(1200)\r\n          .animate({ opacity: 0 }, 500);\r\n      }, 500));\r\n\r\n      $document.bind('codeChange', throttle(function (event, data) {\r\n        if (!data.panelId) {\r\n          return;\r\n        }\r\n\r\n        if (jsbin.state.deleted) {\r\n          return;\r\n        }\r\n\r\n        var panelId = data.panelId;\r\n\r\n        jsbin.panels.savecontent();\r\n\r\n        if (saving.inprogress()) {\r\n          // queue up the request and wait\r\n          saving.todo[panelId] = true;\r\n          return;\r\n        }\r\n\r\n        saving.inprogress(true);\r\n\r\n        // We force a full save if there's no checksum OR if there's no bin code/url\r\n        if (!saveChecksum || !jsbin.state.code) {\r\n          // create the bin and when the response comes back update the url\r\n          saveCode('save', true);\r\n        } else {\r\n          updateCode(panelId);\r\n        }\r\n      }, 30 * 1000));\r\n    });\r\n  } else {\r\n    $document.one('jsbinReady', function () {\r\n      'use strict';\r\n      var shown = false;\r\n      if (!jsbin.embed && !jsbin.sandbox) {\r\n        $document.on('codeChange.live', function (event, data) {\r\n          if (!data.onload && !shown && data.origin !== 'setValue') {\r\n            shown = true;\r\n            var ismac = navigator.userAgent.indexOf(' Mac ') !== -1;\r\n            var cmd = ismac ? '⌘' : 'ctrl';\r\n            var shift = ismac ? '⇧' : 'shift';\r\n            var plus = ismac ? '' : '+';\r\n\r\n            $document.trigger('tip', {\r\n              type: 'notification',\r\n              content: 'You\\'re currently viewing someone else\\'s live stream, but you can <strong><a class=\"clone\" href=\"' + jsbin.root + '/clone\">clone your own copy</a></strong> (' + cmd + plus + shift + plus + 'S) at any time to save your edits'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function compressKeys(keys, obj) {\r\n    obj.compressed = keys;\r\n    keys.split(',').forEach(function (key) {\r\n      obj[key] = LZString.compressToUTF16(obj[key]);\r\n    });\r\n  }\r\n\r\n  function updateCode(panelId, callback) {\r\n    var panelSettings = {};\r\n\r\n    if (jsbin.state.processors) {\r\n      panelSettings.processors = jsbin.state.processors;\r\n    }\r\n\r\n    var data = {\r\n      code: jsbin.state.code,\r\n      revision: jsbin.state.revision,\r\n      method: 'update',\r\n      panel: panelId,\r\n      content: editors[panelId].getCode(),\r\n      checksum: saveChecksum,\r\n      settings: JSON.stringify(panelSettings),\r\n    };\r\n\r\n    if (jsbin.settings.useCompression && location.protocol === 'http:') {\r\n      compressKeys('content', data);\r\n    }\r\n\r\n    if (jsbin.state.processors[panelId] &&\r\n      jsbin.state.processors[panelId] !== panelId &&\r\n      jsbin.state.cache[panelId]) {\r\n      data.processed = jsbin.state.cache[panelId].result;\r\n    }\r\n\r\n    $.ajax({\r\n      url: jsbin.getURL({ withRevision: true }) + '/save',\r\n      data: data,\r\n      type: 'post',\r\n      dataType: 'json',\r\n      headers: {'Accept': 'application/json'},\r\n      success: function (data) {\r\n        $document.trigger('saveComplete', { panelId: panelId });\r\n        if (data.error) {\r\n          saveCode('save', true, function () {\r\n            // savedAlready = data.checksum;\r\n          });\r\n        } else {\r\n          jsbin.state.latest = true;\r\n        }\r\n      },\r\n      error: function (jqXHR) {\r\n        onSaveError(jqXHR, panelId);\r\n      },\r\n      complete: function () {\r\n        saving.inprogress(false);\r\n        if (callback) { callback(); }\r\n      }\r\n    });\r\n  }\r\n\r\n  $('a.clone').click(clone);\r\n  $('#tip').delegate('a.clone', 'click', clone);\r\n\r\n  function clone(event) {\r\n    event.preventDefault();\r\n\r\n    // save our panel layout - assumes our user is happy with this layout\r\n    jsbin.panels.save();\r\n    analytics.clone();\r\n\r\n    var $form = setupform('save,new');\r\n    $form.submit();\r\n\r\n    return false;\r\n  }\r\n\r\n  function setupform(method) {\r\n  var $form = $('form#saveform').empty()\r\n      .append('<input type=\"hidden\" name=\"javascript\" />')\r\n      .append('<input type=\"hidden\" name=\"html\" />')\r\n      .append('<input type=\"hidden\" name=\"css\" />')\r\n      .append('<input type=\"hidden\" name=\"method\" />')\r\n      .append('<input type=\"hidden\" name=\"_csrf\" value=\"' + jsbin.state.token + '\" />')\r\n      .append('<input type=\"hidden\" name=\"settings\" />')\r\n      .append('<input type=\"hidden\" name=\"checksum\" />');\r\n\r\n    var settings = {};\r\n\r\n    if (jsbin.state.processors) {\r\n      settings.processors = jsbin.state.processors;\r\n    }\r\n\r\n    // this prevents new revisions forking off the welcome bin\r\n    // because it's looking silly!\r\n    if (jsbin.state.code === 'welcome') {\r\n      $form.attr('action', '/save');\r\n    }\r\n\r\n    $form.find('input[name=settings]').val(JSON.stringify(settings));\r\n    $form.find('input[name=javascript]').val(editors.javascript.getCode());\r\n    $form.find('input[name=css]').val(editors.css.getCode());\r\n    $form.find('input[name=html]').val(editors.html.getCode());\r\n    $form.find('input[name=method]').val(method);\r\n    $form.find('input[name=checksum]').val(jsbin.state.checksum);\r\n\r\n    return $form;\r\n  }\r\n\r\n  function pad(n){\r\n    return n<10 ? '0'+n : n;\r\n  }\r\n\r\n  function ISODateString(d){\r\n    return d.getFullYear()+'-'\r\n      + pad(d.getMonth()+1)+'-'\r\n      + pad(d.getDate())+'T'\r\n      + pad(d.getHours())+':'\r\n      + pad(d.getMinutes())+':'\r\n      + pad(d.getSeconds())+'Z';\r\n  }\r\n\r\n  function saveCode(method, ajax, ajaxCallback) {\r\n    // create form and post to it\r\n    var $form = setupform(method);\r\n    // save our panel layout - assumes our user is happy with this layout\r\n    jsbin.panels.save();\r\n    jsbin.panels.saveOnExit = true;\r\n\r\n    var data = $form.serializeArray().reduce(function(obj, data) {\r\n      obj[data.name] = data.value;\r\n      return obj;\r\n    }, {});\r\n\r\n    if (jsbin.settings.useCompression) {\r\n      compressKeys('html,css,javascript', data);\r\n    }\r\n\r\n    if (ajax) {\r\n      $.ajax({\r\n        url: jsbin.getURL({ withRevision: true }) + '/save',\r\n        data: data,\r\n        dataType: 'json',\r\n        type: 'post',\r\n        headers: {'Accept': 'application/json'},\r\n        success: function (data) {\r\n          if (ajaxCallback) {\r\n            ajaxCallback(data);\r\n          }\r\n\r\n          store.sessionStorage.setItem('checksum', data.checksum);\r\n          saveChecksum = data.checksum;\r\n\r\n          jsbin.state.checksum = saveChecksum;\r\n          jsbin.state.code = data.code;\r\n          jsbin.state.revision = data.revision;\r\n          jsbin.state.latest = true; // this is never not true...end of conversation!\r\n          jsbin.state.metadata = { name: jsbin.user.name };\r\n          $form.attr('action', jsbin.getURL({ withRevision: true }) + '/save');\r\n\r\n          if (window.history && window.history.pushState) {\r\n            // updateURL(edit);\r\n            var hash = panels.getHighlightLines();\r\n            if (hash) { hash = '#' + hash; }\r\n            var query = panels.getQuery();\r\n            if (query) { query = '?' + query; }\r\n            // If split is truthy (> 0) then we are using the revisonless feature\r\n            // this is temporary until we release the feature!\r\n            window.history.pushState(null, '', jsbin.getURL({withRevision: !split}) + '/edit' + query + hash);\r\n            store.sessionStorage.setItem('url', jsbin.getURL({withRevision: !split}));\r\n          } else {\r\n            window.location.hash = data.edit;\r\n          }\r\n\r\n          $document.trigger('saved');\r\n        },\r\n        error: function (jqXHR) {\r\n          onSaveError(jqXHR, null);\r\n        },\r\n        complete: function () {\r\n          saving.inprogress(false);\r\n        }\r\n      });\r\n    } else {\r\n      $form.submit();\r\n    }\r\n  }\r\n\r\n});"]}