{"version":3,"sources":["skylark-jsbin-client.js"],"names":[],"mappingsfile":"../skylark-jsbin-client.js","sourcesContent":["define('skylark-jsbin-client/jsbin',[\r\n  \"skylark-jsbin-base\"\r\n],function(jsbin){\r\n  return jsbin;\r\n});\r\n\r\n\ndefine('skylark-jsbin-client/chrome/font',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /** =========================================================================\r\n   * font\r\n   * Reads user setting and configures the CodeMirror font size\r\n   * ========================================================================== */\r\n  /*global jsbin:true*/\r\n  var font = (function (document) {\r\n    var head = document.getElementsByTagName('head')[0],\r\n        selectors = '#output li, #exec, .fakeInput, .fakeInput:before, #exec:before, #bin .editbox .CodeMirror, .mobile .editbox textarea',\r\n        size = jsbin.settings.font || 14;\r\n\r\n    // via http://stackoverflow.com/questions/2041495/create-dynamic-inline-stylesheet\r\n    function font(size) {\r\n      var cssText = selectors + '{ font-size: ' + size + 'px; }',\r\n          el = document.createElement('style');\r\n\r\n      el.type = 'text/css';\r\n      if (el.styleSheet) {\r\n        el.styleSheet.cssText = cssText;//IE only\r\n      } else {\r\n        el.appendChild(document.createTextNode(cssText));\r\n      }\r\n      head.appendChild(el);\r\n    }\r\n\r\n    if (Object.defineProperty && jsbin.settings) {\r\n      try {\r\n        Object.defineProperty(jsbin.settings, 'font', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function () {\r\n            return size;\r\n          },\r\n          set: function (val) {\r\n            size = val * 1;\r\n            font(size);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        // IE8 seems to attempt the code above, but it totally fails\r\n      }\r\n    }\r\n\r\n    font(size);\r\n\r\n    return font;\r\n  })(document);\r\n\r\n  var md5 = 'a3a02e450f1f79f4c3482279d113b07e';\r\n  var key = 'fonts';\r\n  var cache;\r\n\r\n  function insertFont(value) {\r\n    var style = document.createElement('style');\r\n    style.innerHTML = value;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  try {\r\n    cache = window.localStorage.getItem(key);\r\n    if (cache) {\r\n      cache = JSON.parse(cache);\r\n      if (cache.md5 === md5) {\r\n        insertFont(cache.value);\r\n      } else {\r\n        // busting cache when md5 doesn't match\r\n        window.localStorage.removeItem(key);\r\n        cache = null;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // most likely LocalStorage disabled\r\n    return;\r\n  }\r\n\r\n  if (!cache) {\r\n    // fonts not in LocalStorage or md5 did not match\r\n    window.addEventListener('load', function () {\r\n      var request = new XMLHttpRequest();\r\n      var response;\r\n      var url = jsbin.static + '/css/fonts.a3a02e450f1f79f4c3482279d113b07e.woff.json?' + jsbin.version;\r\n      request.open('GET', url, true);\r\n      request.onload = function () {\r\n        if (this.status == 200) {\r\n          try {\r\n            response = JSON.parse(this.response);\r\n            insertFont(response.value);\r\n            window.localStorage.setItem(key, this.response);\r\n          } catch (e) {\r\n            // localStorage is probably full\r\n          }\r\n        }\r\n      };\r\n      request.send();\r\n    });\r\n  }\r\n\r\n  return jsbin.font = font;\r\n});\ndefine('skylark-jsbin-client/chrome/analytics',[\r\n  \"skylark-langx\",\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-chrome/analytics\",\r\n   \"../jsbin\"\r\n],function (langx,$,analytics,jsbin) {\r\n  langx.mixin(analytics ,  {\r\n\r\n    universalEditor: function (value) {\r\n      analytics.track('menu', 'universalEditor', value);\r\n    },\r\n    library: function (action, value) {\r\n      analytics.track('menu', action, 'library', value);\r\n    },\r\n    infocard: function (action, value) {\r\n      analytics.track('infocard', action, value);\r\n    },\r\n    embed: function () {\r\n      try {\r\n        analytics.track('state', 'embed', window.top.location);\r\n      } catch (e) {\r\n        analytics.track('state', 'embed');\r\n      }\r\n    },\r\n    milestone: function () {\r\n      analytics.track('bin', 'save', window.location.pathname);\r\n    },\r\n    clone: function () {\r\n      analytics.track('bin', 'clone', window.location.pathname);\r\n    },\r\n    'delete': function () {\r\n      analytics.track('bin', 'delete', window.location.pathname);\r\n    },\r\n    lock: function () {\r\n      analytics.track('bin', 'lock', window.location.pathname);\r\n    },\r\n    openShare: function () {\r\n      analytics.track('menu', 'open', 'share');\r\n    },\r\n    saveTemplate: function () {\r\n      analytics.track('menu', 'select', 'save-template');\r\n    },\r\n    createNew: function (from) {\r\n      analytics.track(from || 'menu', 'select', 'new');\r\n    },\r\n    open: function (from) {\r\n      analytics.track(from || 'menu', 'select', 'open');\r\n    },\r\n    openFromAvatar: function () {\r\n      analytics.track('menu', 'select', 'open via avatar');\r\n    },\r\n\r\n    share: function (action, label) {\r\n      analytics.track('share', action, label);\r\n    },\r\n    download: function (from) {\r\n      analytics.track(from || 'menu', 'select', 'download');\r\n    },\r\n    showPanel: function (panelId) {\r\n      analytics.track('panel', 'show', panelId);\r\n    },\r\n    hidePanel: function (panelId) {\r\n      analytics.track('panel', 'hide', panelId);\r\n    },\r\n    logout: function () {\r\n      analytics.track('menu', 'select', 'logout');\r\n    },\r\n    register: function (success) {\r\n      if (success === undefined) {\r\n        analytics.track('menu', 'open', 'login');\r\n      } else {\r\n        analytics.track('user', 'register', ok ? 'success' : 'fail');\r\n      }\r\n    },\r\n    login: function (ok) {\r\n      if (ok === undefined) {\r\n        analytics.track('menu', 'open', 'login');\r\n      } else {\r\n        analytics.track('user', 'login', ok ? 'success' : 'fail');\r\n      }\r\n    },\r\n    enableLiveJS: function (ok) {\r\n      analytics.track('button', 'auto-run js', ok ? 'on' : 'off');\r\n    },\r\n    archiveView: function (visible) {\r\n      analytics.track('button', 'view archive', visible ? 'on' : 'off');\r\n    },\r\n    archive: function (url) {\r\n      analytics.track('button', 'archive', url);\r\n    },\r\n    unarchive: function (url) {\r\n      analytics.track('button', 'unarchive', url);\r\n    },\r\n    loadGist: function (id) {\r\n      analytics.track('state', 'load gist', id);\r\n    },\r\n    layout: function (panelsVisible) {\r\n      var layout = [], panel = '';\r\n\r\n      for (panel in panelsVisible) {\r\n        layout.push(panel.id);\r\n      }\r\n\r\n      analytics.track('layout', 'update', layout.sort().join(',') || 'none');\r\n    },\r\n    run: function (from) {\r\n      analytics.track(from || 'button', 'run with js');\r\n    },\r\n    publishVanity: function () {\r\n      analytics.track('bin', 'publish-vanity');\r\n    },\r\n    runconsole: function (from) {\r\n      analytics.track(from || 'button', 'run console');\r\n    },\r\n    welcomePanelState: function (state) {\r\n      var s = 'close';\r\n      if (state) {\r\n        s = 'open';\r\n      }\r\n      analytics.track('state', 'welcome-panel', s);\r\n    },\r\n    welcomePanelLink: function (url) {\r\n      analytics.track('welcome-panel-link', url);\r\n    }\r\n  });\r\n\r\n  // misses the asset upload one\r\n  $('a[data-pro=\"true\"]').on('click', function () {\r\n    analytics.track('try-pro', $(this).text());\r\n  });\r\n\r\n  return  analytics;\r\n});\ndefine('skylark-jsbin-client/chrome/settings',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /*global jsbin, $*/\r\n\r\n  var settings = {\r\n    save: function (callback) {\r\n      localStorage.setItem('settings', JSON.stringify(jsbin.settings));\r\n      if (!callback) {\r\n        callback = function () {};\r\n      }\r\n\r\n      $.ajax({\r\n        url: '/account/editor',\r\n        type: 'POST',\r\n        dataType: 'json',\r\n        data: {\r\n          settings: localStorage.settings,\r\n          _csrf: jsbin.state.token\r\n        },\r\n        success: function () {\r\n          if (console && console.log) {\r\n            console.log('settings saved');\r\n          }\r\n          callback(true);\r\n        },\r\n        error: function (xhr, status) {\r\n          callback(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n});\ndefine('skylark-jsbin-client/render/saved-history-preview',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /*global jsbin, $, $document, analytics*/\r\n  'use strict';\r\n  if (!jsbin.user || !jsbin.user.name || jsbin.embed) {\r\n    return;\r\n  }\r\n\r\n  var $body = $('body'),\r\n      loaded = false,\r\n      requestAttempts = 5,\r\n      $history; // set in hookUserHistory()\r\n\r\n  jsbin.$document.on('history:open', function () {\r\n    if ($history && jsbin.panels.getVisible().length === 0) {\r\n      $history.appendTo('main');\r\n    }\r\n  }).on('history:close', function () {\r\n    if ($history === null) {\r\n      $history = $('#history').detach();\r\n    }\r\n  });\r\n\r\n  var loadList = function () {\r\n    if (loaded) {\r\n      return;\r\n    }\r\n\r\n    if ($('html').hasClass('public-listing')) {\r\n      hookUserHistory();\r\n    } else {\r\n      $.ajax({\r\n        dataType: 'html',\r\n        url: jsbin.root + '/list',\r\n        error: function () {\r\n          requestAttempts--;\r\n          if (requestAttempts > 0) {\r\n            $('#history').remove();\r\n            setTimeout(loadList, 500);\r\n          } else {\r\n            console.error('Giving up to load history');\r\n          }\r\n        },\r\n        success: function (html) {\r\n          $('#history').remove();\r\n          var frag = $(html);\r\n          if (jsbin.mobile) {\r\n            // mobile is particularly slow at rendering 1,000s of tbodys\r\n            // so we'll remove some to relieve the pressure.\r\n            frag.find('tbody:gt(50)').remove();\r\n          }\r\n          $body.append(frag);\r\n          hookUserHistory();\r\n          loaded = true;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  var updatePreview = function(url, $iframe) {\r\n    $iframe.attr('src', url + '/quiet');\r\n    $iframe.removeAttr('hidden');\r\n  };\r\n\r\n  var updateViewing = function (url, $viewing) {\r\n    $viewing.html('<a href=\"' + url + '\">' + url + '</a>');\r\n  };\r\n\r\n  var updateLayout = function ($tbodys, archiveMode) {\r\n    var $parent = $tbodys.parent();\r\n    $tbodys\r\n      .detach()\r\n      .each(function () {\r\n        var $tbody = $(this),\r\n            filter = archiveMode ? '.archived' : ':not(.archived)',\r\n            $trs = $('tr' + filter, $tbody).filter(':not(.spacer)');\r\n        if ($trs.length > 0) {\r\n          $trs.filter('.first').removeClass('first');\r\n          $tbody.removeClass('hidden');\r\n          $trs.first().addClass('first');\r\n        } else {\r\n          $tbody.addClass('hidden');\r\n        }\r\n      })\r\n      .appendTo($parent);\r\n  };\r\n\r\n  var hookUserHistory = function () {\r\n    // Loading the HTML from the server may have failed\r\n    $history = $('#history').detach();\r\n    if (!$history.length) {\r\n      return $history;\r\n    }\r\n\r\n    // Cache some useful elements\r\n    var $iframe = $('iframe', $history),\r\n        $viewing = $('#viewing', $history),\r\n        $bins = $history,\r\n        $tbodys = $('tbody', $history),\r\n        $trs = $('tr', $history),\r\n        $toggle = $('.toggle_archive', $history),\r\n        current = null,\r\n        hoverTimer = null;\r\n\r\n    // Archive & un-archive click handlers\r\n    $bins.delegate('.archive, .unarchive', 'click', function () {\r\n      var $this = $(this),\r\n          $row = $this.parents('tr');\r\n      // Instantly update this row and the page layout\r\n      $row.toggleClass('archived');\r\n\r\n      analytics[this.pathname.indexOf('unarchive') === -1 ? 'archive' : 'unarchive'](jsbin.root + $row.data('url'));\r\n\r\n      updateLayout($tbodys, $history.hasClass('archive_mode'));\r\n      // Then send the update to the server\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: $this.attr('href'),\r\n        error: function () {\r\n          // Undo if something went wrong\r\n          alert('Something went wrong, please try again');\r\n          $row.toggleClass('archived');\r\n          updateLayout($tbodys, $history.hasClass('archive_mode'));\r\n        },\r\n        success: function () {}\r\n      });\r\n      return false;\r\n    });\r\n\r\n    // Handle toggling of archive view\r\n    $toggle.change(function () {\r\n      $history.toggleClass('archive_mode');\r\n      var archive = $history.hasClass('archive_mode');\r\n      analytics.archiveView(archive);\r\n      updateLayout($tbodys, archive);\r\n    });\r\n\r\n    var selected = null;\r\n    $bins.delegate('a', 'click', function (event) {\r\n      if (event.shiftKey || event.metaKey) { return; }\r\n\r\n      var $this = $(this);\r\n\r\n      if ($this.closest('.action').length) {\r\n        // let the existing handlers deal with action links\r\n        return;\r\n      }\r\n\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation(); // prevent further delegates\r\n      if ($this.data('toggle') === 'history') {\r\n        jsbin.panels.allEditors(function (panel) {\r\n          if (panel.editor.getCode().trim().length) {\r\n            panel.show();\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      var $tr = $this.closest('tr');\r\n      var data = $tr.data();\r\n      var url = jsbin.root + data.url;\r\n\r\n      if (selected === this) {\r\n        window.location = data.editUrl;\r\n      } else {\r\n        $trs.removeClass('selected');\r\n        $tr.addClass('selected');\r\n        updatePreview(url, $iframe);\r\n        updateViewing(url, $viewing);\r\n\r\n        selected = this;\r\n      }\r\n    });\r\n\r\n    // Load bin from data-edit-url attribute when user clicks on a row\r\n    $bins.delegate('tr:not(.spacer)', 'click', function (event) {\r\n      if (event.shiftKey || event.metaKey) { return; }\r\n      $(this).find('.url a:first').click();\r\n    });\r\n\r\n    // Update the time every 30 secs\r\n    // Need to replace Z in ISO8601 timestamp with +0000 so prettyDate() doesn't\r\n    // completely remove it (and parse the date using the local timezone).\r\n    $('a[pubdate]', $history).attr('pubdate', function (i, val) {\r\n      return val.replace('Z', '+0000');\r\n    }).prettyDate();\r\n\r\n    // Update the layout straight away\r\n    setTimeout(function () {\r\n      updateLayout($tbodys, false);\r\n    }, 0);\r\n\r\n    jsbin.$document.trigger('history:open');\r\n\r\n    return $history;\r\n  };\r\n\r\n  // inside a ready call because history DOM is rendered *after* our JS to improve load times.\r\n  $(document).on('jsbinReady', function ()  {\r\n    if (jsbin.embed) {\r\n      return;\r\n    }\r\n\r\n    var $panelButtons = $('#panels a'),\r\n        $homebtn = $('.homebtn'),\r\n        panelsVisible = $body.hasClass('panelsVisible');\r\n\r\n    var panelCloseIntent = function() {\r\n      var activeCount = $panelButtons.filter('.active').length;\r\n      if (activeCount === 1 && $(this).hasClass('active')) {\r\n        loadList();\r\n      }\r\n    };\r\n\r\n    // this code attempts to only call the list ajax request only if\r\n    // the user should want to see the list page - most users will\r\n    // jump in and jump out of jsbin, and never see this page,\r\n    // so let's not send this ajax request.\r\n    //\r\n    // The list should be loaded when:\r\n    //   - user hovers the home button\r\n    //   - they close all the panels\r\n    //   - they arrive at the page with no panels open\r\n\r\n    $homebtn.on('click', loadList);\r\n    $panelButtons.on('mousedown', panelCloseIntent);\r\n\r\n    jsbin.$document.on('history:load', loadList);\r\n\r\n    if (!panelsVisible) {\r\n      loadList();\r\n    }\r\n\r\n  });\r\n\r\n  return {\r\n    loadList,\r\n    updatePreview,\r\n    updateViewing,\r\n    updateLayout,\r\n    hookUserHistory\r\n  };\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/esc',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-chrome/hideOpen\",\r\n   \"../jsbin\"\r\n],function ($, hideOpen, jsbin) {\r\n\r\n  jsbin.$document.keydown(function (event) {\r\n    if (event.which == 27) {//} || (keyboardHelpVisible && event.which == 191 && event.shiftKey && event.metaKey)) {\r\n      hideOpen();\r\n    }\r\n  });\r\n\r\n\r\n  jsbin.$document.delegate('.modal', 'click', function (event) {\r\n    if ($(event.target).is('.modal')) {\r\n      hideOpen();\r\n    }\r\n  });\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/share',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\"\r\n],function ($,panels,jsbin) {\r\n  'use strict';\r\n  /*globals $, panels, saveChecksum, jsbin, $document, documentTitle*/\r\n\r\n  // only continue if the new share is enabled\r\n  if ($('#sharemenu .share-split').length === 0) {\r\n    return;\r\n  }\r\n\r\n  var mapping = {\r\n    live: 'output',\r\n    javascript: 'js'\r\n  };\r\n  var $sharepanels = $('#sharepanels input[type=\"checkbox\"]');\r\n\r\n  var selectedSnapshot = jsbin.state.revision;\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    selectedSnapshot = jsbin.state.revision;\r\n  });\r\n\r\n  jsbin.$document.on('snapshot', function () {\r\n    jsbin.state.changed = false;\r\n    if (window.history.replaceState) {\r\n      window.history.replaceState(null, '', jsbin.getURL({ withRevision: true }) + '/edit?' + panels.getQuery());\r\n    }\r\n  });\r\n\r\n  var $sharemenu = $('#sharemenu').bind('open', function () {\r\n    // select the right panels\r\n    // hideOpen();\r\n    $sharepanels.prop('checked', false);\r\n    jsbin.panels.getVisible().forEach(function (p) {\r\n      $sharepanels.filter('[value=\"' + (mapping[p.id] || p.id) + '\"]').prop('checked', true);\r\n    });\r\n\r\n    // if we're the latest bin, then allow the user to switch to a snapshot\r\n    if (jsbin.state.latest) {\r\n      // if they have write access then select the latest & live by default\r\n      if (jsbin.state.checksum) {\r\n        $realtime.prop('checked', jsbin.state.latest);\r\n        $snapshot.prop('checked', false);\r\n\r\n        $andlive.show();\r\n      // otherwise select the snapshot first\r\n      } else {\r\n        $realtime.prop({ checked: false });\r\n        $snapshot.prop('checked', true);\r\n        $andlive.hide();\r\n      }\r\n\r\n      $withLiveReload.show();\r\n    } else {\r\n      // otherwise, disable live\r\n      $realtime.prop({ checked: false, disabled: true });\r\n      $snapshot.prop('checked', true);\r\n      $withLiveReload.hide();\r\n    }\r\n\r\n    update();\r\n  });\r\n  $sharemenu.find('.lockrevision').on('change', function () {\r\n    jsbin.saveChecksum = false; // jshint ignore:line\r\n    jsbin.state.checksum = false;\r\n    jsbin.$document.trigger('locked');\r\n  });\r\n  var $sharepreview = $('#share-preview');\r\n  var $realtime = $('#sharebintype input[type=radio][value=\"realtime\"]');\r\n  var $snapshot = $('#sharebintype input[type=radio][value=\"snapshot\"]');\r\n  var link = $sharemenu.find('a.link')[0];\r\n  var linkselect = $sharemenu.find('input[name=\"url\"]')[0];\r\n  var embed = $sharemenu.find('textarea')[0];\r\n  var form = $sharemenu.find('form')[0];\r\n  var $directLinks = $sharemenu.find('.direct-links');\r\n  var $andlive = $('#andlive');\r\n  var $withLiveReload = $sharemenu.find('.codecasting');\r\n\r\n  // get an object representation of a form's state\r\n  function formData(form) {\r\n    var length = form.length;\r\n    var data = {};\r\n    var value;\r\n    var el;\r\n    var type;\r\n    var name;\r\n\r\n    var append = function (data, name, value) {\r\n      if (data[name] === undefined) {\r\n        data[name] = value;\r\n      } else {\r\n        if (typeof data[name] === 'string') {\r\n          data[name] = [data[name]];\r\n        }\r\n        data[name].push(value);\r\n      }\r\n    };\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      el = form[i];\r\n      value = el.value;\r\n      type = el.type;\r\n      name = el.name;\r\n\r\n      if (type === 'radio') {\r\n        if (el.checked) {\r\n          append(data, name, value);\r\n        }\r\n      } else if (type === 'checkbox') {\r\n        if (data[name] === undefined) {\r\n          data[name] = [];\r\n        }\r\n        if (el.checked) {\r\n          append(data, name, value);\r\n        }\r\n      } else {\r\n        append(data, name, value);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  function update() {\r\n    var data = formData(form);\r\n    var url = jsbin.getURL({ root: jsbin.shareRoot });\r\n    var OGurl = jsbin.getURL();\r\n\r\n    if (data.state === 'snapshot' && jsbin.state.latest) {\r\n      url += '/' + selectedSnapshot;\r\n      OGurl += '/' + selectedSnapshot;\r\n    }\r\n\r\n    var shareurl = url;\r\n\r\n    // get a comma separated list of the panels that should be shown\r\n    var query = data.panel.join(',');\r\n\r\n    if (query) {\r\n      query = '?' + query;\r\n    }\r\n\r\n    $sharepanels.prop('disabled', data.view === 'output');\r\n    $sharepreview.attr('class', data.view);\r\n\r\n    if (data.view !== 'output') {\r\n      $sharepreview.find('.editor div').each(function () {\r\n        this.hidden = data.panel.indexOf(this.className) === -1;\r\n      });\r\n    }\r\n\r\n    if (data.view === 'editor') {\r\n      shareurl += '/edit';\r\n    } else {\r\n      query = '';\r\n    }\r\n\r\n    // create the direct links, it'll be faster to inject HTML rather than\r\n    // updating hrefs of a bunch of HTML elements\r\n    $directLinks.empty();\r\n\r\n    var directLinksHTML = []; //['<a href=\"' + url + '.html\">html</a>'];\r\n\r\n    var code = ''\r\n    var ext = '';\r\n\r\n    code = jsbin.panels.named.html.getCode().trim();\r\n\r\n    if (code) {\r\n      ext = processors[jsbin.state.processors.html || 'html'].extensions[0];\r\n      if (ext !== 'html') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n      } else if (code.toLowerCase().indexOf('<svg') === 0) {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.svg\">svg</a>');\r\n      }\r\n    }\r\n\r\n    if (jsbin.panels.named.css.getCode().trim()) {\r\n      ext = processors[jsbin.state.processors.css || 'css'].extensions[0];\r\n      if (ext !== 'css') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.css\">css</a>');\r\n      }\r\n      directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n    }\r\n\r\n    code = jsbin.panels.named.javascript.getCode().trim();\r\n\r\n    if (code) {\r\n      ext = processors[jsbin.state.processors.javascript || 'javascript'].extensions[0];\r\n\r\n      if (ext !== 'js') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.js\">js</a>');\r\n      }\r\n\r\n      try {\r\n        JSON.parse(code);\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.json\">json</a>');\r\n      } catch (e) {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n      }\r\n\r\n    }\r\n\r\n    $directLinks.html(directLinksHTML.join(''));\r\n\r\n    linkselect.value = link.href = shareurl + query;\r\n    embed.value = ('<a class=\"jsbin-embed\" href=\"' + OGurl + '/embed' + query + '\">' + jsbin.documentTitle + ' on jsbin.com</a><' + 'script src=\"' + jsbin.static + '/js/embed.min.js?' + jsbin.version + '\"><' + '/script>').replace(/<>\"&/g, function (m) {\r\n        return {\r\n          '<': '&lt;',\r\n          '>': '&gt;',\r\n          '\"': '&quot;',\r\n          '&': '&amp;'\r\n        }[m];\r\n      });\r\n  }\r\n\r\n  // when the user clicks on \"snapshot\" we automatically create a snapshot at\r\n  // that point (technically this isn't a snapshot, but clearing the write\r\n  // access, so the next user input creates the *next* snapshot - which is\r\n  // actually the latest copy).\r\n  $('#sharebintype input[type=radio]').on('change', function () {\r\n    if (this.value === 'snapshot') {\r\n      jsbin.state.checksum = false;\r\n      jsbin.saveChecksum = false; // jshint ignore:line\r\n      $withLiveReload.hide();\r\n    } else {\r\n      $withLiveReload.show();\r\n    }\r\n  });\r\n\r\n  $sharemenu.find('input').on('change', update);\r\n\r\n  jsbin.$document.on('saved', function () {\r\n\r\n    // revert to the latest bin state\r\n    $realtime.prop('checked', true);\r\n\r\n    // show the share menu\r\n    $sharemenu.removeClass('hidden');\r\n\r\n    update();\r\n  });\r\n\r\n  var $share = $('#share').closest('.menu');\r\n  var shareElement = $('#sharemenu a')[0];\r\n  var $showShare = $('a.show-share').on('click', function () {\r\n    if ($share.hasClass('open')) {\r\n      closedropdown(shareElement);\r\n    } else {\r\n      opendropdown(shareElement, true); // true = no focus\r\n    }\r\n    $showShare.blur();\r\n  });\r\n\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/issue',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n\r\n  /*global $:true, jsbin:true */\r\n    'use strict';\r\n\r\n    function githubIssue() {\r\n      var url = 'http://github.com/jsbin/jsbin/issues/new';\r\n      var body = ['Please provide any additional information, record a screencast ',\r\n                 'with http://quickcast.io or http://screenr.com and attach a screenshot ',\r\n                 'if possible.\\n\\n**JS Bin info**\\n\\n* [%url%/edit](%url%/edit)\\n* ',\r\n                 window.navigator.userAgent + '\\n',\r\n                 (jsbin.user && jsbin.user.name ? '* ' + jsbin.user.name : ''),\r\n                 '\\n'].join('');\r\n\r\n      return url + '?body=' + encodeURIComponent(body.replace(/%url%/g, jsbin.getURL({ withRevision: true })));\r\n    }\r\n\r\n    var $newissue = $('#newissue');\r\n\r\n    $('#help').parent().on('open', function () {\r\n      $newissue.attr('href', githubIssue());\r\n    });\r\n\r\n    return githubIssue;\r\n\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/download',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,jsbin,analytics) {\r\n\t$('#download').click(function (event) {\r\n\t  event.preventDefault();\r\n\t  window.location = jsbin.getURL({ withRevision: true }) + '/download';\r\n\t  analytics.download();\r\n\t});\r\n});\ndefine('skylark-jsbin-client/chrome/login',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /* global $ */\r\n\r\n  $('form.login').submit(function (event) {\r\n    'use strict';\r\n    event.preventDefault();\r\n\r\n    var form = $(this),\r\n        name = form.find('input[name=username]').val(),\r\n        key = form.find('input[name=password]').val(),\r\n        email = form.find('input[name=email]').val(),\r\n        $loginFeedback = form.find('.loginFeedback');\r\n\r\n\r\n    // jsbin.settings.home = name; // will save later\r\n    $loginFeedback.show().text('Checking...');\r\n\r\n    $.ajax({\r\n      url: form.attr('action'),\r\n      data: { username: name, key: key, email: email },\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      complete: function (jqXHR) {\r\n        var data = $.parseJSON(jqXHR.responseText) || {};\r\n        // cookie is required to share with the server so we can do a redirect on new bin\r\n        if (jqXHR.status === 200) {\r\n          if (data.avatar) {\r\n            $('a.avatar').find('img').remove().end().prepend('<img src=\"' + data.avatar + '\">');\r\n          }\r\n          if (data.message) {\r\n            $loginFeedback.text(data.message);\r\n          } else {\r\n            window.location = window.location.pathname + window.location.search;\r\n          }\r\n        } else {\r\n          analytics.login(false);\r\n          $loginFeedback.text(data.message || ('\"' + name + '\" has already been taken. Please either double check the password, or choose another username.'));\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/tips',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n\r\n    var $html = $(document.documentElement),\r\n        $tip = $('#tip'),\r\n        $tipContent = $('p', $tip),\r\n        tipTimeout;\r\n\r\n    var removeTip = function (cb) {\r\n      $html.removeClass('showtip');\r\n      $tip.removeClass();\r\n      $tipContent.html('');\r\n      $(window).resize();\r\n      cb && setTimeout(cb, 0);\r\n    };\r\n\r\n    var setTip = function (data) {\r\n      clearTimeout(tipTimeout);\r\n      $tipContent.html(data.content);\r\n      $tip.removeClass().addClass(data.type || 'info');\r\n      $html.addClass('showtip');\r\n      if (!data.autohide) return;\r\n      tipTimeout = setTimeout(function () {\r\n        removeTip();\r\n      }, parseInt(data.autohide, 10) || 5 * 1000);\r\n    };\r\n\r\n    /**\r\n     * Trigger a tip to be shown.\r\n     *\r\n     *   $document.trigger('tip', 'You have an infinite loop in your HTML.');\r\n     *\r\n     *    $document.trigger('tip', {\r\n     *      type: 'error',\r\n     *      content: 'Do you even Javascript?',\r\n     *      autohide: 8000\r\n     *    });\r\n     */\r\n    jsbin.$document.on('tip', function (event, data) {\r\n      var tipData = data;\r\n      if (typeof data === 'string') {\r\n        tipData = {};\r\n        tipData.content = data;\r\n        tipData.type = 'info';\r\n      }\r\n      // If the content and the type haven't changed, just set it again.\r\n      if ($tipContent.html() === tipData.content &&\r\n          $tip.hasClass(tipData.type)) return setTip(data);\r\n      removeTip(function () {\r\n        setTip(tipData);\r\n      });\r\n    });\r\n\r\n    $('#tip').on('click', 'a.dismiss', function () {\r\n      removeTip();\r\n      return false;\r\n    });\r\n\r\n    // Escape\r\n   jsbin.$document.keydown(function (event) {\r\n      if (event.which == 27) {\r\n        removeTip();\r\n      }\r\n    });\r\n\r\n  });\ndefine('skylark-jsbin-client/chrome/keys',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /*global jsbin*/\r\n  /*global $document*/\r\n  'use strict';\r\n\r\n  // don't store the keys if they're logged in, since we have this on the server\r\n  if (jsbin.user && jsbin.user.name) {\r\n    return;\r\n  }\r\n\r\n  var keys = {};\r\n\r\n  var find = function (url) {\r\n    var key = keys[url || jsbin.getURL({ withRevision: true, withoutRoot: true })] || {};\r\n    return key.c;\r\n  };\r\n\r\n  try {\r\n    if ('localStorage' in window && window['localStorage'] !== null) { // jshint ignore:line\r\n\r\n    }\r\n  } catch(e){\r\n    return find;\r\n  }\r\n\r\n  function init() {\r\n    keys = JSON.parse(localStorage.keys || '{}');\r\n  }\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    keys[jsbin.getURL({ withRevision: false, withoutRoot: true })] = { s: jsbin.state.revsion, c: jsbin.state.checksum, d: (new Date()).getTime() };\r\n    localStorage.keys = JSON.stringify(keys);\r\n  });\r\n\r\n  // update the key lookup when a new key is stored\r\n  window.addEventListener('storage', function (event) {\r\n    if (event.key === 'keys') {\r\n      init();\r\n    }\r\n  });\r\n\r\n  init();\r\n\r\n  return jsbin.keys = find;\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/save',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,store,panels,jsbin,analytics) {\r\n  /*jshint strict: false */\r\n  /*globals $, analytics, jsbin, documentTitle, $document, throttle, editors*/\r\n  var saving = {\r\n    todo: {\r\n      html: false,\r\n      css: false,\r\n      javascript: false\r\n    },\r\n    _inprogress: false,\r\n    inprogress: function (inprogress) {\r\n      if (typeof inprogress === 'undefined') {\r\n        return saving._inprogress;\r\n      }\r\n\r\n      saving._inprogress = inprogress;\r\n      if (inprogress === false) {\r\n        var panels = ['html','css','javascript'];\r\n\r\n        var save = function () {\r\n          var todo = panels.pop();\r\n          if (todo && saving.todo[todo]) {\r\n            saving._inprogress = true;\r\n            updateCode(todo, save);\r\n            saving.todo[todo] = false;\r\n          } else if (todo) {\r\n            save();\r\n          }\r\n        };\r\n\r\n        save();\r\n      }\r\n    }\r\n  };\r\n\r\n  function getTagContent(tag) {\r\n    var html = jsbin.panels.named.html.getCode();\r\n    var result = '';\r\n\r\n    // if we don't have the tag, bail with an empty string\r\n    if (html.indexOf('<' + tag) === -1) {\r\n      return result;\r\n    }\r\n\r\n    if (tag !== 'title' && tag !== 'meta') {\r\n      console.error('getTagContent for ' + tag + ' is not supported');\r\n      return result;\r\n    }\r\n\r\n    // grab the content based on the earlier defined regexp\r\n    html.replace(getTagContent.re[tag], function (all, capture1, capture2) {\r\n      result = tag === 'title' ? capture1 : capture2;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getTagContent.re = {\r\n    meta: /(<meta name=\"description\" content=\")([^\"]*)/im,\r\n    title: /<title>(.*)<\\/title>/im\r\n  };\r\n\r\n\r\n  // to allow for download button to be introduced via beta feature\r\n  $('a.save').click(function (event) {\r\n    event.preventDefault();\r\n\r\n    analytics.milestone();\r\n    // if save is disabled, hitting save will trigger a reload\r\n    var ajax = true;\r\n    if (jsbin.saveDisabled === true) {\r\n      ajax = false;\r\n    }\r\n\r\n    if ((jsbin.state.changed || jsbin.mobile) || !jsbin.owner()) {\r\n      saveCode('save', ajax);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  var $shareLinks = $('#share .link');\r\n  var $panelCheckboxes = $('#sharemenu #sharepanels input');\r\n\r\n  // TODO remove split when live\r\n  var split = $('#sharemenu .share-split').length;\r\n\r\n  // TODO candidate for removal\r\n  function updateSavedState() {\r\n    'use strict';\r\n    if (split) {\r\n      return;\r\n    }\r\n\r\n    var mapping = {\r\n      live: 'output',\r\n      javascript: 'js',\r\n      css: 'css',\r\n      html: 'html',\r\n      console: 'console'\r\n    };\r\n\r\n    var withRevision = true;\r\n\r\n    var query = $panelCheckboxes.filter(':checked').map(function () {\r\n      return mapping[this.getAttribute('data-panel')];\r\n    }).get().join(',');\r\n    $shareLinks.each(function () {\r\n      var path = this.getAttribute('data-path');\r\n      var url = jsbin.getURL({ withRevision: withRevision }) + path + (query && this.id !== 'livepreview' ? '?' + query : ''),\r\n          nodeName = this.nodeName;\r\n      var hash = panels.getHighlightLines();\r\n\r\n      if (hash) {\r\n        hash = '#' + hash;\r\n      }\r\n\r\n      if (nodeName === 'A') {\r\n        this.href = url;\r\n      } else if (nodeName === 'INPUT') {\r\n        this.value = url;\r\n        if (path === '/edit') {\r\n          this.value += hash;\r\n        }\r\n      } else if (nodeName === 'TEXTAREA') {\r\n        this.value = ('<a class=\"jsbin-embed\" href=\"' + url + hash + '\">' + jsbin.documentTitle + '</a><' + 'script src=\"' + jsbin.static + '/js/embed.js\"><' + '/script>').replace(/<>\"&/g, function (m) {\r\n            return {\r\n              '<': '&lt;',\r\n              '>': '&gt;',\r\n              '\"': '&quot;',\r\n              '&': '&amp;'\r\n            }[m];\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  $('#sharemenu').bind('open', updateSavedState);\r\n  $('#sharebintype input[type=radio]').on('click', function () {\r\n    if (this.value === 'snapshot') {\r\n      jsbin.state.checksum = false;\r\n      saveChecksum = false;\r\n    }\r\n    updateSavedState();\r\n  });\r\n\r\n  var lastHTML = null;\r\n\r\n  function updateDocMeta(event, data) {\r\n    if (data) {\r\n      if (data.panelId !== 'html') {\r\n        return; // ignore non-html updates\r\n      }\r\n    }\r\n\r\n    var currentHTML = jsbin.panels.named.html.getCode();\r\n    if (lastHTML !== currentHTML) {\r\n      lastHTML = currentHTML;\r\n\r\n      var description = getTagContent('meta');\r\n      if (description !== jsbin.state.description) {\r\n        jsbin.state.description = description;\r\n        jsbin.state.updateSettings({ description: description });\r\n      }\r\n\r\n      var title = getTagContent('title');\r\n      if (title !== jsbin.state.title) {\r\n        jsbin.state.title = title;\r\n        jsbin.state.updateSettings({ title: title });\r\n\r\n        jsbin.documentTitle = title;\r\n        if (jsbin.documentTitle) {\r\n          document.title = jsbin.documentTitle + ' - ' + jsbin.name;\r\n        } else {\r\n          document.title = jsbin.name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  jsbin.$document.on('saveComplete', updateDocMeta); // update, not create\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    jsbin.state.changed = false;\r\n    updateSavedState();\r\n\r\n    $('#sharebintype input[type=radio][value=\"realtime\"]').prop('checked', true);\r\n\r\n    $shareLinks.closest('.menu').removeClass('hidden');\r\n\r\n    $('#jsbinurl').attr('href', jsbin.getURL()).removeClass('hidden');\r\n    $('#clone').removeClass('hidden');\r\n\r\n    updateDocMeta();\r\n  });\r\n\r\n  var saveChecksum = jsbin.state.checksum || store.sessionStorage.getItem('checksum') || false;\r\n\r\n  // store it back on state\r\n  jsbin.state.checksum = saveChecksum;\r\n\r\n  if (saveChecksum) {\r\n    // remove the disabled class, but also remove the cancelling event handlers\r\n    $('#share div.disabled').removeClass('disabled').unbind('click mousedown mouseup');\r\n  } else {\r\n    $('#share div.disabled').one('click', function (event) {\r\n      event.preventDefault();\r\n      $('a.save').click();\r\n    });\r\n  }\r\n\r\n  jsbin.$document.one('saved', function () {\r\n    $('#share div.disabled').removeClass('disabled').unbind('click mousedown mouseup');\r\n  });\r\n\r\n  function onSaveError(jqXHR, panelId) {\r\n    if (jqXHR.status === 413) {\r\n      // Hijack the tip label to show an error message.\r\n      $('#tip p').html('Sorry this bin is too large for us to save');\r\n      $(document.documentElement).addClass('showtip');\r\n    } else if (jqXHR.status === 403) {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'error',\r\n        content: 'I think there\\'s something wrong with your session and I\\'m unable to save. <a href=\"' + window.location + '\"><strong>Refresh to fix this</strong></a>, you <strong>will not</strong> lose your code.'\r\n      });\r\n    } else if (panelId) {\r\n      if (panelId) { savingLabels[panelId].text('Saving...').animate({ opacity: 1 }, 100); }\r\n      window._console.error({message: 'Warning: Something went wrong while saving. Your most recent work is not saved.'});\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // only start live saving it they're allowed to (whereas save is disabled if they're following)\r\n  if (!jsbin.saveDisabled) {\r\n    $('.code.panel .label .name').append('<span class=\"saved\">Saved</span>');\r\n\r\n    var savingLabels = {\r\n      html: $('.panel.html .name span.saved'),\r\n      javascript: $('.panel.javascript .name span.saved'),\r\n      css: $('.panel.css .name span.saved'),\r\n    };\r\n\r\n    jsbin.$document.bind('jsbinReady', function () {\r\n      jsbin.state.changed = false;\r\n      jsbin.panels.allEditors(function (panel) {\r\n        panel.on('processor', function () {\r\n          // if the url doesn't match the root - i.e. they've actually saved something then save on processor change\r\n          if (jsbin.root !== jsbin.getURL()) {\r\n            jsbin.$document.trigger('codeChange', [{ panelId: panel.id }]);\r\n          }\r\n        });\r\n      });\r\n\r\n      jsbin.$document.bind('codeChange', function (event, data) {\r\n        jsbin.state.changed = true;\r\n        // savingLabels[data.panelId].text('Saving');\r\n        if (savingLabels[data.panelId]) {\r\n          savingLabels[data.panelId].css({ 'opacity': 0 }).stop(true, true);\r\n        }\r\n      });\r\n\r\n      jsbin.$document.bind('saveComplete', jsbin.throttle(function (event, data) {\r\n        // show saved, then revert out animation\r\n        savingLabels[data.panelId]\r\n          .text('Saved')\r\n          .stop(true, true)\r\n          .animate({ opacity: 1 }, 100)\r\n          .delay(1200)\r\n          .animate({ opacity: 0 }, 500);\r\n      }, 500));\r\n\r\n      jsbin.$document.bind('codeChange', jsbin.throttle(function (event, data) {\r\n        if (!data.panelId) {\r\n          return;\r\n        }\r\n\r\n        if (jsbin.state.deleted) {\r\n          return;\r\n        }\r\n\r\n        var panelId = data.panelId;\r\n\r\n        jsbin.panels.savecontent();\r\n\r\n        if (saving.inprogress()) {\r\n          // queue up the request and wait\r\n          saving.todo[panelId] = true;\r\n          return;\r\n        }\r\n\r\n        saving.inprogress(true);\r\n\r\n        // We force a full save if there's no checksum OR if there's no bin code/url\r\n        if (!saveChecksum || !jsbin.state.code) {\r\n          // create the bin and when the response comes back update the url\r\n          saveCode('save', true);\r\n        } else {\r\n          updateCode(panelId);\r\n        }\r\n      }, 30 * 1000));\r\n    });\r\n  } else {\r\n    jsbin.$document.one('jsbinReady', function () {\r\n      'use strict';\r\n      var shown = false;\r\n      if (!jsbin.embed && !jsbin.sandbox) {\r\n        jsbin.$document.on('codeChange.live', function (event, data) {\r\n          if (!data.onload && !shown && data.origin !== 'setValue') {\r\n            shown = true;\r\n            var ismac = navigator.userAgent.indexOf(' Mac ') !== -1;\r\n            var cmd = ismac ? '⌘' : 'ctrl';\r\n            var shift = ismac ? '⇧' : 'shift';\r\n            var plus = ismac ? '' : '+';\r\n\r\n            jsbin.$document.trigger('tip', {\r\n              type: 'notification',\r\n              content: 'You\\'re currently viewing someone else\\'s live stream, but you can <strong><a class=\"clone\" href=\"' + jsbin.root + '/clone\">clone your own copy</a></strong> (' + cmd + plus + shift + plus + 'S) at any time to save your edits'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function compressKeys(keys, obj) {\r\n    obj.compressed = keys;\r\n    keys.split(',').forEach(function (key) {\r\n      obj[key] = LZString.compressToUTF16(obj[key]);\r\n    });\r\n  }\r\n\r\n  function updateCode(panelId, callback) {\r\n    var panelSettings = {};\r\n\r\n    if (jsbin.state.processors) {\r\n      panelSettings.processors = jsbin.state.processors;\r\n    }\r\n\r\n    var data = {\r\n      code: jsbin.state.code,\r\n      revision: jsbin.state.revision,\r\n      method: 'update',\r\n      panel: panelId,\r\n      content: panels.named[panelId].getCode(),\r\n      checksum: jsbin.saveChecksum,\r\n      settings: JSON.stringify(panelSettings),\r\n    };\r\n\r\n    if (jsbin.settings.useCompression && location.protocol === 'http:') {\r\n      compressKeys('content', data);\r\n    }\r\n\r\n    if (jsbin.state.processors[panelId] &&\r\n      jsbin.state.processors[panelId] !== panelId &&\r\n      jsbin.state.cache[panelId]) {\r\n      data.processed = jsbin.state.cache[panelId].result;\r\n    }\r\n\r\n    $.ajax({\r\n      url: jsbin.getURL({ withRevision: true }) + '/save',\r\n      data: data,\r\n      type: 'post',\r\n      dataType: 'json',\r\n      headers: {'Accept': 'application/json'},\r\n      success: function (data) {\r\n        jsbin.$document.trigger('saveComplete', { panelId: panelId });\r\n        if (data.error) {\r\n          saveCode('save', true, function () {\r\n            // savedAlready = data.checksum;\r\n          });\r\n        } else {\r\n          jsbin.state.latest = true;\r\n        }\r\n      },\r\n      error: function (jqXHR) {\r\n        onSaveError(jqXHR, panelId);\r\n      },\r\n      complete: function () {\r\n        saving.inprogress(false);\r\n        if (callback) { callback(); }\r\n      }\r\n    });\r\n  }\r\n\r\n  $('a.clone').click(clone);\r\n  $('#tip').delegate('a.clone', 'click', clone);\r\n\r\n  function clone(event) {\r\n    event.preventDefault();\r\n\r\n    // save our panel layout - assumes our user is happy with this layout\r\n    jsbin.panels.save();\r\n    analytics.clone();\r\n\r\n    var $form = setupform('save,new');\r\n    $form.submit();\r\n\r\n    return false;\r\n  }\r\n\r\n  function setupform(method) {\r\n  var $form = $('form#saveform').empty()\r\n      .append('<input type=\"hidden\" name=\"javascript\" />')\r\n      .append('<input type=\"hidden\" name=\"html\" />')\r\n      .append('<input type=\"hidden\" name=\"css\" />')\r\n      .append('<input type=\"hidden\" name=\"method\" />')\r\n      .append('<input type=\"hidden\" name=\"_csrf\" value=\"' + jsbin.state.token + '\" />')\r\n      .append('<input type=\"hidden\" name=\"settings\" />')\r\n      .append('<input type=\"hidden\" name=\"checksum\" />');\r\n\r\n    var settings = {};\r\n\r\n    if (jsbin.state.processors) {\r\n      settings.processors = jsbin.state.processors;\r\n    }\r\n\r\n    // this prevents new revisions forking off the welcome bin\r\n    // because it's looking silly!\r\n    if (jsbin.state.code === 'welcome') {\r\n      $form.attr('action', '/save');\r\n    }\r\n\r\n    $form.find('input[name=settings]').val(JSON.stringify(settings));\r\n    $form.find('input[name=javascript]').val(editors.javascript.getCode());\r\n    $form.find('input[name=css]').val(editors.css.getCode());\r\n    $form.find('input[name=html]').val(editors.html.getCode());\r\n    $form.find('input[name=method]').val(method);\r\n    $form.find('input[name=checksum]').val(jsbin.state.checksum);\r\n\r\n    return $form;\r\n  }\r\n\r\n  function pad(n){\r\n    return n<10 ? '0'+n : n;\r\n  }\r\n\r\n  function ISODateString(d){\r\n    return d.getFullYear()+'-'\r\n      + pad(d.getMonth()+1)+'-'\r\n      + pad(d.getDate())+'T'\r\n      + pad(d.getHours())+':'\r\n      + pad(d.getMinutes())+':'\r\n      + pad(d.getSeconds())+'Z';\r\n  }\r\n\r\n  function saveCode(method, ajax, ajaxCallback) {\r\n    // create form and post to it\r\n    var $form = setupform(method);\r\n    // save our panel layout - assumes our user is happy with this layout\r\n    jsbin.panels.save();\r\n    jsbin.panels.saveOnExit = true;\r\n\r\n    var data = $form.serializeArray().reduce(function(obj, data) {\r\n      obj[data.name] = data.value;\r\n      return obj;\r\n    }, {});\r\n\r\n    if (jsbin.settings.useCompression) {\r\n      compressKeys('html,css,javascript', data);\r\n    }\r\n\r\n    if (ajax) {\r\n      $.ajax({\r\n        url: jsbin.getURL({ withRevision: true }) + '/save',\r\n        data: data,\r\n        dataType: 'json',\r\n        type: 'post',\r\n        headers: {'Accept': 'application/json'},\r\n        success: function (data) {\r\n          if (ajaxCallback) {\r\n            ajaxCallback(data);\r\n          }\r\n\r\n          store.sessionStorage.setItem('checksum', data.checksum);\r\n          saveChecksum = data.checksum;\r\n\r\n          jsbin.state.checksum = saveChecksum;\r\n          jsbin.state.code = data.code;\r\n          jsbin.state.revision = data.revision;\r\n          jsbin.state.latest = true; // this is never not true...end of conversation!\r\n          jsbin.state.metadata = { name: jsbin.user.name };\r\n          $form.attr('action', jsbin.getURL({ withRevision: true }) + '/save');\r\n\r\n          if (window.history && window.history.pushState) {\r\n            // updateURL(edit);\r\n            var hash = panels.getHighlightLines();\r\n            if (hash) { hash = '#' + hash; }\r\n            var query = panels.getQuery();\r\n            if (query) { query = '?' + query; }\r\n            // If split is truthy (> 0) then we are using the revisonless feature\r\n            // this is temporary until we release the feature!\r\n            window.history.pushState(null, '', jsbin.getURL({withRevision: !split}) + '/edit' + query + hash);\r\n            store.sessionStorage.setItem('url', jsbin.getURL({withRevision: !split}));\r\n          } else {\r\n            window.location.hash = data.edit;\r\n          }\r\n\r\n          jsbin.$document.trigger('saved');\r\n        },\r\n        error: function (jqXHR) {\r\n          onSaveError(jqXHR, null);\r\n        },\r\n        complete: function () {\r\n          saving.inprogress(false);\r\n        }\r\n      });\r\n    } else {\r\n      $form.submit();\r\n    }\r\n  }\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/archive',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,jsbin,analytics) {\r\n  function archive(unarchive) {\r\n    /*global jsbin, $, $document, analytics*/\r\n    'use strict';\r\n    var type = unarchive === false ? 'unarchive' : 'archive';\r\n    var text = unarchive === false ? 'restore from archive' : 'archiving';\r\n    analytics[type](jsbin.getURL({ withRevision: true }));\r\n    if (!jsbin.user.name) {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'notication',\r\n        content: 'You must be logged in and the owner of the bin to archive.'\r\n      });\r\n    } else if (jsbin.owner()) {\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: jsbin.getURL({ withRevision: true }) + '/' + type,\r\n        error: function () {\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'error',\r\n            content: 'The ' + text + ' failed. If this continues, please can you file an issue?'\r\n          });\r\n        },\r\n        success: function () {\r\n          jsbin.state.metadata.archive = unarchive !== false;\r\n          updateArchiveMenu();\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'notication',\r\n            autohide: 5000,\r\n            content: 'This bin is now ' + (unarchive === false ? 'restored from the archive.' : 'archived.')\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'notication',\r\n        content: 'The ' + text + ' failed. You can only archive bins that you own.'\r\n      });\r\n    }\r\n  }\r\n\r\n  function updateArchiveMenu() {\r\n    if (jsbin.state.metadata && jsbin.state.metadata.archive) {\r\n      $('a.archivebin').hide();\r\n      $('a.unarchivebin').show();\r\n    } else {\r\n      $('a.archivebin').show();\r\n      $('a.unarchivebin').hide();\r\n    }\r\n  }\r\n\r\n  updateArchiveMenu();\r\n\r\n  return jsbin.archive = archive;\r\n});\ndefine('skylark-jsbin-client/chrome/navigation',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n  \"skylark-jsbin-chrome/hideOpen\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\",\r\n   \"./analytics\",\r\n   \"./archive\"\r\n],function ($,store,hideOpen, panels,jsbin,analytics, archive) {\r\n  var $startingpoint = $('a.startingpoint').click(function (event) {\r\n    event.preventDefault();\r\n    if (localStorage) {\r\n      analytics.saveTemplate();\r\n      localStorage.setItem('saved-javascript', panels.named.javascript.getCode());\r\n      localStorage.setItem('saved-html', panels.named.html.getCode());\r\n      localStorage.setItem('saved-css', panels.named.css.getCode());\r\n\r\n      localStorage.setItem('saved-processors', JSON.stringify({\r\n        javascript: jsbin.panels.named.javascript.processor.id,\r\n        html: jsbin.panels.named.html.processor.id,\r\n        css: jsbin.panels.named.css.processor.id,\r\n      }));\r\n\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'notification',\r\n        content: 'Starting template updated and saved',\r\n        autohide: 3000\r\n      });\r\n    } else {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'error',\r\n        content: 'Saving templates isn\\'t supported in this browser I\\'m afraid. Sorry'\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  // if (localStorage && localStorage['saved-html']) {\r\n    // $startingpoint.append('')\r\n  // }\r\n\r\n  $('a.disabled').on('click mousedown mouseup', function (event) {\r\n    event.stopImmediatePropagation();\r\n    return false;\r\n  });\r\n\r\n  $('#loginbtn').click(function () {\r\n    analytics.login();\r\n    $(this).toggleClass('open');\r\n    // $('#login').show();\r\n    // loginVisible = true;\r\n    // return false;\r\n  });\r\n\r\n  $('a.logout').click(function (event) {\r\n    event.preventDefault();\r\n\r\n    // We submit a form here because I can't work out how to style the button\r\n    // element in the form to look the same as the anchor. Ideally we would\r\n    // remove that and just let the form submit itself...\r\n    $(this.hash).submit();\r\n    // Clear session storage so private bins wont be cached.\r\n    for (i = 0; i < store.sessionStorage.length; i++) {\r\n      key = store.sessionStorage.key(i);\r\n      if (key.indexOf('jsbin.content.') === 0) {\r\n        store.sessionStorage.removeItem(key);\r\n      }\r\n    }\r\n  });\r\n\r\n  $('.homebtn').click(function (event, data) {\r\n    if (this.id === 'avatar') {\r\n      analytics.openFromAvatar();\r\n    } else if (this.id === 'profile') {\r\n      analytics.openFromAvatar();\r\n      $(this).closest('.open').removeClass('open');\r\n    } else {\r\n      analytics.open(data);\r\n    }\r\n\r\n    hideOpen();\r\n\r\n    jsbin.panels.hideAll();\r\n    return false;\r\n  });\r\n\r\n  var $lockrevision = $('div.lockrevision').on('click', function (event) {\r\n    event.preventDefault();\r\n    jsbin.saveChecksum = false;\r\n    jsbin.$document.trigger('locked');\r\n  }).on('mouseup', function () {\r\n    return false;\r\n  });\r\n\r\n  jsbin.$document.on('locked', function () {\r\n    if (!$lockrevision.data('locked')) {\r\n      analytics.lock();\r\n      $lockrevision.removeClass('icon-unlocked').addClass('icon-lock');\r\n      $lockrevision.html('<span>This bin is now locked from further changes</span>');\r\n      $lockrevision.data('locked', true);\r\n    }\r\n  });\r\n\r\n  // var $lockrevision = $('.lockrevision').on('click', function (event) {\r\n  // });\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    $lockrevision.removeClass('icon-lock').addClass('icon-unlocked').data('locked', false);\r\n    $lockrevision.html('<span>Click to lock and prevent further changes</span>');\r\n  });\r\n\r\n  // TODO decide whether to remove this, since it definitely doesn't work!\r\n  // $('#share input[type=text], #share textarea').on('beforecopy', function (event) {\r\n  //   console.log(this, this.getAttribute('data-path'));\r\n  //   analytics.share('copy', this.getAttribute('data-path').substring(1) || 'output');\r\n  // });\r\n\r\n  if (!$('#sharemenu .share-split').length) {\r\n    var $panelCheckboxes = $('#sharepanels input[type=\"checkbox\"]').on('change', function () {\r\n      updateSavedState();\r\n    });\r\n    $('#sharemenu').bind('open', function () {\r\n      $panelCheckboxes.attr('checked', false);\r\n      jsbin.panels.getVisible().forEach(function (panel) {\r\n        $panelCheckboxes.filter('[data-panel=\"' + panel.id + '\"]').prop('checked', true).change();\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  $('#jsbinurl').click(function (e) {\r\n    setTimeout(function () {\r\n      jsbin.panels.named.live.hide();\r\n    }, 0);\r\n  });\r\n\r\n  $('#runwithalerts, li.run-with-js a').click(function (event, data) {\r\n    analytics.run(data);\r\n    if (panels.named.console.visible) {\r\n      panels.named.console.render(true);\r\n    } else {\r\n      renderLivePreview(true);\r\n    }\r\n    return false;\r\n  });\r\n\r\n  $('#runconsole').click(function () {\r\n    analytics.runconsole();\r\n    panels.named.console.render(true);\r\n    return false;\r\n  });\r\n\r\n  $('#clearconsole').click(function () {\r\n    jsconsole.clear();\r\n    return false;\r\n  });\r\n\r\n  $('#showhelp').click(function () {\r\n    $body.toggleClass('keyboardHelp');\r\n    keyboardHelpVisible = $body.is('.keyboardHelp');\r\n    if (keyboardHelpVisible) {\r\n      // analytics.help('keyboard');\r\n    }\r\n    return false;\r\n  });\r\n\r\n  $('a.toggle-side-nav').on(jsbin.mobile ? 'touchstart' : 'click', function () {\r\n    $body.toggleClass('show-nav');\r\n    sideNavVisible = $body.is('.show-nav');\r\n    if (!sideNavVisible && !jsbin.mobile) {\r\n      // we only focus the editor in desktop, otherwise the keyboard jumps up\r\n      $('#skipToEditor').click();\r\n    }\r\n    return sideNavVisible;\r\n  });\r\n\r\n\r\n  $('#showurls').click(function () {\r\n    $body.toggleClass('urlHelp');\r\n    urlHelpVisible = $body.is('.urlHelp');\r\n    if (urlHelpVisible) {\r\n      // analytics.urls();\r\n    }\r\n    return false;\r\n  });\r\n\r\n  $('.code.panel > .label > span.name').dblclick(function () {\r\n    jsbin.panels.allEditors(function (panel) {\r\n      var lineNumbers = !panel.editor.getOption('lineNumbers');\r\n      panel.editor.setOption('lineNumbers', lineNumbers);\r\n      jsbin.settings.editor.lineNumbers = lineNumbers;\r\n    });\r\n  });\r\n\r\n  $('a.createnew').click(function (event) {\r\n    event.preventDefault();\r\n    var i, key;\r\n    analytics.createNew();\r\n    // FIXME this is out and out [cr]lazy....\r\n    jsbin.panels.savecontent = function(){};\r\n    for (i = 0; i < store.sessionStorage.length; i++) {\r\n      key = store.sessionStorage.key(i);\r\n      if (key.indexOf('jsbin.content.') === 0) {\r\n        store.sessionStorage.removeItem(key);\r\n      }\r\n    }\r\n\r\n    // clear out the write checksum too\r\n    store.sessionStorage.removeItem('checksum');\r\n\r\n    jsbin.panels.saveOnExit = false;\r\n\r\n    // first try to restore their default panels\r\n    jsbin.panels.restore();\r\n\r\n    // if nothing was shown, show html & live\r\n    setTimeout(function () {\r\n      if (jsbin.panels.getVisible().length === 0) {\r\n        jsbin.panels.named.html.show();\r\n        jsbin.panels.named.live.show();\r\n      }\r\n      window.location = jsbin.root;\r\n    }, 0);\r\n  });\r\n\r\n  var $privateButton = $('#control a.visibilityToggle#private');\r\n  var $publicButton = $('#control a.visibilityToggle#public');\r\n\r\n  var $visibilityButtons = $('#control a.visibilityToggle').click(function(event) {\r\n    event.preventDefault();\r\n\r\n    var visibility = $(this).data('vis');\r\n\r\n    $.ajax({\r\n      url: jsbin.getURL({ withRevision: true }) + '/' + visibility,\r\n      type: 'post',\r\n      success: function (data) {\r\n\r\n        jsbin.$document.trigger('tip', {\r\n          type: 'notification',\r\n          content: 'This bin is now ' + visibility,\r\n          autohide: 6000\r\n        });\r\n\r\n        $visibilityButtons.css('display', 'none');\r\n\r\n        if (visibility === 'public') {\r\n          $privateButton.css('display', 'block');\r\n        } else {\r\n          $publicButton.css('display', 'block');\r\n        }\r\n\r\n      }\r\n    });\r\n  });\r\n\r\n  $('form.login').closest('.menu').bind('close', function () {\r\n    $(this).find('.loginFeedback').empty().hide();\r\n    $('#login').removeClass('forgot');\r\n  });\r\n\r\n  $('#lostpass').click(function (e) {\r\n    $('#login').addClass('forgot').find('input[name=email]').focus();\r\n    return false;\r\n  });\r\n\r\n  jsbin.settings.includejs = jsbin.settings.includejs === undefined ? true : jsbin.settings.includejs;\r\n\r\n  // ignore for embed as there might be a lot of embeds on the page\r\n  if (!jsbin.embed && store.sessionStorage.getItem('runnerPending')) {\r\n    jsbin.$document.trigger('tip', {\r\n      content: 'It looks like your last session may have crashed, so I\\'ve disabled \"Auto-run JS\" for you',\r\n      type: 'error',\r\n    });\r\n    store.sessionStorage.removeItem('runnerPending');\r\n    jsbin.settings.includejs = false;\r\n  }\r\n\r\n  $('#enablejs').change(function () {\r\n    jsbin.settings.includejs = this.checked;\r\n    analytics.enableLiveJS(jsbin.settings.includejs);\r\n    panels.named.live.render();\r\n  }).attr('checked', jsbin.settings.includejs);\r\n\r\n  if (!jsbin.embed && jsbin.settings.hideheader) {\r\n    jsbin.$body.addClass('hideheader');\r\n  }\r\n\r\n  var cancelUp = false;\r\n  $('form input, form textarea').focus(function () {\r\n    this.select();\r\n    cancelUp = true;\r\n  }).mouseup(function () {\r\n    if (cancelUp) {\r\n      cancelUp = false;\r\n      return false;\r\n    }\r\n  });\r\n\r\n  if (window.location.hash) {\r\n    $('a[href$=\"' + window.location.hash + '\"]').mousedown();\r\n  }\r\n\r\n  var ismac = navigator.userAgent.indexOf(' Mac ') !== -1,\r\n      mackeys = {\r\n        'ctrl': '⌘',\r\n        'shift': '⇧',\r\n        'del': '⌫'\r\n      };\r\n\r\n  $('#control').find('a[data-shortcut]').each(function () {\r\n    var $this = $(this),\r\n        data = $this.data();\r\n\r\n    var key = data.shortcut;\r\n    if (ismac) {\r\n      key = key.replace(/ctrl/i, mackeys.ctrl).replace(/shift/, mackeys.shift).replace(/del/, mackeys.del).replace(/\\+/g, '').toUpperCase();\r\n    }\r\n\r\n    $this.append('<span class=\"keyshortcut\">' + key + '</span>');\r\n  });\r\n\r\n  (function () {\r\n\r\n  var re = {\r\n    head: /<head(.*)\\n/i,\r\n    meta: /<meta name=\"description\".*?>/i,\r\n    metaContent: /content=\".*?\"/i\r\n  };\r\n\r\n  var metatag = '<meta name=\"description\" content=\"[add your bin description]\">\\n';\r\n\r\n  $('#addmeta').click(function () {\r\n    // if not - insert\r\n    // <meta name=\"description\" content=\"\" />\r\n    // if meta description is in the HTML, highlight it\r\n    var editor = jsbin.panels.named.html,\r\n        cm = editor.editor,\r\n        html = editor.getCode();\r\n\r\n    if (!editor.visible) {\r\n      editor.show();\r\n    }\r\n\r\n    if (!re.meta.test(html)) {\r\n      if (re.head.test(html)) {\r\n        html = html.replace(re.head, '<head$1\\n' + metatag);\r\n      } else {\r\n        // slap in the top\r\n        html = metatag + html;\r\n      }\r\n    }\r\n\r\n    editor.setCode(html);\r\n\r\n    // now select the text\r\n    // editor.editor is the CM object...yeah, sorry about that...\r\n    var cursor = cm.getSearchCursor(re.meta);\r\n    cursor.findNext();\r\n\r\n    var contentCursor = cm.getSearchCursor(re.metaContent);\r\n    contentCursor.findNext();\r\n\r\n    var from = { line: cursor.pos.from.line, ch: cursor.pos.from.ch + '<meta name=\"description\" content=\"'.length },\r\n        to = { line: contentCursor.pos.to.line, ch: contentCursor.pos.to.ch - 1 };\r\n\r\n    cm.setCursor(from);\r\n    cm.setSelection(from, to);\r\n    cm.on('cursoractivity', function () {\r\n      cm.on('cursoractivity', null);\r\n      mark.clear();\r\n    });\r\n\r\n    var mark = cm.markText(from, to, { className: 'highlight' });\r\n\r\n    cm.focus();\r\n\r\n    return false;\r\n  });\r\n\r\n  $('a.publish-to-vanity').on('click', function (event) {\r\n    event.preventDefault();\r\n    analytics.publishVanity();\r\n\r\n    $.ajax({\r\n      type: 'post',\r\n      url: this.href,\r\n      data: { url: jsbin.getURL({ withRevision: true }) },\r\n      success: function () {\r\n        jsbin.$document.trigger('tip', {\r\n          type: 'notification',\r\n          content: 'This bin is now published to your vanity URL: <a target=\"_blank\" href=\"' + jsbin.shareRoot + '\">' + jsbin.shareRoot + '</a>'\r\n        });\r\n      },\r\n      error: function (xhr) {\r\n        jsbin.$document.trigger('tip', {\r\n          type: 'error',\r\n          content: 'There was a problem publishing to your vanity URL. Can you try again or file a <a target=\"_blank\" href=\"' + githubIssue() + '\">new issue</a>?'\r\n        });\r\n      }\r\n    })\r\n  });\r\n\r\n  jsbin.$document.on('click', 'a.deleteallbins', function () {\r\n    if (jsbin.user && jsbin.state.metadata.name === jsbin.user.name) {\r\n      if (confirm('Delete all snapshots of this bin including this one?')) {\r\n      analytics.deleteAll();\r\n      $.ajax({\r\n        type: 'post',\r\n        url: jsbin.getURL() + '/delete-all',\r\n        success: function () {\r\n          jsbin.state.deleted = true;\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'error',\r\n            content: 'This bin and history is now deleted. You can continue to edit, but once you leave the bin can\\'t be retrieved'\r\n          });\r\n        },\r\n        error: function (xhr) {\r\n          if (xhr.status === 403) {\r\n            jsbin.$document.trigger('tip', {\r\n              content: 'You don\\'t own this bin, so you can\\'t delete it.',\r\n              autohide: 5000\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    } else {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'error',\r\n        content: 'You must be logged in <em><strong>the bin owner</strong></em> to delete all snapshots. <a target=\"_blank\" href=\"/help/delete-a-bin\">Need help?</a>'\r\n      });\r\n    }\r\n  });\r\n\r\n  $('a.deletebin').on('click', function (e) {\r\n    e.preventDefault();\r\n    if (confirm('Delete this bin?')) {\r\n      analytics['delete']();\r\n      $.ajax({\r\n        type: 'post',\r\n        url: jsbin.getURL({ withRevision: true }) + '/delete',\r\n        data: { checksum: jsbin.state.checksum },\r\n        success: function () {\r\n          jsbin.state.deleted = true;\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'error',\r\n            content: 'This bin is now deleted. You can continue to edit, but once you leave the bin can\\'t be retrieved'\r\n          });\r\n        },\r\n        error: function (xhr) {\r\n          if (xhr.status === 403) {\r\n            jsbin.$document.trigger('tip', {\r\n              content: 'You don\\'t own this bin, so you can\\'t delete it.',\r\n              autohide: 5000\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  $('a.archivebin').on('click', function (e) {\r\n    e.preventDefault();\r\n    archive();\r\n  });\r\n\r\n  $('a.unarchivebin').on('click', function (e) {\r\n    e.preventDefault();\r\n    archive(false);\r\n  });\r\n\r\n  var $enableUniversalEditor = $('#enableUniversalEditor').on('change', function (e) {\r\n    e.preventDefault();\r\n\r\n    jsbin.settings.editor.simple = this.checked;\r\n    analytics.universalEditor(jsbin.settings.editor.simple);\r\n    settings.save(function () {\r\n      window.location.reload();\r\n    });\r\n  });\r\n\r\n  if (jsbin.settings.editor.simple) {\r\n    $enableUniversalEditor.prop('checked', true);\r\n  }\r\n\r\n  $('#skipToEditor').on('click keypress', function () {\r\n    var first = (jsbin.panels.getVisible() || ['html']).shift();\r\n    if (jsbin.settings.editor.simple || jsbin.mobile) {\r\n      $('#' + first.id).focus();\r\n    } else if (first) {\r\n      first.editor.focus();\r\n    } else {\r\n      jsbin.panels.named.html.editor.focus();\r\n    }\r\n    return false;\r\n  });\r\n\r\n  }());\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/file-drop',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  function allowDrop(holder) {\r\n    var cursorPosition = null;\r\n    var panel = null;\r\n\r\n    var guid = (function() {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n      }\r\n      return function() {\r\n        return s4() + s4();\r\n      };\r\n    })();\r\n\r\n    function uploadAsset(file) {\r\n      var loading = document.createElement('div');\r\n      loading.className = 'assetLoading';\r\n      loading.innerHTML = '0% uploading...';\r\n      var currentStatus = 0;\r\n\r\n      var progress = function progress(percent, status) {\r\n        if (percent - currentStatus < 10) {\r\n          currentStatus = percent;\r\n        } else {\r\n          currentStatus += 10;\r\n          requestAnimationFrame(function () {\r\n            progress(percent, status);\r\n          });\r\n        }\r\n\r\n        if (loading && currentStatus > 0) {\r\n          if (currentStatus > 97) {\r\n            loading.innerHTML = '97% uploaded...';\r\n            // because there's some lag between 100% and actually rendering\r\n          } else {\r\n            loading.innerHTML = currentStatus + '% uploaded...';\r\n          }\r\n        }\r\n      };\r\n\r\n      var widget = null;\r\n      var insertPosition = cursorPosition || panel.getCursor();\r\n      if (!jsbin.lameEditor) {\r\n        var line = cursorPosition ? cursorPosition.line : panel.getCursor().line;\r\n        widget = panel.addLineWidget(line, loading, {coverGutter: false, nohscroll: true});\r\n      } else {\r\n        insertTextArea(panel, 'Uploading ...', true);\r\n      }\r\n\r\n      var s3upload = new S3Upload({\r\n        s3_sign_put_url: '/account/assets/sign',\r\n        s3_object_name: file.name.replace(/\\s+/g, '-'),\r\n        files: [file],\r\n\r\n        onProgress: function (percent, status) {\r\n          if (!jsbin.lameEditor) {\r\n            requestAnimationFrame(function () {\r\n              progress(percent, status);\r\n            });\r\n          }\r\n        },\r\n\r\n        onError: function (reason, fromServer) {\r\n          currentStatus = -1;\r\n          console.error('Failed to upload: ' + fromServer);\r\n          loading.innerHTML = fromServer || 'Failed to complete';\r\n          loading.style.color = 'red';\r\n          panel = null;\r\n          cursorPosition = null;\r\n          if (widget) {\r\n            setTimeout(function () {\r\n              widget.clear();\r\n            }, 4000);\r\n          }\r\n        },\r\n\r\n        onFinishS3Put: function (url) {\r\n          if (!jsbin.lameEditor) {\r\n            widget.clear();\r\n            panel.replaceRange(getInsertText(file.type, panel, url), insertPosition);\r\n          } else {\r\n            insertTextArea(panel, getInsertText(file.type, panel, url));\r\n            $(document).trigger('codeChange', { panelId: panel.id });\r\n          }\r\n          panel = null;\r\n          cursorPosition = null;\r\n        }\r\n      });\r\n    }\r\n\r\n    function insertTextArea(el, string, select) {\r\n      var start = el.selectionStart;\r\n      var end = el.selectionEnd;\r\n\r\n      var target = el;\r\n      var value = target.value;\r\n\r\n      // set textarea value to: text before caret + tab + text after caret\r\n      target.value = value.substring(0, start) + string + value.substring(end);\r\n\r\n      // put caret at right position again (add one for the tab)\r\n      el.selectionStart = el.selectionEnd = start + 1;\r\n\r\n      if (select) {\r\n        el.selectionStart -= 1;\r\n        el.selectionEnd = el.selectionEnd + string.length;\r\n      } else {\r\n        el.selectionStart = el.selectionEnd = start + string.length;\r\n      }\r\n    }\r\n\r\n    function getInsertText(mime, cm, url) {\r\n      // var panel = jsbin.panels.panels[cm.id];\r\n      var processor = jsbin.state.processors[cm.id];\r\n\r\n      if (cm.id === 'html') {\r\n        if (mime.indexOf('image/') === 0) {\r\n          if (processor === 'markdown') {\r\n            return '![' + url + '](' + url + ')';\r\n          }\r\n\r\n          if (processor === 'jade') {\r\n            return 'img(src=\"' + url + '\")';\r\n          }\r\n\r\n          return '<img src=\"' + url + '\">';\r\n        }\r\n\r\n        return url;\r\n      }\r\n\r\n      if (cm.id === 'css') {\r\n        if (mime.indexOf('image/') === 0) {\r\n          return 'url(' + url + ')';\r\n        }\r\n\r\n        return url;\r\n      }\r\n\r\n      // note: js just gets the url...\r\n      return url;\r\n    }\r\n\r\n    var dragging = false;\r\n\r\n    holder.ondragover = function () {\r\n      dragging = true;\r\n      return false;\r\n    };\r\n\r\n    holder.ondragend = function () {\r\n      dragging = false;\r\n      return false;\r\n    };\r\n\r\n    function getFileData(item) {\r\n      return new Promise(function (resolve, reject) {\r\n        if (item.kind === 'string') {\r\n          item.getAsString(function (filename) {\r\n            resolve(filename);\r\n          });\r\n        } else {\r\n          resolve(item.getAsFile());\r\n        }\r\n      });\r\n    }\r\n\r\n    $('#bin textarea').on('paste', function (jQueryEvent) {\r\n      if ($(this).closest('.CodeMirror').length) {\r\n        panel = $(this).closest('.CodeMirror')[0].CodeMirror;\r\n      } else {\r\n        panel = this;\r\n      }\r\n\r\n      var event = jQueryEvent.originalEvent;\r\n      var items = event.clipboardData.items;\r\n\r\n      // this means we've copied a file that's an app icon, or it's just text\r\n      // which we don't want to kick in anyway.\r\n      if (!items || event.clipboardData.types[0].indexOf('text/') === 0) {\r\n        return;\r\n      }\r\n\r\n      var file = null;\r\n      var promises = [];\r\n      for (var i = 0; i < items.length; i++) {\r\n        promises.push(getFileData(items[i]));\r\n      }\r\n\r\n      Promise.all(promises).then(function (data) {\r\n        var blobname = data.sort(function (a, b) {\r\n          return typeof a === 'string' ? 1 : -1;\r\n        });\r\n        var file = data[0];\r\n        file.name = data[1] || guid() + '.' + file.type.split('/')[1];\r\n\r\n        uploadAsset(file);\r\n      }).catch(function (error) {\r\n        console.log(error.stack);\r\n      });\r\n\r\n      // FIXME???\r\n      jQueryEvent.preventDefault();\r\n    });\r\n\r\n    $('.CodeMirror').on('mousemove', function (e) {\r\n      if (!dragging) {\r\n        return;\r\n      }\r\n\r\n      panel = this.CodeMirror;\r\n      cursorPosition = this.CodeMirror.coordsChar({ top: event.y, left: event.x });\r\n      this.CodeMirror.setCursor(cursorPosition);\r\n    });\r\n\r\n    var jstypes = ['javascript', 'coffeescript', 'coffee', 'js'];\r\n    var csstypes = ['css', 'less', 'sass', 'scss'];\r\n    var htmltypes = ['html', 'markdown', 'plain'];\r\n\r\n    holder.ondrop = function (e) {\r\n      dragging = false;\r\n      e.preventDefault();\r\n\r\n      if ($(e.target).closest('.CodeMirror').length) {\r\n        panel = $(e.target).closest('.CodeMirror')[0].CodeMirror;\r\n      } else {\r\n        panel = e.target;\r\n      }\r\n\r\n      var file = e.dataTransfer.files[0],\r\n          reader = new FileReader();\r\n\r\n      if (file.type.indexOf('text/') !== 0) {\r\n        // this isn't a text file for populating the panel, try uploading instead\r\n        uploadAsset(file);\r\n        return;\r\n      }\r\n\r\n      reader.onload = function (event) {\r\n        // put JS in the JavaScript panel\r\n        var type = file.type ? file.type.toLowerCase().replace(/^(text|application)\\//, '') : file.name.toLowerCase().replace(/.*\\./g, ''),\r\n            panelId = null,\r\n            panel = editors[panelId],\r\n            syncCode = event.target.result,\r\n            scroller = null;\r\n\r\n        if (jstypes.indexOf(type) !== -1) {\r\n          panelId = 'javascript';\r\n        } else if (csstypes.indexOf(type) !== -1) {\r\n          panelId = 'css';\r\n        } else if (htmltypes.indexOf(type) !== -1) {\r\n          panelId = 'html';\r\n        }\r\n\r\n        if (panelId === null) {\r\n          // then we have an asset upload\r\n          return uploadAsset(file);\r\n        }\r\n\r\n        panel = editors[panelId];\r\n        scroller = panel.editor.scroller;\r\n\r\n        panel.setCode(event.target.result);\r\n        panel.show();\r\n\r\n        try {\r\n          // now kick off - basically just doing a copy and paste job from @wookiehangover - thanks man! :)\r\n          var worker = new Worker(jsbin['static'] + '/js/editors/sync-worker.js');\r\n\r\n          // pass the worker the file object\r\n          worker.postMessage(file);\r\n\r\n          panel.$el.find('> .label').append('<small> (live: edit & save in your fav editor)</small>');\r\n\r\n          // bind onmessage handler\r\n          worker.onmessage = function (event) {\r\n            var top = scroller.scrollTop;\r\n            panel.setCode(event.data.body);\r\n            scroller.scrollTop = top;\r\n            syncCode = event.data.body;\r\n          };\r\n        } catch (e) {\r\n          // fail on the awesomeness...oh well\r\n        }\r\n      };\r\n\r\n      reader.readAsText(file);\r\n\r\n      return false;\r\n    };\r\n  }\r\n\r\n  // test for dnd and file api first\r\n  if (!!(window.File && window.FileList && window.FileReader)) {\r\n    allowDrop(document.body);\r\n  }\r\n});\ndefine('skylark-jsbin-client/chrome/gist',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-processors\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\"\r\n],function ($,processors,panels,jsbin) {\r\n    /*global $:true, jsbin:true, processors:true, $document*/\r\n    'use strict';\r\n\r\n    // Only allow gist import/export if CORS is supported\r\n    var CORS = !!('withCredentials' in new XMLHttpRequest() ||\r\n                  typeof XDomainRequest !== 'undefined');\r\n    if (!CORS) {\r\n      return $(function () {\r\n        $('#export-as-gist').remove();\r\n      });\r\n    }\r\n\r\n    var Gist = function (id) {\r\n      var gist = this,\r\n          token = '';\r\n      gist.code = {};\r\n      if (jsbin.user && jsbin.user.github_token) { // jshint ignore:line\r\n        token = '?access_token=' + jsbin.user.github_token; // jshint ignore:line\r\n      }\r\n      $.get('https://api.github.com/gists/' + id + token, function (data) {\r\n        if (!data) {return;}\r\n        $.each(data.files, function (fileName, fileData) {\r\n          var ext = fileName.split('.').slice(-1).join('');\r\n          gist.code[ext] = fileData.content;\r\n        });\r\n        gist.setCode();\r\n      });\r\n      return this;\r\n    };\r\n\r\n    Gist.prototype.setCode = function () {\r\n      var gist = this;\r\n      $.each(gist.code, function (ext, data) {\r\n        var processorInit = jsbin.processors.findByExtension(ext),\r\n            target = processorInit.target || processorInit.id,\r\n            panel = panels.named[target];\r\n        if (!panel) {return;}\r\n        processors.set(target, processorInit.id);\r\n        jsbin.saveDisabled = true;\r\n        panel.setCode(data);\r\n        jsbin.saveDisabled = false;\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Export as gist\r\n     */\r\n\r\n    $('a.export-as-gist').click(function () {\r\n      var gist = {\r\n        public: true,\r\n        files: {}\r\n      };\r\n\r\n      var panels = {\r\n        html: panels.named.html.render(),\r\n        javascript: panels.named.javascript.render(),\r\n        css: panels.named.css.render()\r\n      };\r\n\r\n      Promise.all(panels).then(function (panels) { // RSVP.hash\r\n        // Build a file name\r\n        Object.keys(panels).forEach(function (key) {\r\n          var ext = processors[key].extensions ? processors[key].extensions[0] : key;\r\n          var file = ['jsbin', (jsbin.state.code || 'untitled'), ext].join('.');\r\n          if (panels[key].length) {\r\n            gist.files[file] = {\r\n              content: panels[key]\r\n            };\r\n          }\r\n        });\r\n\r\n        if (!gist.files.javascript && !gist.files.css) {\r\n          delete gist.files[['jsbin', (jsbin.state.code || 'untitled'), 'html'].join('.')]\r\n        }\r\n\r\n        if (jsbin.state.processors) {\r\n          panels.source = jsbin.state.processors;\r\n          Object.keys(panels.source).forEach(function (key) {\r\n            panels.source[key] = jsbin.panels.panels[key].getCode();\r\n          });\r\n        }\r\n\r\n        var index = binToFile(panels);\r\n\r\n        gist.files['index.html'] = {\r\n          content: index\r\n        };\r\n\r\n        var desc = [];\r\n\r\n        if (jsbin.state.title) {\r\n          desc.push(jsbin.state.title);\r\n        }\r\n\r\n        if (jsbin.state.description) {\r\n          desc.push(jsbin.state.description);\r\n        }\r\n\r\n        desc.push('// source ' + jsbin.getURL());\r\n\r\n        gist.description = desc.join('\\n\\n');\r\n\r\n        var token = '';\r\n        if (jsbin.user && jsbin.user.github_token) { // jshint ignore:line\r\n          token = '?access_token=' + jsbin.user.github_token; // jshint ignore:line\r\n        }\r\n\r\n        $.ajax({\r\n          type: 'POST',\r\n          url: 'https://api.github.com/gists' + token,\r\n          data: JSON.stringify(gist),\r\n          dataType: 'json',\r\n          crossDomain: true,\r\n          success: function (data) {\r\n            jsbin.$document.trigger('tip', {\r\n              type: 'notification',\r\n              content: 'Gist created! <a href=\"' + data.html_url + '\" target=\"_blank\">Open in new tab.</a>' // jshint ignore:line\r\n            });\r\n          },\r\n          error: function (xhr, status, error) {\r\n            jsbin.$document.trigger('tip', {\r\n              type: 'error',\r\n              content: 'There was a problem creating the gist: ' + error\r\n            });\r\n            console.group('gist');\r\n            console.log(gist);\r\n            console.groupEnd('gist');\r\n          }\r\n        });\r\n      }, function (error) {\r\n        console.error(error.stack);\r\n      });\r\n\r\n      // return false becuase there's weird even stuff going on. ask @rem.\r\n      return false;\r\n    });\r\n\r\n    return Gist;\r\n\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/spinner',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  function spinner(element) {\r\n    'use strict';\r\n    var c = element || document.createElement('canvas');\r\n    if (!c.getContext) {\r\n      return false;\r\n    }\r\n    var ctx = c.getContext('2d');\r\n\r\n    var rafID = null;\r\n\r\n    c.height = c.width = 11;\r\n\r\n    var TORADIAN = Math.PI / 180;\r\n    var w = c.width;\r\n    var h = c.height;\r\n    var deg = 0;\r\n    var r = 4;\r\n    var speed = 4;\r\n    var tailspeed = 1/7;\r\n\r\n    ctx.strokeStyle = 'rgba(0,0,0,.5)';\r\n    ctx.lineWidth = 1.5;\r\n\r\n    var last = true;\r\n    function draw() {\r\n      rafID = window.requestAnimationFrame(draw);\r\n\r\n      deg += speed;\r\n\r\n      var start = ((deg * tailspeed)) % 360; // A / TAIL\r\n      var end = deg % 360;              // B / HEAD\r\n      var flip = end === start;\r\n\r\n      if (flip) {\r\n        last = !last;\r\n        // this prevents a single blank frame when\r\n        // the start and end have the same value\r\n        start -= 1;\r\n      }\r\n\r\n      ctx.fillStyle = '#f9f9f9';\r\n      ctx.strokeStyle = '#111';\r\n      ctx.fillRect(w/2 - r*2, h/2 - r*2, r * 4, r * 4);\r\n      ctx.beginPath();\r\n      ctx.arc(w/2 + 0.5, h/2 + 0.5, r, start * TORADIAN, end * TORADIAN, last);\r\n      ctx.stroke();\r\n\r\n      ctx.strokeStyle = '#999';\r\n      ctx.beginPath();\r\n      ctx.arc(w/2 + 0.5, h/2 + 0.5, r, end * TORADIAN, start * TORADIAN, last);\r\n      ctx.stroke();\r\n\r\n      ctx.closePath();\r\n\r\n    }\r\n\r\n    return {\r\n      element: c,\r\n      start: draw,\r\n      stop: function () {\r\n        window.cancelAnimationFrame(rafID);\r\n      }\r\n    };\r\n  }\r\n\r\n  return jsbin.spinner = spinner;\r\n});\ndefine('skylark-jsbin-client/chrome/infocard',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-chrome/hideOpen\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,hideOpen,jsbin,analytics) {\r\n  if ('EventSource' in global) {\r\n    return setupInfocard()\r\n  } else {\r\n    $.getScript(jsbin['static'] + '/js/vendor/eventsource.js', setupInfocard);\r\n  }\r\n  function setupInfocard() {\r\n    /*global spinner, $, jsbin, prettyDate, EventSource, throttle, $document, analytics, throttle*/\r\n    'use strict';\r\n\r\n    // don't insert this on embeded views\r\n    if (jsbin.embed) {\r\n      return;\r\n    }\r\n\r\n    var $template = $('#infocard'); // donkey way of cloning from template\r\n    var $header = $template.find('header');\r\n    var canvas = $header.find('canvas')[0];\r\n    var s = spinner(canvas);\r\n    var htmlpanel = jsbin.panels.named.html;\r\n    var viewers = 0;\r\n    var es = null;\r\n\r\n    var re = {\r\n      head: /<head(.*)\\n/i,\r\n      meta: /(<meta name=\"description\" content=\")([^\"]*)/im,\r\n      title: /<title>(.*)<\\/title>/im\r\n    };\r\n\r\n    if ($template.length === 0) {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    function updateStats(event, _data) {\r\n      var data = _data ? JSON.parse(_data) : JSON.parse(event.data);\r\n\r\n      if (data.connections > 0 && viewers === 0) {\r\n        $template.addClass('viewers');\r\n      }\r\n\r\n      if (viewers !== data.connections) {\r\n        var $b = $header.find('.viewers b').removeClass('up down').html('<b>' + data.connections + '<br>' + viewers + '<br>' + data.connections + '</b>'),\r\n            c = viewers > data.connections ? 'down' : 'up';\r\n        setTimeout(function () {\r\n          $b.addClass(c);\r\n        }, 0);\r\n      }\r\n\r\n      viewers = data.connections;\r\n\r\n      if (viewers === 0) {\r\n        setTimeout(function () {\r\n          $template.removeClass('viewers');\r\n        }, 250);\r\n      }\r\n\r\n    }\r\n\r\n    function listenStats(owner) {\r\n      if (window.EventSource && owner) {\r\n        // TODO use pagevisibility api to close connection\r\n        if (es) {\r\n          es.close();\r\n        }\r\n        es = new EventSource(jsbin.getURL() + '/stats?checksum=' + jsbin.state.checksum);\r\n        es.addEventListener('stats', jsbin.throttle(updateStats, 1000));\r\n      }\r\n    }\r\n\r\n    function insertTag(tag) {\r\n      var cm = htmlpanel.editor;\r\n      var html = htmlpanel.getCode();\r\n\r\n      if (tag === 'meta') {\r\n        tag = 'meta name=\"description';\r\n      }\r\n\r\n\r\n      if (html.indexOf('<' + tag) === -1) {\r\n        var userhtml = getPanelText(tag === 'title' ? 'title' : 'description', '');\r\n        if (re.head.test(html)) {\r\n          html = html.replace(re.head, '<head$1\\n' + userhtml);\r\n        } else {\r\n          // slap in the top\r\n          html = userhtml + html;\r\n        }\r\n        htmlpanel.setCode(html);\r\n      }\r\n    }\r\n\r\n    function getPanelText(type, text) {\r\n      var processor = jsbin.state.processors.html;\r\n\r\n      text = text.replace(/\"/g, '&quot;');\r\n\r\n      if (type === 'title') {\r\n        if (processor === 'jade') {\r\n          return 'title ' + text + '\\n';\r\n        }\r\n\r\n        return '<title>' + text + '</title>\\n';\r\n      }\r\n\r\n      if (type === 'description') {\r\n        if (processor === 'jade') {\r\n          return 'meta(name=\"description\", content=\"' + text + '\")\\n';\r\n        }\r\n\r\n        return '<meta name=\"description\" content=\"' + text + '\">\\n';\r\n      }\r\n\r\n      return text;\r\n    }\r\n\r\n\r\n    if ($template.find('.settings')) {\r\n      $template.find('#title').on('input', function () {\r\n        insertTag('title');\r\n        var html = htmlpanel.getCode();\r\n        var value = this.value;\r\n        var result = html.replace(re.title, function (all, capture) {\r\n          return '<title>' + value.replace(/</g, '&lt;').replace(/>/g, '&gt;') + '</title>';\r\n        });\r\n        updateCode(result);\r\n        jsbin.state.updateSettings({ title: this.value });\r\n      });\r\n\r\n      $template.find('#description').on('input', function () {\r\n        insertTag('meta');\r\n        var html = htmlpanel.getCode();\r\n        var value = this.value;\r\n        var result = html.replace(re.meta, function (all, capture) {\r\n          return capture + value.replace(/\"/g, '&quot;');\r\n        });\r\n        updateCode(result);\r\n        jsbin.state.updateSettings({ description: this.value });\r\n      });\r\n    }\r\n\r\n    function updateCode(result) {\r\n      // capture selection and cursor\r\n      var state = null;\r\n      var cursor = null;\r\n      var cm = htmlpanel.editor;\r\n      var selected = cm.somethingSelected();\r\n      if (jsbin.panels.named.html.visible) {\r\n        if (selected) {\r\n          state = cm.listSelections();\r\n        }\r\n        cursor = cm.getCursor();\r\n      }\r\n\r\n      htmlpanel.setCode(result);\r\n\r\n      // then restore\r\n      if (jsbin.panels.named.html.visible) {\r\n        if (!jsbin.mobile) cm.setCursor(cursor);\r\n        if (selected) {\r\n          cm.setSelections(state);\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateInfoCard(event) {\r\n      var meta = jsbin.state.metadata || {};\r\n      var classes = [];\r\n      var owner = false;\r\n\r\n      if (meta.name) {\r\n        $header.find('.name b').html(meta.name);\r\n        $header.find('img').attr('src', meta.avatar);\r\n        classes.push(meta.name);\r\n      }\r\n\r\n      if (jsbin.state.checksum || (jsbin.user && (meta.name === jsbin.user.name))) {\r\n        owner = true;\r\n        classes.push('author');\r\n      }\r\n\r\n      if (s) {\r\n        s.stop();\r\n      }\r\n\r\n      if (!jsbin.state.streaming || owner === true) {\r\n        $header.find('time').html(event ? 'just now' : prettyDate(meta.last_updated));\r\n      } else if (owner === false) {\r\n        $header.find('time').html('Streaming');\r\n        classes.push('streaming');\r\n        if (s) {\r\n          s.start();\r\n        }\r\n      }\r\n\r\n      if (!jsbin.checksum) {\r\n        classes.push('meta');\r\n      }\r\n\r\n      if (meta.pro) {\r\n        classes.push('pro');\r\n      }\r\n\r\n      $header.find('.visibility').text(meta.visibility);\r\n\r\n      if (meta.visibility === 'private') {\r\n        classes.push('private');\r\n      } else if (meta.visibility === 'public') {\r\n        classes.push('public');\r\n      } // TODO handle team\r\n\r\n      if (jsbin.state.code) {\r\n        $template.addClass(classes.join(' ')).parent().removeAttr('hidden');\r\n      }\r\n\r\n      if (jsbin.state.streaming) {\r\n        if (window.EventSource && owner) {\r\n          listenStats(owner);\r\n          handleVisibility(owner);\r\n          var url = jsbin.getURL();\r\n          jsbin.$document.on('saved', function () {\r\n            var newurl = window.location.toString();\r\n            if (url !== newurl) {\r\n              es.close();\r\n              listenStats(owner);\r\n            }\r\n          });\r\n        } else if (jsbin.saveDisabled === true && window.location.pathname.slice(-5) === '/edit') {\r\n          $.getScript(jsbin.static + '/js/spike.js?' + jsbin.version);\r\n          jsbin.$document.on('stats', jsbin.throttle(updateStats, 1000));\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleVisibility(owner) {\r\n      var hiddenProperty = 'hidden' in document ? 'hidden' :\r\n        'webkitHidden' in document ? 'webkitHidden' :\r\n        'mozHidden' in document ? 'mozHidden' :\r\n        null;\r\n      var visibilityStateProperty = 'visibilityState' in document ? 'visibilityState' :\r\n        'webkitVisibilityState' in document ? 'webkitVisibilityState' :\r\n        'mozVisibilityState' in document ? 'mozVisibilityState' :\r\n        null;\r\n\r\n      if (visibilityStateProperty) {\r\n        var visibilityChangeEvent = hiddenProperty.replace(/hidden/i, 'visibilitychange');\r\n        document.addEventListener(visibilityChangeEvent, function visibilityChangeEvent() {\r\n          if (document[hiddenProperty]) { // hidden\r\n            es.close();\r\n          } else {\r\n            listenStats(owner);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function initHandlers() {\r\n      $('a.more').add($header).on('mousedown touchstart', function (e) {\r\n        infocardVisible = !infocardVisible; // this is hack :-\\\r\n        hideOpen();\r\n        e.preventDefault();\r\n        analytics.infocard('click', 'no-result');\r\n        var toTrigger;\r\n        $template.toggleClass(function (index, klass) {\r\n          toTrigger = klass.indexOf('open') === -1 ? 'open' : 'close';\r\n          infocardVisible = toTrigger === 'open';\r\n          return 'open';\r\n        }).trigger(toTrigger);\r\n      });\r\n\r\n      $template.one('open', function () {\r\n        var statusCode = $('#status').data('status') || 200;\r\n        $.getJSON(jsbin.static + '/js/http-codes.json', function (codes) {\r\n          var html = '';\r\n          codes.forEach(function (code) {\r\n            html += '<option value=\"' + code.code + '\">' + code.string + '</option>';\r\n          });\r\n          $('#status').html(html).val(statusCode).on('change', function () {\r\n            jsbin.state.updateSettings({ statusCode: this.value });\r\n          });\r\n        });\r\n      }).on('close', function () {\r\n\r\n      });\r\n\r\n      function updateHeaders() {\r\n        // grab all the headers with values and send that instead\r\n        var headers = {};\r\n        $template.find('.row').each(function () {\r\n          if ($(this).find('[name=\"header-value\"]').val().trim()) {\r\n            headers[$(this).find('input:first').val()] = $(this).find('input:last').val();\r\n          }\r\n        });\r\n\r\n        jsbin.state.updateSettings({ headers: headers }, 'PUT');\r\n      }\r\n\r\n      var $headers = $template.find('#headers');\r\n      $template.on('click', '#headers button', function (event) {\r\n        event.preventDefault();\r\n        var $fields = $headers.find('span:last');\r\n        updateHeaders();\r\n\r\n        var $clones = $fields.clone(true);\r\n        $fields.before($clones);\r\n        $fields.find('input').val('').eq(0).focus();\r\n      });\r\n\r\n      $template.on('input', '.row input', function () {\r\n        updateHeaders($(this).closest('.row'));\r\n      });\r\n    }\r\n\r\n    initHandlers();\r\n    updateInfoCard();\r\n    $document.bind('saved', updateInfoCard);\r\n  }\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/last-bin',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  'use strict';\r\n\r\n  function getExpires() {\r\n    var d = new Date();\r\n\r\n    // expires in 1 hour from now\r\n    d.setTime(+d + 1000 * 60 * 60);\r\n    return d.toUTCString();\r\n  }\r\n\r\n  function save() {\r\n    var url = window.location.href;\r\n    if (url) {\r\n      document.cookie = 'last=' + encodeURIComponent(url) + '; expires=' + getExpires() + '; path=/';\r\n    } else {\r\n      // expire cookie\r\n      document.cookie = 'last=\"\"; expires=-1; path=/';\r\n    }\r\n  }\r\n\r\n  function readCookie(name) {\r\n    var nameEQ = name + '=';\r\n    var ca = document.cookie.split(';');\r\n    for(var i=0;i < ca.length;i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function updateBackButton() {\r\n    var el = document.getElementById('back');\r\n    var back = readCookie('last');\r\n\r\n    if (el && back !== null && back !== '%2Fedit') {\r\n      el.href = decodeURIComponent(back);\r\n    }\r\n  }\r\n\r\n  // save the bin url when the bin is saved, changed and when we load first time\r\n  if (jsbin && jsbin.getURL) {\r\n    jsbin.$document.on('saved', save);\r\n    save();\r\n  } else {\r\n    updateBackButton();\r\n  }\r\n});\ndefine('skylark-jsbin-client/chrome/transfer',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n   var $transfers = $('a.transfer').on('click', function (event) {\r\n      event.preventDefault();\r\n      var to = prompt('Enter the username to transfer this bin to');\r\n      to = (to || '').trim().toLowerCase();\r\n\r\n      if (to.length) {\r\n        $.ajax({\r\n          url: jsbin.getURL({ withRevision: true }) + '/transfer',\r\n          method: 'post',\r\n          data: {\r\n            to: to,\r\n            _csrf: jsbin.state.token,\r\n          },\r\n          success: function () {\r\n            window.location.reload();\r\n          },\r\n          error: function (e) {\r\n            console.log(e);\r\n            if (e.status === 403) {\r\n              alert('This bin cannot be transferred as you do not own it.');\r\n            } else if (e.status === 400) {\r\n              alert('The user \"' + to + '\" couldn\\'t be found, sorry.');\r\n            } else {\r\n              alert('Failed to transfer bin');\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n    });\r\n\r\n    var updateTransfer = function () {\r\n      if (jsbin.owner()) {\r\n        $transfers.show();\r\n      } else {\r\n        $transfers.hide();\r\n      }\r\n    }\r\n\r\n    ///updateTransfer();\r\n\r\n    return updateTransfer;\r\n});\ndefine('skylark-jsbin-client/chrome/welcome-panel',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,store,jsbin,analytics) {\r\n    /*global jsbin, $, $body, $document, analytics, settings*/\r\n    'use strict';\r\n\r\n    if (!$('#toppanel').length) {\r\n      return;\r\n    }\r\n\r\n    if (jsbin.settings.gui === undefined) {\r\n      jsbin.settings.gui = {};\r\n    }\r\n    if (jsbin.settings.gui.toppanel === undefined) {\r\n      jsbin.settings.gui.toppanel = true;\r\n      store.localStorage.setItem('settings', JSON.stringify(jsbin.settings));\r\n    }\r\n\r\n    if ($body.hasClass('toppanel') && jsbin.settings.gui.toppanel === false) {\r\n      jsbin.$body.addClass('toppanel-close');\r\n      jsbin.$body.removeClass('toppanel');\r\n    }\r\n\r\n    // analytics for panel state\r\n    analytics.welcomePanelState(jsbin.settings.gui.toppanel);\r\n\r\n    var removeToppanel = function() {\r\n      jsbin.settings.gui.toppanel = false;\r\n      settings.save();\r\n      jsbin.$body.addClass('toppanel-close');\r\n      jsbin.$body.removeClass('toppanel');\r\n\r\n      // $document.trigger('sizeeditors');\r\n    };\r\n\r\n    var showToppanel = function() {\r\n      jsbin.settings.gui.toppanel = true;\r\n      settings.save();\r\n      jsbin.$body.removeClass('toppanel-close');\r\n      jsbin.$body.addClass('toppanel');\r\n    };\r\n\r\n    var goSlow = function(e) {\r\n      jsbin.$body.removeClass('toppanel-slow');\r\n      if (e.shiftKey) {\r\n        jsbin.$body.addClass('toppanel-slow');\r\n      }\r\n    };\r\n\r\n    $('.toppanel-logo').on('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(e) {\r\n      jsbin.$document.trigger('sizeeditors');\r\n    });\r\n\r\n    $('.toppanel-hide').click(function(event) {\r\n      event.preventDefault();\r\n      goSlow(event);\r\n      removeToppanel();\r\n    });\r\n    $('.toppanel-logo').click(function(event) {\r\n      event.preventDefault();\r\n      goSlow(event);\r\n      showToppanel();\r\n    });\r\n    // $document.keydown(function (event) {\r\n    //   if (event.which === 27) {\r\n    //     if ($body.hasClass('toppanel')) {\r\n    //       removeToppanel();\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n    function shuffle(array) {\r\n      var m = array.length, t, i;\r\n\r\n      // While there remain elements to shuffle...\r\n      while (m) {\r\n\r\n        // Pick a remaining element...\r\n        i = Math.floor(Math.random() * m--);\r\n\r\n        // And swap it with the current element.\r\n        t = array[m];\r\n        array[m] = array[i];\r\n        array[i] = t;\r\n      }\r\n\r\n      return array;\r\n    }\r\n\r\n    $.ajax({\r\n      // tries to cache once a day\r\n      url: '/blog/all.json?' + (new Date()).toString().split(' ').slice(0, 4).join('-'),\r\n      dataType: 'json',\r\n      cache: true,\r\n      success: function (data) {\r\n        var blogpost = data.blog[0];\r\n        // this is daft, but it means that the landing page is the same\r\n        // for all, and ensures that blog comments end up on a single place\r\n        var root = jsbin.root.replace(/^https/, 'http');\r\n        $('.toppanel-blog ul').html('<li><a href=\"' + root + '/' + blogpost.slug + '\" target=\"_blank\" class=\"toppanel-link\">' + blogpost.title.replace(/TWDTW.*:\\s/, '') + '</a></li>');\r\n\r\n        var last = null;\r\n        var count = 1;\r\n        try {\r\n          last = store.localStorage.getItem('lastpost') || null;\r\n        } catch (e) {}\r\n\r\n        if (last !== null) {\r\n          last *= 1;\r\n          if (last < blogpost.timestamp) {\r\n            count = data.blog.reduce(function (prev, current) {\r\n              if (last < current.timestamp) {\r\n                return prev + 1;\r\n              }\r\n              return prev;\r\n            }, 0);\r\n          } else {\r\n            count = 0;\r\n          }\r\n        }\r\n\r\n        if (count) {\r\n          $('.blog a').attr('href', root + '/' + data.blog[count-1].slug).attr('data-count', count).on('click', function () {\r\n            // this is a weird hack work around to try to clear the storage\r\n            // item that says which was the last post viewed. so we update\r\n            // the timestamp when the user clicks the link, because we know\r\n            // they'll land on the latest post\r\n            try {\r\n              store.localStorage.lastpost = data.blog[count-1].timestamp;\r\n            } catch (e) {}\r\n          });\r\n        }\r\n\r\n        var help = shuffle(data.help);\r\n\r\n        $('.toppanel-help ul').html('<li><a href=\"' + root + '/' + help[0].slug + '\" target=\"_blank\" class=\"toppanel-link\">' + help[0].title + '</a></li><li><a href=\"' + root + '/' + help[1].slug + '\" target=\"_blank\" class=\"toppanel-link\">' + help[1].title + '</a></li>');\r\n\r\n      }\r\n    })\r\n\r\n    // analytics for links\r\n    $('#toppanel').find('.toppanel-link').mousedown(function() {\r\n      analytics.welcomePanelLink(this.href);\r\n    });\r\n\r\n });\ndefine('skylark-jsbin-client/chrome/help-search',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n\r\n    'use strict';\r\n    var results = $('#results');\r\n    var resultCount = $('#result-count');\r\n    var searchTerms = [];\r\n    var search = $('#helpsearch');\r\n    var position = -1;\r\n\r\n    search.on('input', throttle(function () {\r\n      if (searchTerms.length === 0) {\r\n        $.ajax({\r\n          url: '/help/search.json?' + (new Date()).toString().split(' ').slice(0, 4).join('-'),\r\n          dataType: 'json',\r\n          cache: true,\r\n          success: function (data) {\r\n            searchTerms = data;\r\n            searchFor(this.value, searchTerms);\r\n          }.bind(this)\r\n        });\r\n      } else {\r\n        searchFor(this.value, searchTerms);\r\n      }\r\n      position = -1;\r\n    }, 200));\r\n\r\n    // document.documentElement.addEventListener('click', function (event) {\r\n    //   if (event.target.id === 'search' || event.target.id === 'results') {\r\n\r\n    //   } else {\r\n    //     resultsEl.hidden = true;\r\n    //   }\r\n    // });\r\n\r\n    results.on('mousemove', function () {\r\n      if (position !== -1) {\r\n        results.children().remove('highlight');\r\n        position = -1;\r\n      }\r\n    });\r\n\r\n    search.on('keydown', function (event) {\r\n      var key = event.which;\r\n      if (key === 38 || key === 40) { // up / down\r\n        event.preventDefault();\r\n        var inc = 1;\r\n        if (key === 38) {\r\n          inc = -1;\r\n        }\r\n\r\n        position += inc;\r\n\r\n        var children = results.children();\r\n\r\n        var length = children.length;\r\n        children.removeClass('hover');\r\n\r\n        if (position < 0) {\r\n          position = length - 1;\r\n        } else if (position > length - 1) {\r\n          position = 0;\r\n        }\r\n\r\n        children.eq(position).addClass('hover');\r\n      } else if (key === 13) { // select\r\n        var url = results.find('.hover')[0];\r\n        if (url) {\r\n          window.open(url.href);\r\n          // window.location = url.href;\r\n        }\r\n      }\r\n    });\r\n\r\n    // search.on('focus', function () {\r\n    //   results.hide();\r\n    // });\r\n\r\n    function wordmap(input) {\r\n      var ignore = \"a an and on in it of if for the i is i'm i'd it's or to me be not was do so at are what bin bins\".split(' ');\r\n\r\n      var endings = 'ing ly lies s';\r\n      var endingRe = new RegExp('(' + endings.split(' ').join('|') + ')$');\r\n\r\n      return (input||'')\r\n        //- strip html\r\n        .replace(/(<([^>]+)>)/ig,'')\r\n        //- strip non-letters\r\n        .replace(/\\W/g, ' ').replace(/[\"'\\.,]/g, '')\r\n        //- turn in to array of lower case words\r\n        .toLowerCase().split(' ')\r\n        //- filter out ignored words\r\n        .filter(function (word) {\r\n          return ignore.indexOf(word.trim()) === -1;\r\n        }).filter(function (e, i, words) {\r\n          //- return unique\r\n          return words.lastIndexOf(e) === i;\r\n        }).filter(function (word) {\r\n          //- return words 3 chars or longer\r\n          return word.length > 2;\r\n        }).map(function (word) {\r\n          return word.trim().replace(endingRe, '');\r\n        }).sort();\r\n    }\r\n\r\n    function searchFor(needles, haystack) {\r\n      'use strict';\r\n      needles = wordmap(needles);\r\n      var matches = haystack.map(function (data) {\r\n        var matches = needles.filter(function (needle) {\r\n          return data.words.indexOf(needle) !== -1;\r\n        }).length;\r\n\r\n        return {\r\n          type: data.type,\r\n          title: data.title,\r\n          slug: data.slug,\r\n          category: data.category,\r\n          matches: matches\r\n        };\r\n      }).filter(function (data) {\r\n        return data.matches > 0;\r\n      }).sort(function (a, b) {\r\n        return b.matches - a.matches;\r\n      });\r\n\r\n      results.html(matches.map(function (result) {\r\n        return '<a target=\"_blank\" class=\"button\" href=\"/' + result.slug + '\">' + result.title + (result.type === 'blog' ? ' (blog)' : '') + '</a>';\r\n      }).join('\\n'));\r\n\r\n      results.show();\r\n      var s = '';\r\n      if (matches.length !== 1) {\r\n        s = 's';\r\n      }\r\n      resultCount.html(matches.length + ' result' + s);\r\n    }\r\n\r\n\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/app',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-coder/editors/codemirror\",\r\n   \"../jsbin\",\r\n   \"./gist\",\r\n   \"./analytics\"\r\n],function ($,CodeMirror,jsbin,Gist,analytics) {\r\n  // if a gist has been requested, lazy load the gist library and plug it in\r\n  if (/gist\\/.*/.test(window.location.pathname)) {\r\n    window.editors = editors; // needs to be global when the callback triggers to set the content\r\n    loadGist = function () {\r\n      window.gist = new Gist(window.location.pathname.replace(/.*\\/([^/]+)$/, \"$1\"));\r\n    };\r\n\r\n    if (editors.ready) {\r\n      loadGist();\r\n    } else {\r\n      jsbin.$document.on('jsbinReady', loadGist);\r\n    }\r\n  }\r\n\r\n  // prevent the app from accidently getting scrolled out of view\r\n  if (!jsbin.mobile) {\r\n    document.body.onscroll = window.onscroll = function () {\r\n      if (document.body.scrollTop !== 0) {\r\n        window.scrollTo(0,0);\r\n      }\r\n      return false;\r\n    };\r\n  }\r\n\r\n  window.CodeMirror = CodeMirror; // fix to allow code mirror to break naturally\r\n\r\n  // These are keys that CodeMirror (and Emmet) should never take over\r\n  // ref: https://gist.github.com/rodneyrehm/5213304\r\n  if (CodeMirror.keyMap && CodeMirror.keyMap['default']) {\r\n    var cmd = $.browser.platform === 'mac' ? 'Cmd' : 'Ctrl';\r\n    delete CodeMirror.keyMap['default'][cmd + '-L'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-T'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-W'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-J'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-R'];\r\n  }\r\n\r\n  // var link = document.createElement('link');\r\n  // link.rel = 'stylesheet';\r\n  // link.href = jsbin['static'] + '/css/font.css?' + jsbin.version;\r\n  // link.type = 'text/css';\r\n  // document.getElementsByTagName('head')[0].appendChild(link);\r\n\r\n  if (jsbin.embed) {\r\n    analytics.embed();\r\n  }\r\n\r\n});\ndefine('skylark-jsbin-client/main',[\r\n\t\"skylark-jsbin-coder\",\r\n\t\"./jsbin\",\r\n    \"./chrome/font\",\r\n    \"./chrome/analytics\",\r\n    \"./chrome/settings\",\r\n    \"./render/saved-history-preview\",\r\n    \"./chrome/esc\",\r\n    \"./chrome/share\",\r\n    \"./chrome/issue\",\r\n    \"./chrome/download\",\r\n    \"./chrome/login\",\r\n    \"./chrome/tips\",\r\n    \"./chrome/keys\",\r\n    \"./chrome/save\",\r\n    \"./chrome/navigation\",\r\n    \"./chrome/file-drop\",\r\n    \"./chrome/gist\",\r\n    \"./chrome/spinner\",\r\n    \"./chrome/infocard\",\r\n    \"./chrome/last-bin\",\r\n    \"./chrome/archive\",\r\n    \"./chrome/transfer\",\r\n    \"./chrome/welcome-panel\",\r\n    \"./chrome/help-search\",\r\n    \"./chrome/app\"\r\n\r\n],function(coder,jsbin){\r\n\treturn jsbin;\r\n});\ndefine('skylark-jsbin-client', ['skylark-jsbin-client/main'], function (main) { return main; });\n\n"]}