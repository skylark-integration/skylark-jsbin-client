{"version":3,"sources":["skylark-jsbin-client.js"],"names":["define","jsbin","$","cache","font","document","head","getElementsByTagName","selectors","size","settings","cssText","el","createElement","type","styleSheet","appendChild","createTextNode","Object","defineProperty","configurable","enumerable","get","set","val","e","insertFont","value","style","innerHTML","window","localStorage","getItem","JSON","parse","md5","removeItem","addEventListener","request","XMLHttpRequest","url","static","version","open","onload","this","status","response","setItem","send","langx","analytics","mixin","universalEditor","track","library","action","infocard","embed","top","location","milestone","pathname","clone","delete","lock","openShare","saveTemplate","createNew","from","openFromAvatar","share","label","download","showPanel","panelId","hidePanel","logout","register","success","undefined","ok","login","enableLiveJS","archiveView","visible","archive","unarchive","loadGist","id","layout","panelsVisible","panel","push","sort","join","run","publishVanity","runconsole","welcomePanelState","state","s","welcomePanelLink","on","text","save","callback","stringify","ajax","dataType","data","_csrf","token","console","log","error","xhr","chrome","panels","user","name","$history","$body","loaded","requestAttempts","$document","getVisible","length","appendTo","detach","loadList","hasClass","hookUserHistory","root","remove","setTimeout","html","frag","mobile","find","append","updatePreview","$iframe","attr","removeAttr","updateViewing","$viewing","updateLayout","$tbodys","archiveMode","$parent","parent","each","$tbody","filter","$trs","removeClass","first","addClass","$bins","$toggle","delegate","$this","$row","parents","toggleClass","indexOf","alert","change","selected","event","shiftKey","metaKey","closest","preventDefault","stopImmediatePropagation","$tr","editUrl","allEditors","editor","getCode","trim","show","click","i","replace","prettyDate","trigger","$panelButtons","$homebtn","hideOpen","keydown","which","target","is","processors","mapping","live","javascript","$sharepanels","selectedSnapshot","revision","changed","history","replaceState","getURL","withRevision","getQuery","$sharemenu","bind","prop","forEach","p","latest","checksum","$realtime","$snapshot","$andlive","checked","hide","$withLiveReload","disabled","update","saveChecksum","$sharepreview","link","linkselect","form","$directLinks","$share","shareElement","$showShare","closedropdown","opendropdown","blur","formData","shareRoot","OGurl","shareurl","query","view","hidden","className","empty","directLinksHTML","code","ext","named","extensions","toLowerCase","css","href","documentTitle","m","<",">","\"","&","githubIssue","body","navigator","userAgent","encodeURIComponent","$newissue","submit","key","email","$loginFeedback","username","complete","jqXHR","parseJSON","responseText","avatar","end","prepend","message","search","tipTimeout","$html","documentElement","$tip","$tipContent","removeTip","cb","resize","setTip","clearTimeout","content","autohide","parseInt","tipData","keys","withoutRoot","c","revsion","d","Date","getTime","init","store","saving","todo","_inprogress","inprogress","pop","updateCode","getTagContent","tag","result","re","all","capture1","capture2","meta","title","saveDisabled","owner","saveCode","$shareLinks","$panelCheckboxes","split","updateSavedState","map","getAttribute","path","nodeName","hash","getHighlightLines","lastHTML","updateDocMeta","currentHTML","description","updateSettings","sessionStorage","onSaveError","savingLabels","animate","opacity","_console","unbind","one","shown","sandbox","origin","ismac","cmd","shift","plus","stop","throttle","delay","deleted","savecontent","compressKeys","obj","compressed","LZString","compressToUTF16","panelSettings","method","useCompression","protocol","processed","headers","Accept","$form","setupform","ajaxCallback","saveOnExit","serializeArray","reduce","metadata","pushState","edit","updateArchiveMenu","processor","hideAll","$lockrevision","render","renderLivePreview","jsconsole","clear","keyboardHelpVisible","sideNavVisible","urlHelpVisible","dblclick","lineNumbers","getOption","setOption","restore","$privateButton","$publicButton","$visibilityButtons","visibility","focus","includejs","hideheader","cancelUp","select","mouseup","mousedown","mackeys","ctrl","del","shortcut","toUpperCase","metaContent","metatag","cm","test","setCode","cursor","getSearchCursor","findNext","contentCursor","line","pos","ch","to","setCursor","setSelection","mark","markText","confirm","deleteAll","$enableUniversalEditor","simple","reload","File","FileList","FileReader","holder","cursorPosition","guid","s4","Math","floor","random","toString","substring","uploadAsset","file","loading","currentStatus","widget","insertPosition","getCursor","lameEditor","insertTextArea","addLineWidget","coverGutter","nohscroll","S3Upload","s3_sign_put_url","s3_object_name","files","onProgress","percent","requestAnimationFrame","progress","onError","reason","fromServer","color","onFinishS3Put","getInsertText","replaceRange","string","start","selectionStart","selectionEnd","mime","dragging","getFileData","item","Promise","resolve","reject","kind","getAsString","filename","getAsFile","ondragover","ondragend","jQueryEvent","CodeMirror","originalEvent","items","clipboardData","types","promises","then","a","b","catch","stack","coordsChar","y","left","x","jstypes","csstypes","htmltypes","ondrop","dataTransfer","reader","editors","scroller","worker","Worker","postMessage","$el","onmessage","scrollTop","readAsText","allowDrop","binToFile","CORS","XDomainRequest","Gist","gist","github_token","fileName","fileData","slice","prototype","processorInit","findByExtension","public","defers","results","codes","source","index","desc","crossDomain","html_url","group","groupEnd","spinner","element","getContext","ctx","rafID","height","width","TORADIAN","PI","w","h","deg","r","speed","tailspeed","strokeStyle","lineWidth","last","draw","flip","fillStyle","fillRect","beginPath","arc","stroke","closePath","cancelAnimationFrame","time","date","diff","dayDiff","isNaN","mon","getMonth","day","getDate","year","getFullYear","shortDate","fn","setupInfocard","$template","$header","canvas","htmlpanel","viewers","es","insertTag","capture","updateHeaders","add","toTrigger","infocardVisible","klass","statusCode","getJSON","$headers","$fields","$clones","before","eq","initHandlers","updateInfoCard","updateStats","_data","connections","$b","listenStats","EventSource","close","userhtml","getPanelText","somethingSelected","listSelections","setSelections","classes","streaming","last_updated","pro","hiddenProperty","visibilityChangeEvent","handleVisibility","newurl","getScript","cookie","setTime","toUTCString","back","getElementById","nameEQ","ca","charAt","readCookie","decodeURIComponent","$transfers","prompt","gui","toppanel","goSlow","blogpost","blog","slug","count","timestamp","prev","current","lastpost","help","array","t","shuffle","resultCount","searchTerms","position","searchFor","needles","haystack","input","ignore","endingRe","RegExp","word","words","lastIndexOf","matches","needle","category","children","inc","ready","onscroll","scrollTo","keyMap","browser","platform","coder","main"],"mappings":"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","file":"../skylark-jsbin-client.js","sourcesContent":["define('skylark-jsbin-client/jsbin',[\r\n  \"skylark-jsbin-base\"\r\n],function(jsbin){\r\n  return jsbin;\r\n});\r\n\r\n\ndefine('skylark-jsbin-client/chrome/font',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /** =========================================================================\r\n   * font\r\n   * Reads user setting and configures the CodeMirror font size\r\n   * ========================================================================== */\r\n  /*global jsbin:true*/\r\n  var font = (function (document) {\r\n    var head = document.getElementsByTagName('head')[0],\r\n        selectors = '#output li, #exec, .fakeInput, .fakeInput:before, #exec:before, #bin .editbox .CodeMirror, .mobile .editbox textarea',\r\n        size = jsbin.settings.font || 14;\r\n\r\n    // via http://stackoverflow.com/questions/2041495/create-dynamic-inline-stylesheet\r\n    function font(size) {\r\n      var cssText = selectors + '{ font-size: ' + size + 'px; }',\r\n          el = document.createElement('style');\r\n\r\n      el.type = 'text/css';\r\n      if (el.styleSheet) {\r\n        el.styleSheet.cssText = cssText;//IE only\r\n      } else {\r\n        el.appendChild(document.createTextNode(cssText));\r\n      }\r\n      head.appendChild(el);\r\n    }\r\n\r\n    if (Object.defineProperty && jsbin.settings) {\r\n      try {\r\n        Object.defineProperty(jsbin.settings, 'font', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function () {\r\n            return size;\r\n          },\r\n          set: function (val) {\r\n            size = val * 1;\r\n            font(size);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        // IE8 seems to attempt the code above, but it totally fails\r\n      }\r\n    }\r\n\r\n    font(size);\r\n\r\n    return font;\r\n  })(document);\r\n\r\n  var md5 = 'a3a02e450f1f79f4c3482279d113b07e';\r\n  var key = 'fonts';\r\n  var cache;\r\n\r\n  function insertFont(value) {\r\n    var style = document.createElement('style');\r\n    style.innerHTML = value;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  try {\r\n    cache = window.localStorage.getItem(key);\r\n    if (cache) {\r\n      cache = JSON.parse(cache);\r\n      if (cache.md5 === md5) {\r\n        insertFont(cache.value);\r\n      } else {\r\n        // busting cache when md5 doesn't match\r\n        window.localStorage.removeItem(key);\r\n        cache = null;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // most likely LocalStorage disabled\r\n    return;\r\n  }\r\n\r\n  if (!cache) {\r\n    // fonts not in LocalStorage or md5 did not match\r\n    window.addEventListener('load', function () {\r\n      var request = new XMLHttpRequest();\r\n      var response;\r\n      var url = jsbin.static + '/css/fonts.a3a02e450f1f79f4c3482279d113b07e.woff.json?' + jsbin.version;\r\n      request.open('GET', url, true);\r\n      request.onload = function () {\r\n        if (this.status == 200) {\r\n          try {\r\n            response = JSON.parse(this.response);\r\n            insertFont(response.value);\r\n            window.localStorage.setItem(key, this.response);\r\n          } catch (e) {\r\n            // localStorage is probably full\r\n          }\r\n        }\r\n      };\r\n      request.send();\r\n    });\r\n  }\r\n\r\n  return jsbin.font = font;\r\n});\ndefine('skylark-jsbin-client/chrome/analytics',[\r\n  \"skylark-langx\",\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-chrome/analytics\",\r\n   \"../jsbin\"\r\n],function (langx,$,analytics,jsbin) {\r\n  langx.mixin(analytics ,  {\r\n\r\n    universalEditor: function (value) {\r\n      analytics.track('menu', 'universalEditor', value);\r\n    },\r\n    library: function (action, value) {\r\n      analytics.track('menu', action, 'library', value);\r\n    },\r\n    infocard: function (action, value) {\r\n      analytics.track('infocard', action, value);\r\n    },\r\n    embed: function () {\r\n      try {\r\n        analytics.track('state', 'embed', window.top.location);\r\n      } catch (e) {\r\n        analytics.track('state', 'embed');\r\n      }\r\n    },\r\n    milestone: function () {\r\n      analytics.track('bin', 'save', window.location.pathname);\r\n    },\r\n    clone: function () {\r\n      analytics.track('bin', 'clone', window.location.pathname);\r\n    },\r\n    'delete': function () {\r\n      analytics.track('bin', 'delete', window.location.pathname);\r\n    },\r\n    lock: function () {\r\n      analytics.track('bin', 'lock', window.location.pathname);\r\n    },\r\n    openShare: function () {\r\n      analytics.track('menu', 'open', 'share');\r\n    },\r\n    saveTemplate: function () {\r\n      analytics.track('menu', 'select', 'save-template');\r\n    },\r\n    createNew: function (from) {\r\n      analytics.track(from || 'menu', 'select', 'new');\r\n    },\r\n    open: function (from) {\r\n      analytics.track(from || 'menu', 'select', 'open');\r\n    },\r\n    openFromAvatar: function () {\r\n      analytics.track('menu', 'select', 'open via avatar');\r\n    },\r\n\r\n    share: function (action, label) {\r\n      analytics.track('share', action, label);\r\n    },\r\n    download: function (from) {\r\n      analytics.track(from || 'menu', 'select', 'download');\r\n    },\r\n    showPanel: function (panelId) {\r\n      analytics.track('panel', 'show', panelId);\r\n    },\r\n    hidePanel: function (panelId) {\r\n      analytics.track('panel', 'hide', panelId);\r\n    },\r\n    logout: function () {\r\n      analytics.track('menu', 'select', 'logout');\r\n    },\r\n    register: function (success) {\r\n      if (success === undefined) {\r\n        analytics.track('menu', 'open', 'login');\r\n      } else {\r\n        analytics.track('user', 'register', ok ? 'success' : 'fail');\r\n      }\r\n    },\r\n    login: function (ok) {\r\n      if (ok === undefined) {\r\n        analytics.track('menu', 'open', 'login');\r\n      } else {\r\n        analytics.track('user', 'login', ok ? 'success' : 'fail');\r\n      }\r\n    },\r\n    enableLiveJS: function (ok) {\r\n      analytics.track('button', 'auto-run js', ok ? 'on' : 'off');\r\n    },\r\n    archiveView: function (visible) {\r\n      analytics.track('button', 'view archive', visible ? 'on' : 'off');\r\n    },\r\n    archive: function (url) {\r\n      analytics.track('button', 'archive', url);\r\n    },\r\n    unarchive: function (url) {\r\n      analytics.track('button', 'unarchive', url);\r\n    },\r\n    loadGist: function (id) {\r\n      analytics.track('state', 'load gist', id);\r\n    },\r\n    layout: function (panelsVisible) {\r\n      var layout = [], panel = '';\r\n\r\n      for (panel in panelsVisible) {\r\n        layout.push(panel.id);\r\n      }\r\n\r\n      analytics.track('layout', 'update', layout.sort().join(',') || 'none');\r\n    },\r\n    run: function (from) {\r\n      analytics.track(from || 'button', 'run with js');\r\n    },\r\n    publishVanity: function () {\r\n      analytics.track('bin', 'publish-vanity');\r\n    },\r\n    runconsole: function (from) {\r\n      analytics.track(from || 'button', 'run console');\r\n    },\r\n    welcomePanelState: function (state) {\r\n      var s = 'close';\r\n      if (state) {\r\n        s = 'open';\r\n      }\r\n      analytics.track('state', 'welcome-panel', s);\r\n    },\r\n    welcomePanelLink: function (url) {\r\n      analytics.track('welcome-panel-link', url);\r\n    }\r\n  });\r\n\r\n  // misses the asset upload one\r\n  $('a[data-pro=\"true\"]').on('click', function () {\r\n    analytics.track('try-pro', $(this).text());\r\n  });\r\n\r\n  return  analytics;\r\n});\ndefine('skylark-jsbin-client/chrome/settings',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /*global jsbin, $*/\r\n\r\n  var settings = {\r\n    save: function (callback) {\r\n      localStorage.setItem('settings', JSON.stringify(jsbin.settings));\r\n      if (!callback) {\r\n        callback = function () {};\r\n      }\r\n\r\n      $.ajax({\r\n        url: '/account/editor',\r\n        type: 'POST',\r\n        dataType: 'json',\r\n        data: {\r\n          settings: localStorage.settings,\r\n          _csrf: jsbin.state.token\r\n        },\r\n        success: function () {\r\n          if (console && console.log) {\r\n            console.log('settings saved');\r\n          }\r\n          callback(true);\r\n        },\r\n        error: function (xhr, status) {\r\n          callback(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return jsbin.chrome.settings = settings;\r\n});\ndefine('skylark-jsbin-client/render/saved-history-preview',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\"\r\n],function ($,panels,jsbin) {\r\n  /*global jsbin, $, $document, analytics*/\r\n  'use strict';\r\n  if (!jsbin.user || !jsbin.user.name || jsbin.embed) {\r\n    return;\r\n  }\r\n\r\n  var $body = $('body'),\r\n      loaded = false,\r\n      requestAttempts = 5,\r\n      $history; // set in hookUserHistory()\r\n\r\n  jsbin.$document.on('history:open', function () {\r\n    if ($history && panels.getVisible().length === 0) {\r\n      $history.appendTo('main');\r\n    }\r\n  }).on('history:close', function () {\r\n    if ($history === null) {\r\n      $history = $('#history').detach();\r\n    }\r\n  });\r\n\r\n  var loadList = function () {\r\n    if (loaded) {\r\n      return;\r\n    }\r\n\r\n    if ($('html').hasClass('public-listing')) {\r\n      hookUserHistory();\r\n    } else {\r\n      $.ajax({\r\n        dataType: 'html',\r\n        url: jsbin.root + '/list',\r\n        error: function () {\r\n          requestAttempts--;\r\n          if (requestAttempts > 0) {\r\n            $('#history').remove();\r\n            setTimeout(loadList, 500);\r\n          } else {\r\n            console.error('Giving up to load history');\r\n          }\r\n        },\r\n        success: function (html) {\r\n          $('#history').remove();\r\n          var frag = $(html);\r\n          if (jsbin.mobile) {\r\n            // mobile is particularly slow at rendering 1,000s of tbodys\r\n            // so we'll remove some to relieve the pressure.\r\n            frag.find('tbody:gt(50)').remove();\r\n          }\r\n          $body.append(frag);\r\n          hookUserHistory();\r\n          loaded = true;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  var updatePreview = function(url, $iframe) {\r\n    $iframe.attr('src', url + '/quiet');\r\n    $iframe.removeAttr('hidden');\r\n  };\r\n\r\n  var updateViewing = function (url, $viewing) {\r\n    $viewing.html('<a href=\"' + url + '\">' + url + '</a>');\r\n  };\r\n\r\n  var updateLayout = function ($tbodys, archiveMode) {\r\n    var $parent = $tbodys.parent();\r\n    $tbodys\r\n      .detach()\r\n      .each(function () {\r\n        var $tbody = $(this),\r\n            filter = archiveMode ? '.archived' : ':not(.archived)',\r\n            $trs = $('tr' + filter, $tbody).filter(':not(.spacer)');\r\n        if ($trs.length > 0) {\r\n          $trs.filter('.first').removeClass('first');\r\n          $tbody.removeClass('hidden');\r\n          $trs.first().addClass('first');\r\n        } else {\r\n          $tbody.addClass('hidden');\r\n        }\r\n      })\r\n      .appendTo($parent);\r\n  };\r\n\r\n  var hookUserHistory = function () {\r\n    // Loading the HTML from the server may have failed\r\n    $history = $('#history').detach();\r\n    if (!$history.length) {\r\n      return $history;\r\n    }\r\n\r\n    // Cache some useful elements\r\n    var $iframe = $('iframe', $history),\r\n        $viewing = $('#viewing', $history),\r\n        $bins = $history,\r\n        $tbodys = $('tbody', $history),\r\n        $trs = $('tr', $history),\r\n        $toggle = $('.toggle_archive', $history),\r\n        current = null,\r\n        hoverTimer = null;\r\n\r\n    // Archive & un-archive click handlers\r\n    $bins.delegate('.archive, .unarchive', 'click', function () {\r\n      var $this = $(this),\r\n          $row = $this.parents('tr');\r\n      // Instantly update this row and the page layout\r\n      $row.toggleClass('archived');\r\n\r\n      analytics[this.pathname.indexOf('unarchive') === -1 ? 'archive' : 'unarchive'](jsbin.root + $row.data('url'));\r\n\r\n      updateLayout($tbodys, $history.hasClass('archive_mode'));\r\n      // Then send the update to the server\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: $this.attr('href'),\r\n        error: function () {\r\n          // Undo if something went wrong\r\n          alert('Something went wrong, please try again');\r\n          $row.toggleClass('archived');\r\n          updateLayout($tbodys, $history.hasClass('archive_mode'));\r\n        },\r\n        success: function () {}\r\n      });\r\n      return false;\r\n    });\r\n\r\n    // Handle toggling of archive view\r\n    $toggle.change(function () {\r\n      $history.toggleClass('archive_mode');\r\n      var archive = $history.hasClass('archive_mode');\r\n      analytics.archiveView(archive);\r\n      updateLayout($tbodys, archive);\r\n    });\r\n\r\n    var selected = null;\r\n    $bins.delegate('a', 'click', function (event) {\r\n      if (event.shiftKey || event.metaKey) { return; }\r\n\r\n      var $this = $(this);\r\n\r\n      if ($this.closest('.action').length) {\r\n        // let the existing handlers deal with action links\r\n        return;\r\n      }\r\n\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation(); // prevent further delegates\r\n      if ($this.data('toggle') === 'history') {\r\n        panels.allEditors(function (panel) {\r\n          if (panel.editor.getCode().trim().length) {\r\n            panel.show();\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      var $tr = $this.closest('tr');\r\n      var data = $tr.data();\r\n      var url = jsbin.root + data.url;\r\n\r\n      if (selected === this) {\r\n        window.location = data.editUrl;\r\n      } else {\r\n        $trs.removeClass('selected');\r\n        $tr.addClass('selected');\r\n        updatePreview(url, $iframe);\r\n        updateViewing(url, $viewing);\r\n\r\n        selected = this;\r\n      }\r\n    });\r\n\r\n    // Load bin from data-edit-url attribute when user clicks on a row\r\n    $bins.delegate('tr:not(.spacer)', 'click', function (event) {\r\n      if (event.shiftKey || event.metaKey) { return; }\r\n      $(this).find('.url a:first').click();\r\n    });\r\n\r\n    // Update the time every 30 secs\r\n    // Need to replace Z in ISO8601 timestamp with +0000 so prettyDate() doesn't\r\n    // completely remove it (and parse the date using the local timezone).\r\n    $('a[pubdate]', $history).attr('pubdate', function (i, val) {\r\n      return val.replace('Z', '+0000');\r\n    }).prettyDate();\r\n\r\n    // Update the layout straight away\r\n    setTimeout(function () {\r\n      updateLayout($tbodys, false);\r\n    }, 0);\r\n\r\n    jsbin.$document.trigger('history:open');\r\n\r\n    return $history;\r\n  };\r\n\r\n  // inside a ready call because history DOM is rendered *after* our JS to improve load times.\r\n  $(document).on('jsbinReady', function ()  {\r\n    if (jsbin.embed) {\r\n      return;\r\n    }\r\n\r\n    var $panelButtons = $('#panels a'),\r\n        $homebtn = $('.homebtn'),\r\n        panelsVisible = $body.hasClass('panelsVisible');\r\n\r\n    var panelCloseIntent = function() {\r\n      var activeCount = $panelButtons.filter('.active').length;\r\n      if (activeCount === 1 && $(this).hasClass('active')) {\r\n        loadList();\r\n      }\r\n    };\r\n\r\n    // this code attempts to only call the list ajax request only if\r\n    // the user should want to see the list page - most users will\r\n    // jump in and jump out of jsbin, and never see this page,\r\n    // so let's not send this ajax request.\r\n    //\r\n    // The list should be loaded when:\r\n    //   - user hovers the home button\r\n    //   - they close all the panels\r\n    //   - they arrive at the page with no panels open\r\n\r\n    $homebtn.on('click', loadList);\r\n    $panelButtons.on('mousedown', panelCloseIntent);\r\n\r\n    jsbin.$document.on('history:load', loadList);\r\n\r\n    if (!panelsVisible) {\r\n      loadList();\r\n    }\r\n\r\n  });\r\n\r\n  return {\r\n    loadList,\r\n    updatePreview,\r\n    updateViewing,\r\n    updateLayout,\r\n    hookUserHistory\r\n  };\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/esc',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-chrome/hideOpen\",\r\n   \"../jsbin\"\r\n],function ($, hideOpen, jsbin) {\r\n\r\n  jsbin.$document.keydown(function (event) {\r\n    if (event.which == 27) {//} || (keyboardHelpVisible && event.which == 191 && event.shiftKey && event.metaKey)) {\r\n      hideOpen();\r\n    }\r\n  });\r\n\r\n\r\n  jsbin.$document.delegate('.modal', 'click', function (event) {\r\n    if ($(event.target).is('.modal')) {\r\n      hideOpen();\r\n    }\r\n  });\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/share',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-processors\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\"\r\n],function ($,processors,panels,jsbin) {\r\n  'use strict';\r\n  /*globals $, panels, saveChecksum, jsbin, $document, documentTitle*/\r\n\r\n  // only continue if the new share is enabled\r\n  if ($('#sharemenu .share-split').length === 0) {\r\n    return;\r\n  }\r\n\r\n  var mapping = {\r\n    live: 'output',\r\n    javascript: 'js'\r\n  };\r\n  var $sharepanels = $('#sharepanels input[type=\"checkbox\"]');\r\n\r\n  var selectedSnapshot = jsbin.state.revision;\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    selectedSnapshot = jsbin.state.revision;\r\n  });\r\n\r\n  jsbin.$document.on('snapshot', function () {\r\n    jsbin.state.changed = false;\r\n    if (window.history.replaceState) {\r\n      window.history.replaceState(null, '', jsbin.getURL({ withRevision: true }) + '/edit?' + panels.getQuery());\r\n    }\r\n  });\r\n\r\n  var $sharemenu = $('#sharemenu').bind('open', function () {\r\n    // select the right panels\r\n    // hideOpen();\r\n    $sharepanels.prop('checked', false);\r\n    panels.getVisible().forEach(function (p) {\r\n      $sharepanels.filter('[value=\"' + (mapping[p.id] || p.id) + '\"]').prop('checked', true);\r\n    });\r\n\r\n    // if we're the latest bin, then allow the user to switch to a snapshot\r\n    if (jsbin.state.latest) {\r\n      // if they have write access then select the latest & live by default\r\n      if (jsbin.state.checksum) {\r\n        $realtime.prop('checked', jsbin.state.latest);\r\n        $snapshot.prop('checked', false);\r\n\r\n        $andlive.show();\r\n      // otherwise select the snapshot first\r\n      } else {\r\n        $realtime.prop({ checked: false });\r\n        $snapshot.prop('checked', true);\r\n        $andlive.hide();\r\n      }\r\n\r\n      $withLiveReload.show();\r\n    } else {\r\n      // otherwise, disable live\r\n      $realtime.prop({ checked: false, disabled: true });\r\n      $snapshot.prop('checked', true);\r\n      $withLiveReload.hide();\r\n    }\r\n\r\n    update();\r\n  });\r\n  $sharemenu.find('.lockrevision').on('change', function () {\r\n    jsbin.saveChecksum = false; // jshint ignore:line\r\n    jsbin.state.checksum = false;\r\n    jsbin.$document.trigger('locked');\r\n  });\r\n  var $sharepreview = $('#share-preview');\r\n  var $realtime = $('#sharebintype input[type=radio][value=\"realtime\"]');\r\n  var $snapshot = $('#sharebintype input[type=radio][value=\"snapshot\"]');\r\n  var link = $sharemenu.find('a.link')[0];\r\n  var linkselect = $sharemenu.find('input[name=\"url\"]')[0];\r\n  var embed = $sharemenu.find('textarea')[0];\r\n  var form = $sharemenu.find('form')[0];\r\n  var $directLinks = $sharemenu.find('.direct-links');\r\n  var $andlive = $('#andlive');\r\n  var $withLiveReload = $sharemenu.find('.codecasting');\r\n\r\n  // get an object representation of a form's state\r\n  function formData(form) {\r\n    var length = form.length;\r\n    var data = {};\r\n    var value;\r\n    var el;\r\n    var type;\r\n    var name;\r\n\r\n    var append = function (data, name, value) {\r\n      if (data[name] === undefined) {\r\n        data[name] = value;\r\n      } else {\r\n        if (typeof data[name] === 'string') {\r\n          data[name] = [data[name]];\r\n        }\r\n        data[name].push(value);\r\n      }\r\n    };\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      el = form[i];\r\n      value = el.value;\r\n      type = el.type;\r\n      name = el.name;\r\n\r\n      if (type === 'radio') {\r\n        if (el.checked) {\r\n          append(data, name, value);\r\n        }\r\n      } else if (type === 'checkbox') {\r\n        if (data[name] === undefined) {\r\n          data[name] = [];\r\n        }\r\n        if (el.checked) {\r\n          append(data, name, value);\r\n        }\r\n      } else {\r\n        append(data, name, value);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  function update() {\r\n    var data = formData(form);\r\n    var url = jsbin.getURL({ root: jsbin.shareRoot });\r\n    var OGurl = jsbin.getURL();\r\n\r\n    if (data.state === 'snapshot' && jsbin.state.latest) {\r\n      url += '/' + selectedSnapshot;\r\n      OGurl += '/' + selectedSnapshot;\r\n    }\r\n\r\n    var shareurl = url;\r\n\r\n    // get a comma separated list of the panels that should be shown\r\n    var query = data.panel.join(',');\r\n\r\n    if (query) {\r\n      query = '?' + query;\r\n    }\r\n\r\n    $sharepanels.prop('disabled', data.view === 'output');\r\n    $sharepreview.attr('class', data.view);\r\n\r\n    if (data.view !== 'output') {\r\n      $sharepreview.find('.editor div').each(function () {\r\n        this.hidden = data.panel.indexOf(this.className) === -1;\r\n      });\r\n    }\r\n\r\n    if (data.view === 'editor') {\r\n      shareurl += '/edit';\r\n    } else {\r\n      query = '';\r\n    }\r\n\r\n    // create the direct links, it'll be faster to inject HTML rather than\r\n    // updating hrefs of a bunch of HTML elements\r\n    $directLinks.empty();\r\n\r\n    var directLinksHTML = []; //['<a href=\"' + url + '.html\">html</a>'];\r\n\r\n    var code = ''\r\n    var ext = '';\r\n\r\n    code = panels.named.html.getCode().trim();\r\n\r\n    if (code) {\r\n      ext = processors[jsbin.state.processors.html || 'html'].extensions[0];\r\n      if (ext !== 'html') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n      } else if (code.toLowerCase().indexOf('<svg') === 0) {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.svg\">svg</a>');\r\n      }\r\n    }\r\n\r\n    if (panels.named.css.getCode().trim()) {\r\n      ext = processors[jsbin.state.processors.css || 'css'].extensions[0];\r\n      if (ext !== 'css') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.css\">css</a>');\r\n      }\r\n      directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n    }\r\n\r\n    code = panels.named.javascript.getCode().trim();\r\n\r\n    if (code) {\r\n      ext = processors[jsbin.state.processors.javascript || 'javascript'].extensions[0];\r\n\r\n      if (ext !== 'js') {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.js\">js</a>');\r\n      }\r\n\r\n      try {\r\n        JSON.parse(code);\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.json\">json</a>');\r\n      } catch (e) {\r\n        directLinksHTML.push('<a target=\"_blank\" href=\"' + url + '.' + ext + '\">' + ext + '</a>');\r\n      }\r\n\r\n    }\r\n\r\n    $directLinks.html(directLinksHTML.join(''));\r\n\r\n    linkselect.value = link.href = shareurl + query;\r\n    embed.value = ('<a class=\"jsbin-embed\" href=\"' + OGurl + '/embed' + query + '\">' + jsbin.documentTitle + ' on jsbin.com</a><' + 'script src=\"' + jsbin.static + '/js/embed.min.js?' + jsbin.version + '\"><' + '/script>').replace(/<>\"&/g, function (m) {\r\n        return {\r\n          '<': '&lt;',\r\n          '>': '&gt;',\r\n          '\"': '&quot;',\r\n          '&': '&amp;'\r\n        }[m];\r\n      });\r\n  }\r\n\r\n  // when the user clicks on \"snapshot\" we automatically create a snapshot at\r\n  // that point (technically this isn't a snapshot, but clearing the write\r\n  // access, so the next user input creates the *next* snapshot - which is\r\n  // actually the latest copy).\r\n  $('#sharebintype input[type=radio]').on('change', function () {\r\n    if (this.value === 'snapshot') {\r\n      jsbin.state.checksum = false;\r\n      jsbin.saveChecksum = false; // jshint ignore:line\r\n      $withLiveReload.hide();\r\n    } else {\r\n      $withLiveReload.show();\r\n    }\r\n  });\r\n\r\n  $sharemenu.find('input').on('change', update);\r\n\r\n  jsbin.$document.on('saved', function () {\r\n\r\n    // revert to the latest bin state\r\n    $realtime.prop('checked', true);\r\n\r\n    // show the share menu\r\n    $sharemenu.removeClass('hidden');\r\n\r\n    update();\r\n  });\r\n\r\n  var $share = $('#share').closest('.menu');\r\n  var shareElement = $('#sharemenu a')[0];\r\n  var $showShare = $('a.show-share').on('click', function () {\r\n    if ($share.hasClass('open')) {\r\n      closedropdown(shareElement);\r\n    } else {\r\n      opendropdown(shareElement, true); // true = no focus\r\n    }\r\n    $showShare.blur();\r\n  });\r\n\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/issue',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n\r\n  /*global $:true, jsbin:true */\r\n    'use strict';\r\n\r\n    function githubIssue() {\r\n      var url = 'http://github.com/jsbin/jsbin/issues/new';\r\n      var body = ['Please provide any additional information, record a screencast ',\r\n                 'with http://quickcast.io or http://screenr.com and attach a screenshot ',\r\n                 'if possible.\\n\\n**JS Bin info**\\n\\n* [%url%/edit](%url%/edit)\\n* ',\r\n                 window.navigator.userAgent + '\\n',\r\n                 (jsbin.user && jsbin.user.name ? '* ' + jsbin.user.name : ''),\r\n                 '\\n'].join('');\r\n\r\n      return url + '?body=' + encodeURIComponent(body.replace(/%url%/g, jsbin.getURL({ withRevision: true })));\r\n    }\r\n\r\n    var $newissue = $('#newissue');\r\n\r\n    $('#help').parent().on('open', function () {\r\n      $newissue.attr('href', githubIssue());\r\n    });\r\n\r\n    return githubIssue;\r\n\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/download',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,jsbin,analytics) {\r\n\t$('#download').click(function (event) {\r\n\t  event.preventDefault();\r\n\t  window.location = jsbin.getURL({ withRevision: true }) + '/download';\r\n\t  analytics.download();\r\n\t});\r\n});\ndefine('skylark-jsbin-client/chrome/login',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /* global $ */\r\n\r\n  $('form.login').submit(function (event) {\r\n    'use strict';\r\n    event.preventDefault();\r\n\r\n    var form = $(this),\r\n        name = form.find('input[name=username]').val(),\r\n        key = form.find('input[name=password]').val(),\r\n        email = form.find('input[name=email]').val(),\r\n        $loginFeedback = form.find('.loginFeedback');\r\n\r\n\r\n    // jsbin.settings.home = name; // will save later\r\n    $loginFeedback.show().text('Checking...');\r\n\r\n    $.ajax({\r\n      url: form.attr('action'),\r\n      data: { username: name, key: key, email: email },\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      complete: function (jqXHR) {\r\n        var data = $.parseJSON(jqXHR.responseText) || {};\r\n        // cookie is required to share with the server so we can do a redirect on new bin\r\n        if (jqXHR.status === 200) {\r\n          if (data.avatar) {\r\n            $('a.avatar').find('img').remove().end().prepend('<img src=\"' + data.avatar + '\">');\r\n          }\r\n          if (data.message) {\r\n            $loginFeedback.text(data.message);\r\n          } else {\r\n            window.location = window.location.pathname + window.location.search;\r\n          }\r\n        } else {\r\n          analytics.login(false);\r\n          $loginFeedback.text(data.message || ('\"' + name + '\" has already been taken. Please either double check the password, or choose another username.'));\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/tips',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n\r\n    var $html = $(document.documentElement),\r\n        $tip = $('#tip'),\r\n        $tipContent = $('p', $tip),\r\n        tipTimeout;\r\n\r\n    var removeTip = function (cb) {\r\n      $html.removeClass('showtip');\r\n      $tip.removeClass();\r\n      $tipContent.html('');\r\n      $(window).resize();\r\n      cb && setTimeout(cb, 0);\r\n    };\r\n\r\n    var setTip = function (data) {\r\n      clearTimeout(tipTimeout);\r\n      $tipContent.html(data.content);\r\n      $tip.removeClass().addClass(data.type || 'info');\r\n      $html.addClass('showtip');\r\n      if (!data.autohide) return;\r\n      tipTimeout = setTimeout(function () {\r\n        removeTip();\r\n      }, parseInt(data.autohide, 10) || 5 * 1000);\r\n    };\r\n\r\n    /**\r\n     * Trigger a tip to be shown.\r\n     *\r\n     *   $document.trigger('tip', 'You have an infinite loop in your HTML.');\r\n     *\r\n     *    $document.trigger('tip', {\r\n     *      type: 'error',\r\n     *      content: 'Do you even Javascript?',\r\n     *      autohide: 8000\r\n     *    });\r\n     */\r\n    jsbin.$document.on('tip', function (event, data) {\r\n      var tipData = data;\r\n      if (typeof data === 'string') {\r\n        tipData = {};\r\n        tipData.content = data;\r\n        tipData.type = 'info';\r\n      }\r\n      // If the content and the type haven't changed, just set it again.\r\n      if ($tipContent.html() === tipData.content &&\r\n          $tip.hasClass(tipData.type)) return setTip(data);\r\n      removeTip(function () {\r\n        setTip(tipData);\r\n      });\r\n    });\r\n\r\n    $('#tip').on('click', 'a.dismiss', function () {\r\n      removeTip();\r\n      return false;\r\n    });\r\n\r\n    // Escape\r\n   jsbin.$document.keydown(function (event) {\r\n      if (event.which == 27) {\r\n        removeTip();\r\n      }\r\n    });\r\n\r\n  });\ndefine('skylark-jsbin-client/chrome/keys',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  /*global jsbin*/\r\n  /*global $document*/\r\n  'use strict';\r\n\r\n  // don't store the keys if they're logged in, since we have this on the server\r\n  if (jsbin.user && jsbin.user.name) {\r\n    return;\r\n  }\r\n\r\n  var keys = {};\r\n\r\n  var find = function (url) {\r\n    var key = keys[url || jsbin.getURL({ withRevision: true, withoutRoot: true })] || {};\r\n    return key.c;\r\n  };\r\n\r\n  try {\r\n    if ('localStorage' in window && window['localStorage'] !== null) { // jshint ignore:line\r\n\r\n    }\r\n  } catch(e){\r\n    return find;\r\n  }\r\n\r\n  function init() {\r\n    keys = JSON.parse(localStorage.keys || '{}');\r\n  }\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    keys[jsbin.getURL({ withRevision: false, withoutRoot: true })] = { s: jsbin.state.revsion, c: jsbin.state.checksum, d: (new Date()).getTime() };\r\n    localStorage.keys = JSON.stringify(keys);\r\n  });\r\n\r\n  // update the key lookup when a new key is stored\r\n  window.addEventListener('storage', function (event) {\r\n    if (event.key === 'keys') {\r\n      init();\r\n    }\r\n  });\r\n\r\n  init();\r\n\r\n  return jsbin.keys = find;\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/save',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,store,panels,jsbin,analytics) {\r\n  /*jshint strict: false */\r\n  /*globals $, analytics, jsbin, documentTitle, $document, throttle, editors*/\r\n  var saving = {\r\n    todo: {\r\n      html: false,\r\n      css: false,\r\n      javascript: false\r\n    },\r\n    _inprogress: false,\r\n    inprogress: function (inprogress) {\r\n      if (typeof inprogress === 'undefined') {\r\n        return saving._inprogress;\r\n      }\r\n\r\n      saving._inprogress = inprogress;\r\n      if (inprogress === false) {\r\n        var panels = ['html','css','javascript'];\r\n\r\n        var save = function () {\r\n          var todo = panels.pop();\r\n          if (todo && saving.todo[todo]) {\r\n            saving._inprogress = true;\r\n            updateCode(todo, save);\r\n            saving.todo[todo] = false;\r\n          } else if (todo) {\r\n            save();\r\n          }\r\n        };\r\n\r\n        save();\r\n      }\r\n    }\r\n  };\r\n\r\n  function getTagContent(tag) {\r\n    var html = panels.named.html.getCode();\r\n    var result = '';\r\n\r\n    // if we don't have the tag, bail with an empty string\r\n    if (html.indexOf('<' + tag) === -1) {\r\n      return result;\r\n    }\r\n\r\n    if (tag !== 'title' && tag !== 'meta') {\r\n      console.error('getTagContent for ' + tag + ' is not supported');\r\n      return result;\r\n    }\r\n\r\n    // grab the content based on the earlier defined regexp\r\n    html.replace(getTagContent.re[tag], function (all, capture1, capture2) {\r\n      result = tag === 'title' ? capture1 : capture2;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getTagContent.re = {\r\n    meta: /(<meta name=\"description\" content=\")([^\"]*)/im,\r\n    title: /<title>(.*)<\\/title>/im\r\n  };\r\n\r\n\r\n  // to allow for download button to be introduced via beta feature\r\n  $('a.save').click(function (event) {\r\n    event.preventDefault();\r\n\r\n    analytics.milestone();\r\n    // if save is disabled, hitting save will trigger a reload\r\n    var ajax = true;\r\n    if (jsbin.saveDisabled === true) {\r\n      ajax = false;\r\n    }\r\n\r\n    if ((jsbin.state.changed || jsbin.mobile) || !jsbin.owner()) {\r\n      saveCode('save', ajax);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  var $shareLinks = $('#share .link');\r\n  var $panelCheckboxes = $('#sharemenu #sharepanels input');\r\n\r\n  // TODO remove split when live\r\n  var split = $('#sharemenu .share-split').length;\r\n\r\n  // TODO candidate for removal\r\n  function updateSavedState() {\r\n    'use strict';\r\n    if (split) {\r\n      return;\r\n    }\r\n\r\n    var mapping = {\r\n      live: 'output',\r\n      javascript: 'js',\r\n      css: 'css',\r\n      html: 'html',\r\n      console: 'console'\r\n    };\r\n\r\n    var withRevision = true;\r\n\r\n    var query = $panelCheckboxes.filter(':checked').map(function () {\r\n      return mapping[this.getAttribute('data-panel')];\r\n    }).get().join(',');\r\n    $shareLinks.each(function () {\r\n      var path = this.getAttribute('data-path');\r\n      var url = jsbin.getURL({ withRevision: withRevision }) + path + (query && this.id !== 'livepreview' ? '?' + query : ''),\r\n          nodeName = this.nodeName;\r\n      var hash = panels.getHighlightLines();\r\n\r\n      if (hash) {\r\n        hash = '#' + hash;\r\n      }\r\n\r\n      if (nodeName === 'A') {\r\n        this.href = url;\r\n      } else if (nodeName === 'INPUT') {\r\n        this.value = url;\r\n        if (path === '/edit') {\r\n          this.value += hash;\r\n        }\r\n      } else if (nodeName === 'TEXTAREA') {\r\n        this.value = ('<a class=\"jsbin-embed\" href=\"' + url + hash + '\">' + jsbin.documentTitle + '</a><' + 'script src=\"' + jsbin.static + '/js/embed.js\"><' + '/script>').replace(/<>\"&/g, function (m) {\r\n            return {\r\n              '<': '&lt;',\r\n              '>': '&gt;',\r\n              '\"': '&quot;',\r\n              '&': '&amp;'\r\n            }[m];\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  $('#sharemenu').bind('open', updateSavedState);\r\n  $('#sharebintype input[type=radio]').on('click', function () {\r\n    if (this.value === 'snapshot') {\r\n      jsbin.state.checksum = false;\r\n      saveChecksum = false;\r\n    }\r\n    updateSavedState();\r\n  });\r\n\r\n  var lastHTML = null;\r\n\r\n  function updateDocMeta(event, data) {\r\n    if (data) {\r\n      if (data.panelId !== 'html') {\r\n        return; // ignore non-html updates\r\n      }\r\n    }\r\n\r\n    var currentHTML = panels.named.html.getCode();\r\n    if (lastHTML !== currentHTML) {\r\n      lastHTML = currentHTML;\r\n\r\n      var description = getTagContent('meta');\r\n      if (description !== jsbin.state.description) {\r\n        jsbin.state.description = description;\r\n        jsbin.state.updateSettings({ description: description });\r\n      }\r\n\r\n      var title = getTagContent('title');\r\n      if (title !== jsbin.state.title) {\r\n        jsbin.state.title = title;\r\n        jsbin.state.updateSettings({ title: title });\r\n\r\n        jsbin.documentTitle = title;\r\n        if (jsbin.documentTitle) {\r\n          document.title = jsbin.documentTitle + ' - ' + jsbin.name;\r\n        } else {\r\n          document.title = jsbin.name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  jsbin.$document.on('saveComplete', updateDocMeta); // update, not create\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    jsbin.state.changed = false;\r\n    updateSavedState();\r\n\r\n    $('#sharebintype input[type=radio][value=\"realtime\"]').prop('checked', true);\r\n\r\n    $shareLinks.closest('.menu').removeClass('hidden');\r\n\r\n    $('#jsbinurl').attr('href', jsbin.getURL()).removeClass('hidden');\r\n    $('#clone').removeClass('hidden');\r\n\r\n    updateDocMeta();\r\n  });\r\n\r\n  var saveChecksum = jsbin.state.checksum || store.sessionStorage.getItem('checksum') || false;\r\n\r\n  // store it back on state\r\n  jsbin.state.checksum = saveChecksum;\r\n\r\n  if (saveChecksum) {\r\n    // remove the disabled class, but also remove the cancelling event handlers\r\n    $('#share div.disabled').removeClass('disabled').unbind('click mousedown mouseup');\r\n  } else {\r\n    $('#share div.disabled').one('click', function (event) {\r\n      event.preventDefault();\r\n      $('a.save').click();\r\n    });\r\n  }\r\n\r\n  jsbin.$document.one('saved', function () {\r\n    $('#share div.disabled').removeClass('disabled').unbind('click mousedown mouseup');\r\n  });\r\n\r\n  function onSaveError(jqXHR, panelId) {\r\n    if (jqXHR.status === 413) {\r\n      // Hijack the tip label to show an error message.\r\n      $('#tip p').html('Sorry this bin is too large for us to save');\r\n      $(document.documentElement).addClass('showtip');\r\n    } else if (jqXHR.status === 403) {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'error',\r\n        content: 'I think there\\'s something wrong with your session and I\\'m unable to save. <a href=\"' + window.location + '\"><strong>Refresh to fix this</strong></a>, you <strong>will not</strong> lose your code.'\r\n      });\r\n    } else if (panelId) {\r\n      if (panelId) { savingLabels[panelId].text('Saving...').animate({ opacity: 1 }, 100); }\r\n      window._console.error({message: 'Warning: Something went wrong while saving. Your most recent work is not saved.'});\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // only start live saving it they're allowed to (whereas save is disabled if they're following)\r\n  if (!jsbin.saveDisabled) {\r\n    $('.code.panel .label .name').append('<span class=\"saved\">Saved</span>');\r\n\r\n    var savingLabels = {\r\n      html: $('.panel.html .name span.saved'),\r\n      javascript: $('.panel.javascript .name span.saved'),\r\n      css: $('.panel.css .name span.saved'),\r\n    };\r\n\r\n    jsbin.$document.bind('jsbinReady', function () {\r\n      jsbin.state.changed = false;\r\n      panels.allEditors(function (panel) {\r\n        panel.on('processor', function () {\r\n          // if the url doesn't match the root - i.e. they've actually saved something then save on processor change\r\n          if (jsbin.root !== jsbin.getURL()) {\r\n            jsbin.$document.trigger('codeChange', [{ panelId: panel.id }]);\r\n          }\r\n        });\r\n      });\r\n\r\n      jsbin.$document.bind('codeChange', function (event, data) {\r\n        jsbin.state.changed = true;\r\n        // savingLabels[data.panelId].text('Saving');\r\n        if (savingLabels[data.panelId]) {\r\n          savingLabels[data.panelId].css({ 'opacity': 0 }).stop(true, true);\r\n        }\r\n      });\r\n\r\n      jsbin.$document.bind('saveComplete', jsbin.throttle(function (event, data) {\r\n        // show saved, then revert out animation\r\n        savingLabels[data.panelId]\r\n          .text('Saved')\r\n          .stop(true, true)\r\n          .animate({ opacity: 1 }, 100)\r\n          .delay(1200)\r\n          .animate({ opacity: 0 }, 500);\r\n      }, 500));\r\n\r\n      jsbin.$document.bind('codeChange', jsbin.throttle(function (event, data) {\r\n        if (!data.panelId) {\r\n          return;\r\n        }\r\n\r\n        if (jsbin.state.deleted) {\r\n          return;\r\n        }\r\n\r\n        var panelId = data.panelId;\r\n\r\n        panels.savecontent();\r\n\r\n        if (saving.inprogress()) {\r\n          // queue up the request and wait\r\n          saving.todo[panelId] = true;\r\n          return;\r\n        }\r\n\r\n        saving.inprogress(true);\r\n\r\n        // We force a full save if there's no checksum OR if there's no bin code/url\r\n        if (!saveChecksum || !jsbin.state.code) {\r\n          // create the bin and when the response comes back update the url\r\n          saveCode('save', true);\r\n        } else {\r\n          updateCode(panelId);\r\n        }\r\n      }, 30 * 1000));\r\n    });\r\n  } else {\r\n    jsbin.$document.one('jsbinReady', function () {\r\n      'use strict';\r\n      var shown = false;\r\n      if (!jsbin.embed && !jsbin.sandbox) {\r\n        jsbin.$document.on('codeChange.live', function (event, data) {\r\n          if (!data.onload && !shown && data.origin !== 'setValue') {\r\n            shown = true;\r\n            var ismac = navigator.userAgent.indexOf(' Mac ') !== -1;\r\n            var cmd = ismac ? '⌘' : 'ctrl';\r\n            var shift = ismac ? '⇧' : 'shift';\r\n            var plus = ismac ? '' : '+';\r\n\r\n            jsbin.$document.trigger('tip', {\r\n              type: 'notification',\r\n              content: 'You\\'re currently viewing someone else\\'s live stream, but you can <strong><a class=\"clone\" href=\"' + jsbin.root + '/clone\">clone your own copy</a></strong> (' + cmd + plus + shift + plus + 'S) at any time to save your edits'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function compressKeys(keys, obj) {\r\n    obj.compressed = keys;\r\n    keys.split(',').forEach(function (key) {\r\n      obj[key] = LZString.compressToUTF16(obj[key]);\r\n    });\r\n  }\r\n\r\n  function updateCode(panelId, callback) {\r\n    var panelSettings = {};\r\n\r\n    if (jsbin.state.processors) {\r\n      panelSettings.processors = jsbin.state.processors;\r\n    }\r\n\r\n    var data = {\r\n      code: jsbin.state.code,\r\n      revision: jsbin.state.revision,\r\n      method: 'update',\r\n      panel: panelId,\r\n      content: panels.named[panelId].getCode(),\r\n      checksum: jsbin.saveChecksum,\r\n      settings: JSON.stringify(panelSettings),\r\n    };\r\n\r\n    if (jsbin.settings.useCompression && location.protocol === 'http:') {\r\n      compressKeys('content', data);\r\n    }\r\n\r\n    if (jsbin.state.processors[panelId] &&\r\n      jsbin.state.processors[panelId] !== panelId &&\r\n      jsbin.state.cache[panelId]) {\r\n      data.processed = jsbin.state.cache[panelId].result;\r\n    }\r\n\r\n    $.ajax({\r\n      url: jsbin.getURL({ withRevision: true }) + '/save',\r\n      data: data,\r\n      type: 'post',\r\n      dataType: 'json',\r\n      headers: {'Accept': 'application/json'},\r\n      success: function (data) {\r\n        jsbin.$document.trigger('saveComplete', { panelId: panelId });\r\n        if (data.error) {\r\n          saveCode('save', true, function () {\r\n            // savedAlready = data.checksum;\r\n          });\r\n        } else {\r\n          jsbin.state.latest = true;\r\n        }\r\n      },\r\n      error: function (jqXHR) {\r\n        onSaveError(jqXHR, panelId);\r\n      },\r\n      complete: function () {\r\n        saving.inprogress(false);\r\n        if (callback) { callback(); }\r\n      }\r\n    });\r\n  }\r\n\r\n  $('a.clone').click(clone);\r\n  $('#tip').delegate('a.clone', 'click', clone);\r\n\r\n  function clone(event) {\r\n    event.preventDefault();\r\n\r\n    // save our panel layout - assumes our user is happy with this layout\r\n    panels.save();\r\n    analytics.clone();\r\n\r\n    var $form = setupform('save,new');\r\n    $form.submit();\r\n\r\n    return false;\r\n  }\r\n\r\n  function setupform(method) {\r\n  var $form = $('form#saveform').empty()\r\n      .append('<input type=\"hidden\" name=\"javascript\" />')\r\n      .append('<input type=\"hidden\" name=\"html\" />')\r\n      .append('<input type=\"hidden\" name=\"css\" />')\r\n      .append('<input type=\"hidden\" name=\"method\" />')\r\n      .append('<input type=\"hidden\" name=\"_csrf\" value=\"' + jsbin.state.token + '\" />')\r\n      .append('<input type=\"hidden\" name=\"settings\" />')\r\n      .append('<input type=\"hidden\" name=\"checksum\" />');\r\n\r\n    var settings = {};\r\n\r\n    if (jsbin.state.processors) {\r\n      settings.processors = jsbin.state.processors;\r\n    }\r\n\r\n    // this prevents new revisions forking off the welcome bin\r\n    // because it's looking silly!\r\n    if (jsbin.state.code === 'welcome') {\r\n      $form.attr('action', '/save');\r\n    }\r\n\r\n    $form.find('input[name=settings]').val(JSON.stringify(settings));\r\n    $form.find('input[name=javascript]').val(panels.named.javascript.getCode());\r\n    $form.find('input[name=css]').val(panels.named.css.getCode());\r\n    $form.find('input[name=html]').val(panels.named.html.getCode());\r\n    $form.find('input[name=method]').val(method);\r\n    $form.find('input[name=checksum]').val(jsbin.state.checksum);\r\n\r\n    return $form;\r\n  }\r\n\r\n  function pad(n){\r\n    return n<10 ? '0'+n : n;\r\n  }\r\n\r\n  function ISODateString(d){\r\n    return d.getFullYear()+'-'\r\n      + pad(d.getMonth()+1)+'-'\r\n      + pad(d.getDate())+'T'\r\n      + pad(d.getHours())+':'\r\n      + pad(d.getMinutes())+':'\r\n      + pad(d.getSeconds())+'Z';\r\n  }\r\n\r\n  function saveCode(method, ajax, ajaxCallback) {\r\n    // create form and post to it\r\n    var $form = setupform(method);\r\n    // save our panel layout - assumes our user is happy with this layout\r\n    panels.save();\r\n    panels.saveOnExit = true;\r\n\r\n    var data = $form.serializeArray().reduce(function(obj, data) {\r\n      obj[data.name] = data.value;\r\n      return obj;\r\n    }, {});\r\n\r\n    if (jsbin.settings.useCompression) {\r\n      compressKeys('html,css,javascript', data);\r\n    }\r\n\r\n    if (ajax) {\r\n      $.ajax({\r\n        url: jsbin.getURL({ withRevision: true }) + '/save',\r\n        data: data,\r\n        dataType: 'json',\r\n        type: 'post',\r\n        headers: {'Accept': 'application/json'},\r\n        success: function (data) {\r\n          if (ajaxCallback) {\r\n            ajaxCallback(data);\r\n          }\r\n\r\n          store.sessionStorage.setItem('checksum', data.checksum);\r\n          saveChecksum = data.checksum;\r\n\r\n          jsbin.state.checksum = saveChecksum;\r\n          jsbin.state.code = data.code;\r\n          jsbin.state.revision = data.revision;\r\n          jsbin.state.latest = true; // this is never not true...end of conversation!\r\n          jsbin.state.metadata = { name: jsbin.user.name };\r\n          $form.attr('action', jsbin.getURL({ withRevision: true }) + '/save');\r\n\r\n          if (window.history && window.history.pushState) {\r\n            // updateURL(edit);\r\n            var hash = panels.getHighlightLines();\r\n            if (hash) { hash = '#' + hash; }\r\n            var query = panels.getQuery();\r\n            if (query) { query = '?' + query; }\r\n            // If split is truthy (> 0) then we are using the revisonless feature\r\n            // this is temporary until we release the feature!\r\n            window.history.pushState(null, '', jsbin.getURL({withRevision: !split}) + '/edit' + query + hash);\r\n            store.sessionStorage.setItem('url', jsbin.getURL({withRevision: !split}));\r\n          } else {\r\n            window.location.hash = data.edit;\r\n          }\r\n\r\n          jsbin.$document.trigger('saved');\r\n        },\r\n        error: function (jqXHR) {\r\n          onSaveError(jqXHR, null);\r\n        },\r\n        complete: function () {\r\n          saving.inprogress(false);\r\n        }\r\n      });\r\n    } else {\r\n      $form.submit();\r\n    }\r\n  }\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/archive',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,jsbin,analytics) {\r\n  function archive(unarchive) {\r\n    /*global jsbin, $, $document, analytics*/\r\n    'use strict';\r\n    var type = unarchive === false ? 'unarchive' : 'archive';\r\n    var text = unarchive === false ? 'restore from archive' : 'archiving';\r\n    analytics[type](jsbin.getURL({ withRevision: true }));\r\n    if (!jsbin.user.name) {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'notication',\r\n        content: 'You must be logged in and the owner of the bin to archive.'\r\n      });\r\n    } else if (jsbin.owner()) {\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: jsbin.getURL({ withRevision: true }) + '/' + type,\r\n        error: function () {\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'error',\r\n            content: 'The ' + text + ' failed. If this continues, please can you file an issue?'\r\n          });\r\n        },\r\n        success: function () {\r\n          jsbin.state.metadata.archive = unarchive !== false;\r\n          updateArchiveMenu();\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'notication',\r\n            autohide: 5000,\r\n            content: 'This bin is now ' + (unarchive === false ? 'restored from the archive.' : 'archived.')\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'notication',\r\n        content: 'The ' + text + ' failed. You can only archive bins that you own.'\r\n      });\r\n    }\r\n  }\r\n\r\n  function updateArchiveMenu() {\r\n    if (jsbin.state.metadata && jsbin.state.metadata.archive) {\r\n      $('a.archivebin').hide();\r\n      $('a.unarchivebin').show();\r\n    } else {\r\n      $('a.archivebin').show();\r\n      $('a.unarchivebin').hide();\r\n    }\r\n  }\r\n\r\n  updateArchiveMenu();\r\n\r\n  return jsbin.archive = archive;\r\n});\ndefine('skylark-jsbin-client/chrome/navigation',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n  \"skylark-jsbin-chrome/hideOpen\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\",\r\n   \"./analytics\",\r\n   \"./archive\",\r\n   \"./settings\"\r\n],function ($,store,hideOpen, panels,jsbin,analytics, archive,settings) {\r\n  var $startingpoint = $('a.startingpoint').click(function (event) {\r\n    event.preventDefault();\r\n    if (localStorage) {\r\n      analytics.saveTemplate();\r\n      localStorage.setItem('saved-javascript', panels.named.javascript.getCode());\r\n      localStorage.setItem('saved-html', panels.named.html.getCode());\r\n      localStorage.setItem('saved-css', panels.named.css.getCode());\r\n\r\n      localStorage.setItem('saved-processors', JSON.stringify({\r\n        javascript: panels.named.javascript.processor.id,\r\n        html: panels.named.html.processor.id,\r\n        css: panels.named.css.processor.id,\r\n      }));\r\n\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'notification',\r\n        content: 'Starting template updated and saved',\r\n        autohide: 3000\r\n      });\r\n    } else {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'error',\r\n        content: 'Saving templates isn\\'t supported in this browser I\\'m afraid. Sorry'\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  // if (localStorage && localStorage['saved-html']) {\r\n    // $startingpoint.append('')\r\n  // }\r\n\r\n  $('a.disabled').on('click mousedown mouseup', function (event) {\r\n    event.stopImmediatePropagation();\r\n    return false;\r\n  });\r\n\r\n  $('#loginbtn').click(function () {\r\n    analytics.login();\r\n    $(this).toggleClass('open');\r\n    // $('#login').show();\r\n    // loginVisible = true;\r\n    // return false;\r\n  });\r\n\r\n  $('a.logout').click(function (event) {\r\n    event.preventDefault();\r\n\r\n    // We submit a form here because I can't work out how to style the button\r\n    // element in the form to look the same as the anchor. Ideally we would\r\n    // remove that and just let the form submit itself...\r\n    $(this.hash).submit();\r\n    // Clear session storage so private bins wont be cached.\r\n    for (i = 0; i < store.sessionStorage.length; i++) {\r\n      key = store.sessionStorage.key(i);\r\n      if (key.indexOf('jsbin.content.') === 0) {\r\n        store.sessionStorage.removeItem(key);\r\n      }\r\n    }\r\n  });\r\n\r\n  $('.homebtn').click(function (event, data) {\r\n    if (this.id === 'avatar') {\r\n      analytics.openFromAvatar();\r\n    } else if (this.id === 'profile') {\r\n      analytics.openFromAvatar();\r\n      $(this).closest('.open').removeClass('open');\r\n    } else {\r\n      analytics.open(data);\r\n    }\r\n\r\n    hideOpen();\r\n\r\n    panels.hideAll();\r\n    return false;\r\n  });\r\n\r\n  var $lockrevision = $('div.lockrevision').on('click', function (event) {\r\n    event.preventDefault();\r\n    jsbin.saveChecksum = false;\r\n    jsbin.$document.trigger('locked');\r\n  }).on('mouseup', function () {\r\n    return false;\r\n  });\r\n\r\n  jsbin.$document.on('locked', function () {\r\n    if (!$lockrevision.data('locked')) {\r\n      analytics.lock();\r\n      $lockrevision.removeClass('icon-unlocked').addClass('icon-lock');\r\n      $lockrevision.html('<span>This bin is now locked from further changes</span>');\r\n      $lockrevision.data('locked', true);\r\n    }\r\n  });\r\n\r\n  // var $lockrevision = $('.lockrevision').on('click', function (event) {\r\n  // });\r\n\r\n  jsbin.$document.on('saved', function () {\r\n    $lockrevision.removeClass('icon-lock').addClass('icon-unlocked').data('locked', false);\r\n    $lockrevision.html('<span>Click to lock and prevent further changes</span>');\r\n  });\r\n\r\n  // TODO decide whether to remove this, since it definitely doesn't work!\r\n  // $('#share input[type=text], #share textarea').on('beforecopy', function (event) {\r\n  //   console.log(this, this.getAttribute('data-path'));\r\n  //   analytics.share('copy', this.getAttribute('data-path').substring(1) || 'output');\r\n  // });\r\n\r\n  if (!$('#sharemenu .share-split').length) {\r\n    var $panelCheckboxes = $('#sharepanels input[type=\"checkbox\"]').on('change', function () {\r\n      updateSavedState();\r\n    });\r\n    $('#sharemenu').bind('open', function () {\r\n      $panelCheckboxes.attr('checked', false);\r\n      panels.getVisible().forEach(function (panel) {\r\n        $panelCheckboxes.filter('[data-panel=\"' + panel.id + '\"]').prop('checked', true).change();\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  $('#jsbinurl').click(function (e) {\r\n    setTimeout(function () {\r\n      panels.named.live.hide();\r\n    }, 0);\r\n  });\r\n\r\n  $('#runwithalerts, li.run-with-js a').click(function (event, data) {\r\n    analytics.run(data);\r\n    if (panels.named.console.visible) {\r\n      panels.named.console.render(true);\r\n    } else {\r\n      panels.renderLivePreview(true);\r\n    }\r\n    return false;\r\n  });\r\n\r\n  $('#runconsole').click(function () {\r\n    analytics.runconsole();\r\n    panels.named.console.render(true);\r\n    return false;\r\n  });\r\n\r\n  $('#clearconsole').click(function () {\r\n    jsconsole.clear();\r\n    return false;\r\n  });\r\n\r\n  $('#showhelp').click(function () {\r\n    $body.toggleClass('keyboardHelp');\r\n    keyboardHelpVisible = $body.is('.keyboardHelp');\r\n    if (keyboardHelpVisible) {\r\n      // analytics.help('keyboard');\r\n    }\r\n    return false;\r\n  });\r\n\r\n  $('a.toggle-side-nav').on(jsbin.mobile ? 'touchstart' : 'click', function () {\r\n    $body.toggleClass('show-nav');\r\n    sideNavVisible = $body.is('.show-nav');\r\n    if (!sideNavVisible && !jsbin.mobile) {\r\n      // we only focus the editor in desktop, otherwise the keyboard jumps up\r\n      $('#skipToEditor').click();\r\n    }\r\n    return sideNavVisible;\r\n  });\r\n\r\n\r\n  $('#showurls').click(function () {\r\n    $body.toggleClass('urlHelp');\r\n    urlHelpVisible = $body.is('.urlHelp');\r\n    if (urlHelpVisible) {\r\n      // analytics.urls();\r\n    }\r\n    return false;\r\n  });\r\n\r\n  $('.code.panel > .label > span.name').dblclick(function () {\r\n    panels.allEditors(function (panel) {\r\n      var lineNumbers = !panel.editor.getOption('lineNumbers');\r\n      panel.editor.setOption('lineNumbers', lineNumbers);\r\n      jsbin.settings.editor.lineNumbers = lineNumbers;\r\n    });\r\n  });\r\n\r\n  $('a.createnew').click(function (event) {\r\n    event.preventDefault();\r\n    var i, key;\r\n    analytics.createNew();\r\n    // FIXME this is out and out [cr]lazy....\r\n    panels.savecontent = function(){};\r\n    for (i = 0; i < store.sessionStorage.length; i++) {\r\n      key = store.sessionStorage.key(i);\r\n      if (key.indexOf('jsbin.content.') === 0) {\r\n        store.sessionStorage.removeItem(key);\r\n      }\r\n    }\r\n\r\n    // clear out the write checksum too\r\n    store.sessionStorage.removeItem('checksum');\r\n\r\n    panels.saveOnExit = false;\r\n\r\n    // first try to restore their default panels\r\n    panels.restore();\r\n\r\n    // if nothing was shown, show html & live\r\n    setTimeout(function () {\r\n      if (panels.getVisible().length === 0) {\r\n        panels.named.html.show();\r\n        panels.named.live.show();\r\n      }\r\n      window.location = jsbin.root;\r\n    }, 0);\r\n  });\r\n\r\n  var $privateButton = $('#control a.visibilityToggle#private');\r\n  var $publicButton = $('#control a.visibilityToggle#public');\r\n\r\n  var $visibilityButtons = $('#control a.visibilityToggle').click(function(event) {\r\n    event.preventDefault();\r\n\r\n    var visibility = $(this).data('vis');\r\n\r\n    $.ajax({\r\n      url: jsbin.getURL({ withRevision: true }) + '/' + visibility,\r\n      type: 'post',\r\n      success: function (data) {\r\n\r\n        jsbin.$document.trigger('tip', {\r\n          type: 'notification',\r\n          content: 'This bin is now ' + visibility,\r\n          autohide: 6000\r\n        });\r\n\r\n        $visibilityButtons.css('display', 'none');\r\n\r\n        if (visibility === 'public') {\r\n          $privateButton.css('display', 'block');\r\n        } else {\r\n          $publicButton.css('display', 'block');\r\n        }\r\n\r\n      }\r\n    });\r\n  });\r\n\r\n  $('form.login').closest('.menu').bind('close', function () {\r\n    $(this).find('.loginFeedback').empty().hide();\r\n    $('#login').removeClass('forgot');\r\n  });\r\n\r\n  $('#lostpass').click(function (e) {\r\n    $('#login').addClass('forgot').find('input[name=email]').focus();\r\n    return false;\r\n  });\r\n\r\n  jsbin.settings.includejs = jsbin.settings.includejs === undefined ? true : jsbin.settings.includejs;\r\n\r\n  // ignore for embed as there might be a lot of embeds on the page\r\n  if (!jsbin.embed && store.sessionStorage.getItem('runnerPending')) {\r\n    jsbin.$document.trigger('tip', {\r\n      content: 'It looks like your last session may have crashed, so I\\'ve disabled \"Auto-run JS\" for you',\r\n      type: 'error',\r\n    });\r\n    store.sessionStorage.removeItem('runnerPending');\r\n    jsbin.settings.includejs = false;\r\n  }\r\n\r\n  $('#enablejs').change(function () {\r\n    jsbin.settings.includejs = this.checked;\r\n    analytics.enableLiveJS(jsbin.settings.includejs);\r\n    panels.named.live.render();\r\n  }).attr('checked', jsbin.settings.includejs);\r\n\r\n  if (!jsbin.embed && jsbin.settings.hideheader) {\r\n    jsbin.$body.addClass('hideheader');\r\n  }\r\n\r\n  var cancelUp = false;\r\n  $('form input, form textarea').focus(function () {\r\n    this.select();\r\n    cancelUp = true;\r\n  }).mouseup(function () {\r\n    if (cancelUp) {\r\n      cancelUp = false;\r\n      return false;\r\n    }\r\n  });\r\n\r\n  if (window.location.hash) {\r\n    $('a[href$=\"' + window.location.hash + '\"]').mousedown();\r\n  }\r\n\r\n  var ismac = navigator.userAgent.indexOf(' Mac ') !== -1,\r\n      mackeys = {\r\n        'ctrl': '⌘',\r\n        'shift': '⇧',\r\n        'del': '⌫'\r\n      };\r\n\r\n  $('#control').find('a[data-shortcut]').each(function () {\r\n    var $this = $(this),\r\n        data = $this.data();\r\n\r\n    var key = data.shortcut;\r\n    if (ismac) {\r\n      key = key.replace(/ctrl/i, mackeys.ctrl).replace(/shift/, mackeys.shift).replace(/del/, mackeys.del).replace(/\\+/g, '').toUpperCase();\r\n    }\r\n\r\n    $this.append('<span class=\"keyshortcut\">' + key + '</span>');\r\n  });\r\n\r\n  (function () {\r\n\r\n  var re = {\r\n    head: /<head(.*)\\n/i,\r\n    meta: /<meta name=\"description\".*?>/i,\r\n    metaContent: /content=\".*?\"/i\r\n  };\r\n\r\n  var metatag = '<meta name=\"description\" content=\"[add your bin description]\">\\n';\r\n\r\n  $('#addmeta').click(function () {\r\n    // if not - insert\r\n    // <meta name=\"description\" content=\"\" />\r\n    // if meta description is in the HTML, highlight it\r\n    var editor = panels.named.html,\r\n        cm = editor.editor,\r\n        html = editor.getCode();\r\n\r\n    if (!editor.visible) {\r\n      editor.show();\r\n    }\r\n\r\n    if (!re.meta.test(html)) {\r\n      if (re.head.test(html)) {\r\n        html = html.replace(re.head, '<head$1\\n' + metatag);\r\n      } else {\r\n        // slap in the top\r\n        html = metatag + html;\r\n      }\r\n    }\r\n\r\n    editor.setCode(html);\r\n\r\n    // now select the text\r\n    // editor.editor is the CM object...yeah, sorry about that...\r\n    var cursor = cm.getSearchCursor(re.meta);\r\n    cursor.findNext();\r\n\r\n    var contentCursor = cm.getSearchCursor(re.metaContent);\r\n    contentCursor.findNext();\r\n\r\n    var from = { line: cursor.pos.from.line, ch: cursor.pos.from.ch + '<meta name=\"description\" content=\"'.length },\r\n        to = { line: contentCursor.pos.to.line, ch: contentCursor.pos.to.ch - 1 };\r\n\r\n    cm.setCursor(from);\r\n    cm.setSelection(from, to);\r\n    cm.on('cursoractivity', function () {\r\n      cm.on('cursoractivity', null);\r\n      mark.clear();\r\n    });\r\n\r\n    var mark = cm.markText(from, to, { className: 'highlight' });\r\n\r\n    cm.focus();\r\n\r\n    return false;\r\n  });\r\n\r\n  $('a.publish-to-vanity').on('click', function (event) {\r\n    event.preventDefault();\r\n    analytics.publishVanity();\r\n\r\n    $.ajax({\r\n      type: 'post',\r\n      url: this.href,\r\n      data: { url: jsbin.getURL({ withRevision: true }) },\r\n      success: function () {\r\n        jsbin.$document.trigger('tip', {\r\n          type: 'notification',\r\n          content: 'This bin is now published to your vanity URL: <a target=\"_blank\" href=\"' + jsbin.shareRoot + '\">' + jsbin.shareRoot + '</a>'\r\n        });\r\n      },\r\n      error: function (xhr) {\r\n        jsbin.$document.trigger('tip', {\r\n          type: 'error',\r\n          content: 'There was a problem publishing to your vanity URL. Can you try again or file a <a target=\"_blank\" href=\"' + githubIssue() + '\">new issue</a>?'\r\n        });\r\n      }\r\n    })\r\n  });\r\n\r\n  jsbin.$document.on('click', 'a.deleteallbins', function () {\r\n    if (jsbin.user && jsbin.state.metadata.name === jsbin.user.name) {\r\n      if (confirm('Delete all snapshots of this bin including this one?')) {\r\n      analytics.deleteAll();\r\n      $.ajax({\r\n        type: 'post',\r\n        url: jsbin.getURL() + '/delete-all',\r\n        success: function () {\r\n          jsbin.state.deleted = true;\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'error',\r\n            content: 'This bin and history is now deleted. You can continue to edit, but once you leave the bin can\\'t be retrieved'\r\n          });\r\n        },\r\n        error: function (xhr) {\r\n          if (xhr.status === 403) {\r\n            jsbin.$document.trigger('tip', {\r\n              content: 'You don\\'t own this bin, so you can\\'t delete it.',\r\n              autohide: 5000\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    } else {\r\n      jsbin.$document.trigger('tip', {\r\n        type: 'error',\r\n        content: 'You must be logged in <em><strong>the bin owner</strong></em> to delete all snapshots. <a target=\"_blank\" href=\"/help/delete-a-bin\">Need help?</a>'\r\n      });\r\n    }\r\n  });\r\n\r\n  $('a.deletebin').on('click', function (e) {\r\n    e.preventDefault();\r\n    if (confirm('Delete this bin?')) {\r\n      analytics['delete']();\r\n      $.ajax({\r\n        type: 'post',\r\n        url: jsbin.getURL({ withRevision: true }) + '/delete',\r\n        data: { checksum: jsbin.state.checksum },\r\n        success: function () {\r\n          jsbin.state.deleted = true;\r\n          jsbin.$document.trigger('tip', {\r\n            type: 'error',\r\n            content: 'This bin is now deleted. You can continue to edit, but once you leave the bin can\\'t be retrieved'\r\n          });\r\n        },\r\n        error: function (xhr) {\r\n          if (xhr.status === 403) {\r\n            jsbin.$document.trigger('tip', {\r\n              content: 'You don\\'t own this bin, so you can\\'t delete it.',\r\n              autohide: 5000\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  $('a.archivebin').on('click', function (e) {\r\n    e.preventDefault();\r\n    archive();\r\n  });\r\n\r\n  $('a.unarchivebin').on('click', function (e) {\r\n    e.preventDefault();\r\n    archive(false);\r\n  });\r\n\r\n  var $enableUniversalEditor = $('#enableUniversalEditor').on('change', function (e) {\r\n    e.preventDefault();\r\n\r\n    jsbin.settings.editor.simple = this.checked;\r\n    analytics.universalEditor(jsbin.settings.editor.simple);\r\n    settings.save(function () {\r\n      window.location.reload();\r\n    });\r\n  });\r\n\r\n  if (jsbin.settings.editor.simple) {\r\n    $enableUniversalEditor.prop('checked', true);\r\n  }\r\n\r\n  $('#skipToEditor').on('click keypress', function () {\r\n    var first = (panels.getVisible() || ['html']).shift();\r\n    if (jsbin.settings.editor.simple || jsbin.mobile) {\r\n      $('#' + first.id).focus();\r\n    } else if (first) {\r\n      first.editor.focus();\r\n    } else {\r\n      panels.named.html.editor.focus();\r\n    }\r\n    return false;\r\n  });\r\n\r\n  }());\r\n\r\n});\ndefine('skylark-jsbin-client/chrome/file-drop',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  function allowDrop(holder) {\r\n    var cursorPosition = null;\r\n    var panel = null;\r\n\r\n    var guid = (function() {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n      }\r\n      return function() {\r\n        return s4() + s4();\r\n      };\r\n    })();\r\n\r\n    function uploadAsset(file) {\r\n      var loading = document.createElement('div');\r\n      loading.className = 'assetLoading';\r\n      loading.innerHTML = '0% uploading...';\r\n      var currentStatus = 0;\r\n\r\n      var progress = function progress(percent, status) {\r\n        if (percent - currentStatus < 10) {\r\n          currentStatus = percent;\r\n        } else {\r\n          currentStatus += 10;\r\n          requestAnimationFrame(function () {\r\n            progress(percent, status);\r\n          });\r\n        }\r\n\r\n        if (loading && currentStatus > 0) {\r\n          if (currentStatus > 97) {\r\n            loading.innerHTML = '97% uploaded...';\r\n            // because there's some lag between 100% and actually rendering\r\n          } else {\r\n            loading.innerHTML = currentStatus + '% uploaded...';\r\n          }\r\n        }\r\n      };\r\n\r\n      var widget = null;\r\n      var insertPosition = cursorPosition || panel.getCursor();\r\n      if (!jsbin.lameEditor) {\r\n        var line = cursorPosition ? cursorPosition.line : panel.getCursor().line;\r\n        widget = panel.addLineWidget(line, loading, {coverGutter: false, nohscroll: true});\r\n      } else {\r\n        insertTextArea(panel, 'Uploading ...', true);\r\n      }\r\n\r\n      var s3upload = new S3Upload({\r\n        s3_sign_put_url: '/account/assets/sign',\r\n        s3_object_name: file.name.replace(/\\s+/g, '-'),\r\n        files: [file],\r\n\r\n        onProgress: function (percent, status) {\r\n          if (!jsbin.lameEditor) {\r\n            requestAnimationFrame(function () {\r\n              progress(percent, status);\r\n            });\r\n          }\r\n        },\r\n\r\n        onError: function (reason, fromServer) {\r\n          currentStatus = -1;\r\n          console.error('Failed to upload: ' + fromServer);\r\n          loading.innerHTML = fromServer || 'Failed to complete';\r\n          loading.style.color = 'red';\r\n          panel = null;\r\n          cursorPosition = null;\r\n          if (widget) {\r\n            setTimeout(function () {\r\n              widget.clear();\r\n            }, 4000);\r\n          }\r\n        },\r\n\r\n        onFinishS3Put: function (url) {\r\n          if (!jsbin.lameEditor) {\r\n            widget.clear();\r\n            panel.replaceRange(getInsertText(file.type, panel, url), insertPosition);\r\n          } else {\r\n            insertTextArea(panel, getInsertText(file.type, panel, url));\r\n            $(document).trigger('codeChange', { panelId: panel.id });\r\n          }\r\n          panel = null;\r\n          cursorPosition = null;\r\n        }\r\n      });\r\n    }\r\n\r\n    function insertTextArea(el, string, select) {\r\n      var start = el.selectionStart;\r\n      var end = el.selectionEnd;\r\n\r\n      var target = el;\r\n      var value = target.value;\r\n\r\n      // set textarea value to: text before caret + tab + text after caret\r\n      target.value = value.substring(0, start) + string + value.substring(end);\r\n\r\n      // put caret at right position again (add one for the tab)\r\n      el.selectionStart = el.selectionEnd = start + 1;\r\n\r\n      if (select) {\r\n        el.selectionStart -= 1;\r\n        el.selectionEnd = el.selectionEnd + string.length;\r\n      } else {\r\n        el.selectionStart = el.selectionEnd = start + string.length;\r\n      }\r\n    }\r\n\r\n    function getInsertText(mime, cm, url) {\r\n      // var panel = jsbin.panels.panels[cm.id];\r\n      var processor = jsbin.state.processors[cm.id];\r\n\r\n      if (cm.id === 'html') {\r\n        if (mime.indexOf('image/') === 0) {\r\n          if (processor === 'markdown') {\r\n            return '![' + url + '](' + url + ')';\r\n          }\r\n\r\n          if (processor === 'jade') {\r\n            return 'img(src=\"' + url + '\")';\r\n          }\r\n\r\n          return '<img src=\"' + url + '\">';\r\n        }\r\n\r\n        return url;\r\n      }\r\n\r\n      if (cm.id === 'css') {\r\n        if (mime.indexOf('image/') === 0) {\r\n          return 'url(' + url + ')';\r\n        }\r\n\r\n        return url;\r\n      }\r\n\r\n      // note: js just gets the url...\r\n      return url;\r\n    }\r\n\r\n    var dragging = false;\r\n\r\n    holder.ondragover = function () {\r\n      dragging = true;\r\n      return false;\r\n    };\r\n\r\n    holder.ondragend = function () {\r\n      dragging = false;\r\n      return false;\r\n    };\r\n\r\n    function getFileData(item) {\r\n      return new Promise(function (resolve, reject) {\r\n        if (item.kind === 'string') {\r\n          item.getAsString(function (filename) {\r\n            resolve(filename);\r\n          });\r\n        } else {\r\n          resolve(item.getAsFile());\r\n        }\r\n      });\r\n    }\r\n\r\n    $('#bin textarea').on('paste', function (jQueryEvent) {\r\n      if ($(this).closest('.CodeMirror').length) {\r\n        panel = $(this).closest('.CodeMirror')[0].CodeMirror;\r\n      } else {\r\n        panel = this;\r\n      }\r\n\r\n      var event = jQueryEvent.originalEvent;\r\n      var items = event.clipboardData.items;\r\n\r\n      // this means we've copied a file that's an app icon, or it's just text\r\n      // which we don't want to kick in anyway.\r\n      if (!items || event.clipboardData.types[0].indexOf('text/') === 0) {\r\n        return;\r\n      }\r\n\r\n      var file = null;\r\n      var promises = [];\r\n      for (var i = 0; i < items.length; i++) {\r\n        promises.push(getFileData(items[i]));\r\n      }\r\n\r\n      Promise.all(promises).then(function (data) {\r\n        var blobname = data.sort(function (a, b) {\r\n          return typeof a === 'string' ? 1 : -1;\r\n        });\r\n        var file = data[0];\r\n        file.name = data[1] || guid() + '.' + file.type.split('/')[1];\r\n\r\n        uploadAsset(file);\r\n      }).catch(function (error) {\r\n        console.log(error.stack);\r\n      });\r\n\r\n      // FIXME???\r\n      jQueryEvent.preventDefault();\r\n    });\r\n\r\n    $('.CodeMirror').on('mousemove', function (e) {\r\n      if (!dragging) {\r\n        return;\r\n      }\r\n\r\n      panel = this.CodeMirror;\r\n      cursorPosition = this.CodeMirror.coordsChar({ top: event.y, left: event.x });\r\n      this.CodeMirror.setCursor(cursorPosition);\r\n    });\r\n\r\n    var jstypes = ['javascript', 'coffeescript', 'coffee', 'js'];\r\n    var csstypes = ['css', 'less', 'sass', 'scss'];\r\n    var htmltypes = ['html', 'markdown', 'plain'];\r\n\r\n    holder.ondrop = function (e) {\r\n      dragging = false;\r\n      e.preventDefault();\r\n\r\n      if ($(e.target).closest('.CodeMirror').length) {\r\n        panel = $(e.target).closest('.CodeMirror')[0].CodeMirror;\r\n      } else {\r\n        panel = e.target;\r\n      }\r\n\r\n      var file = e.dataTransfer.files[0],\r\n          reader = new FileReader();\r\n\r\n      if (file.type.indexOf('text/') !== 0) {\r\n        // this isn't a text file for populating the panel, try uploading instead\r\n        uploadAsset(file);\r\n        return;\r\n      }\r\n\r\n      reader.onload = function (event) {\r\n        // put JS in the JavaScript panel\r\n        var type = file.type ? file.type.toLowerCase().replace(/^(text|application)\\//, '') : file.name.toLowerCase().replace(/.*\\./g, ''),\r\n            panelId = null,\r\n            panel = editors[panelId],\r\n            syncCode = event.target.result,\r\n            scroller = null;\r\n\r\n        if (jstypes.indexOf(type) !== -1) {\r\n          panelId = 'javascript';\r\n        } else if (csstypes.indexOf(type) !== -1) {\r\n          panelId = 'css';\r\n        } else if (htmltypes.indexOf(type) !== -1) {\r\n          panelId = 'html';\r\n        }\r\n\r\n        if (panelId === null) {\r\n          // then we have an asset upload\r\n          return uploadAsset(file);\r\n        }\r\n\r\n        panel = editors[panelId];\r\n        scroller = panel.editor.scroller;\r\n\r\n        panel.setCode(event.target.result);\r\n        panel.show();\r\n\r\n        try {\r\n          // now kick off - basically just doing a copy and paste job from @wookiehangover - thanks man! :)\r\n          var worker = new Worker(jsbin['static'] + '/js/editors/sync-worker.js');\r\n\r\n          // pass the worker the file object\r\n          worker.postMessage(file);\r\n\r\n          panel.$el.find('> .label').append('<small> (live: edit & save in your fav editor)</small>');\r\n\r\n          // bind onmessage handler\r\n          worker.onmessage = function (event) {\r\n            var top = scroller.scrollTop;\r\n            panel.setCode(event.data.body);\r\n            scroller.scrollTop = top;\r\n            syncCode = event.data.body;\r\n          };\r\n        } catch (e) {\r\n          // fail on the awesomeness...oh well\r\n        }\r\n      };\r\n\r\n      reader.readAsText(file);\r\n\r\n      return false;\r\n    };\r\n  }\r\n\r\n  // test for dnd and file api first\r\n  if (!!(window.File && window.FileList && window.FileReader)) {\r\n    allowDrop(document.body);\r\n  }\r\n});\ndefine('skylark-jsbin-client/chrome/gist',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-bintofile\",\r\n  \"skylark-jsbin-processors\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\"\r\n],function ($,binToFile, processors,panels,jsbin) {\r\n    /*global $:true, jsbin:true, processors:true, $document*/\r\n    'use strict';\r\n\r\n    // Only allow gist import/export if CORS is supported\r\n    var CORS = !!('withCredentials' in new XMLHttpRequest() ||\r\n                  typeof XDomainRequest !== 'undefined');\r\n    if (!CORS) {\r\n      return $(function () {\r\n        $('#export-as-gist').remove();\r\n      });\r\n    }\r\n\r\n    var Gist = function (id) {\r\n      var gist = this,\r\n          token = '';\r\n      gist.code = {};\r\n      if (jsbin.user && jsbin.user.github_token) { // jshint ignore:line\r\n        token = '?access_token=' + jsbin.user.github_token; // jshint ignore:line\r\n      }\r\n      $.get('https://api.github.com/gists/' + id + token, function (data) {\r\n        if (!data) {return;}\r\n        $.each(data.files, function (fileName, fileData) {\r\n          var ext = fileName.split('.').slice(-1).join('');\r\n          gist.code[ext] = fileData.content;\r\n        });\r\n        gist.setCode();\r\n      });\r\n      return this;\r\n    };\r\n\r\n    Gist.prototype.setCode = function () {\r\n      var gist = this;\r\n      $.each(gist.code, function (ext, data) {\r\n        var processorInit = jsbin.processors.findByExtension(ext),\r\n            target = processorInit.target || processorInit.id,\r\n            panel = panels.named[target];\r\n        if (!panel) {return;}\r\n        processors.set(target, processorInit.id);\r\n        jsbin.saveDisabled = true;\r\n        panel.setCode(data);\r\n        jsbin.saveDisabled = false;\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Export as gist\r\n     */\r\n\r\n    $('a.export-as-gist').click(function () {\r\n      var gist = {\r\n        public: true,\r\n        files: {}\r\n      };\r\n\r\n      var defers = [\r\n        panels.named.html.render(),\r\n        panels.named.javascript.render(),\r\n        panels.named.css.render()\r\n      ];\r\n\r\n      Promise.all(defers).then(function (results) { // RSVP.hash\r\n        // Build a file name\r\n        var codes = {\r\n            html : results[0],\r\n            javascript : results[1],\r\n            css : results[2]\r\n        };\r\n        Object.keys(codes).forEach(function (key) {\r\n          var ext = processors[key].extensions ? processors[key].extensions[0] : key;\r\n          var file = ['jsbin', (jsbin.state.code || 'untitled'), ext].join('.');\r\n          if (codes[key].length) {\r\n            gist.files[file] = {\r\n              content: codes[key]\r\n            };\r\n          }\r\n        });\r\n\r\n        if (!gist.files.javascript && !gist.files.css) {\r\n          delete gist.files[['jsbin', (jsbin.state.code || 'untitled'), 'html'].join('.')]\r\n        }\r\n\r\n        if (jsbin.state.processors) {\r\n          panels.source = jsbin.state.processors;\r\n          Object.keys(panels.source).forEach(function (key) {\r\n            panels.source[key] = panels.named[key].getCode();\r\n          });\r\n        }\r\n\r\n        var index = binToFile(codes);\r\n\r\n        gist.files['index.html'] = {\r\n          content: index\r\n        };\r\n\r\n        var desc = [];\r\n\r\n        if (jsbin.state.title) {\r\n          desc.push(jsbin.state.title);\r\n        }\r\n\r\n        if (jsbin.state.description) {\r\n          desc.push(jsbin.state.description);\r\n        }\r\n\r\n        desc.push('// source ' + jsbin.getURL());\r\n\r\n        gist.description = desc.join('\\n\\n');\r\n\r\n        var token = '';\r\n        if (jsbin.user && jsbin.user.github_token) { // jshint ignore:line\r\n          token = '?access_token=' + jsbin.user.github_token; // jshint ignore:line\r\n        }\r\n\r\n        $.ajax({\r\n          type: 'POST',\r\n          url: 'https://api.github.com/gists' + token,\r\n          data: JSON.stringify(gist),\r\n          dataType: 'json',\r\n          crossDomain: true,\r\n          success: function (data) {\r\n            jsbin.$document.trigger('tip', {\r\n              type: 'notification',\r\n              content: 'Gist created! <a href=\"' + data.html_url + '\" target=\"_blank\">Open in new tab.</a>' // jshint ignore:line\r\n            });\r\n          },\r\n          error: function (xhr, status, error) {\r\n            jsbin.$document.trigger('tip', {\r\n              type: 'error',\r\n              content: 'There was a problem creating the gist: ' + error\r\n            });\r\n            console.group('gist');\r\n            console.log(gist);\r\n            console.groupEnd('gist');\r\n          }\r\n        });\r\n      }, function (error) {\r\n        console.error(error.stack);\r\n      });\r\n\r\n      // return false becuase there's weird even stuff going on. ask @rem.\r\n      return false;\r\n    });\r\n\r\n    return Gist;\r\n});\ndefine('skylark-jsbin-chrome/spinner',[\r\n  \"skylark-jquery\",\r\n   \"./chrome\"\r\n],function ($,chrome) {\r\n  function spinner(element) {\r\n    'use strict';\r\n    var c = element || document.createElement('canvas');\r\n    if (!c.getContext) {\r\n      return false;\r\n    }\r\n    var ctx = c.getContext('2d');\r\n\r\n    var rafID = null;\r\n\r\n    c.height = c.width = 11;\r\n\r\n    var TORADIAN = Math.PI / 180;\r\n    var w = c.width;\r\n    var h = c.height;\r\n    var deg = 0;\r\n    var r = 4;\r\n    var speed = 4;\r\n    var tailspeed = 1/7;\r\n\r\n    ctx.strokeStyle = 'rgba(0,0,0,.5)';\r\n    ctx.lineWidth = 1.5;\r\n\r\n    var last = true;\r\n    function draw() {\r\n      rafID = window.requestAnimationFrame(draw);\r\n\r\n      deg += speed;\r\n\r\n      var start = ((deg * tailspeed)) % 360; // A / TAIL\r\n      var end = deg % 360;              // B / HEAD\r\n      var flip = end === start;\r\n\r\n      if (flip) {\r\n        last = !last;\r\n        // this prevents a single blank frame when\r\n        // the start and end have the same value\r\n        start -= 1;\r\n      }\r\n\r\n      ctx.fillStyle = '#f9f9f9';\r\n      ctx.strokeStyle = '#111';\r\n      ctx.fillRect(w/2 - r*2, h/2 - r*2, r * 4, r * 4);\r\n      ctx.beginPath();\r\n      ctx.arc(w/2 + 0.5, h/2 + 0.5, r, start * TORADIAN, end * TORADIAN, last);\r\n      ctx.stroke();\r\n\r\n      ctx.strokeStyle = '#999';\r\n      ctx.beginPath();\r\n      ctx.arc(w/2 + 0.5, h/2 + 0.5, r, end * TORADIAN, start * TORADIAN, last);\r\n      ctx.stroke();\r\n\r\n      ctx.closePath();\r\n\r\n    }\r\n\r\n    return {\r\n      element: c,\r\n      start: draw,\r\n      stop: function () {\r\n        window.cancelAnimationFrame(rafID);\r\n      }\r\n    };\r\n  }\r\n\r\n  return chrome.spinner = spinner;\r\n});\ndefine('skylark-jsbin-chrome/prettyDate',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n   \"./jsbin\",\r\n   \"./chrome\"\r\n],function ($,store,jsbin,chrome) {\r\n\r\n  function prettyDate(time){\r\n    'use strict';\r\n\r\n\r\n    // Remy Sharp edit: July 13, 2014 specific to JS Bin\r\n    // Need to replace Z in ISO8601 timestamp with +0000 so prettyDate() doesn't\r\n    // completely remove it (and parse the date using the local timezone).\r\n    var date = new Date((time || '').replace('Z', '+0000').replace(/-/g,'/').replace(/[TZ]/g,' ')),\r\n      diff = (((new Date()).getTime() - date.getTime()) / 1000),\r\n      dayDiff = Math.floor(diff / 86400);\r\n\r\n    if ( isNaN(dayDiff) || dayDiff < 0 ) {\r\n      return;\r\n    }\r\n\r\n    return dayDiff === 0 && (\r\n        diff < 60 && 'just now' ||\r\n        diff < 120 && '1 minute ago' ||\r\n        diff < 3600 && Math.floor( diff / 60 ) + ' minutes ago' ||\r\n        diff < 7200 && '1 hour ago' ||\r\n        diff < 86400 && Math.floor( diff / 3600 ) + ' hours ago') ||\r\n        shortDate(date.getTime());\r\n  }\r\n\r\n\r\n  function shortDate(time) {\r\n    'use strict';\r\n    var monthDict = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var date = new Date(time),\r\n        mon = monthDict[date.getMonth()],\r\n        day = date.getDate()+'',\r\n        year = date.getFullYear(),\r\n        thisyear = (new Date()).getFullYear();\r\n\r\n    if (thisyear === year) {\r\n      return day + ' ' + mon;\r\n    } else {\r\n      return day + ' ' + mon + ' ' + year;\r\n    }\r\n  }\r\n  $.fn.prettyDate = function(){\r\n      'use strict';\r\n      /* global $*/\r\n      return this.each(function(){\r\n        var date = prettyDate(this.getAttribute('pubdate'));\r\n        if ( date ) {\r\n          $(this).text( date );\r\n        }\r\n      });\r\n  };\r\n  \r\n\r\n  return chrome.prettyDate = prettyDate;\r\n});\ndefine('skylark-jsbin-client/chrome/infocard',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-chrome/hideOpen\",\r\n  \"skylark-jsbin-chrome/spinner\",\r\n  \"skylark-jsbin-chrome/prettyDate\",\r\n  \"skylark-jsbin-coder/editors/panels\",\r\n   \"../jsbin\",\r\n   \"./analytics\"\r\n],function ($,hideOpen,spinner,prettyDate, panels,jsbin,analytics) {\r\n  if ('EventSource' in window) {\r\n    return setupInfocard()\r\n  } else {\r\n    $.getScript(jsbin['static'] + '/js/vendor/eventsource.js', setupInfocard);\r\n  }\r\n  function setupInfocard() {\r\n    /*global spinner, $, jsbin, prettyDate, EventSource, throttle, $document, analytics, throttle*/\r\n    'use strict';\r\n\r\n    // don't insert this on embeded views\r\n    if (jsbin.embed) {\r\n      return;\r\n    }\r\n\r\n    var $template = $('#infocard'); // donkey way of cloning from template\r\n    var $header = $template.find('header');\r\n    var canvas = $header.find('canvas')[0];\r\n    var s = spinner(canvas);\r\n    var htmlpanel = panels.named.html;\r\n    var viewers = 0;\r\n    var es = null;\r\n\r\n    var re = {\r\n      head: /<head(.*)\\n/i,\r\n      meta: /(<meta name=\"description\" content=\")([^\"]*)/im,\r\n      title: /<title>(.*)<\\/title>/im\r\n    };\r\n\r\n    if ($template.length === 0) {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    function updateStats(event, _data) {\r\n      var data = _data ? JSON.parse(_data) : JSON.parse(event.data);\r\n\r\n      if (data.connections > 0 && viewers === 0) {\r\n        $template.addClass('viewers');\r\n      }\r\n\r\n      if (viewers !== data.connections) {\r\n        var $b = $header.find('.viewers b').removeClass('up down').html('<b>' + data.connections + '<br>' + viewers + '<br>' + data.connections + '</b>'),\r\n            c = viewers > data.connections ? 'down' : 'up';\r\n        setTimeout(function () {\r\n          $b.addClass(c);\r\n        }, 0);\r\n      }\r\n\r\n      viewers = data.connections;\r\n\r\n      if (viewers === 0) {\r\n        setTimeout(function () {\r\n          $template.removeClass('viewers');\r\n        }, 250);\r\n      }\r\n\r\n    }\r\n\r\n    function listenStats(owner) {\r\n      if (window.EventSource && owner) {\r\n        // TODO use pagevisibility api to close connection\r\n        if (es) {\r\n          es.close();\r\n        }\r\n        es = new EventSource(jsbin.getURL() + '/stats?checksum=' + jsbin.state.checksum);\r\n        es.addEventListener('stats', jsbin.throttle(updateStats, 1000));\r\n      }\r\n    }\r\n\r\n    function insertTag(tag) {\r\n      var cm = htmlpanel.editor;\r\n      var html = htmlpanel.getCode();\r\n\r\n      if (tag === 'meta') {\r\n        tag = 'meta name=\"description';\r\n      }\r\n\r\n\r\n      if (html.indexOf('<' + tag) === -1) {\r\n        var userhtml = getPanelText(tag === 'title' ? 'title' : 'description', '');\r\n        if (re.head.test(html)) {\r\n          html = html.replace(re.head, '<head$1\\n' + userhtml);\r\n        } else {\r\n          // slap in the top\r\n          html = userhtml + html;\r\n        }\r\n        htmlpanel.setCode(html);\r\n      }\r\n    }\r\n\r\n    function getPanelText(type, text) {\r\n      var processor = jsbin.state.processors.html;\r\n\r\n      text = text.replace(/\"/g, '&quot;');\r\n\r\n      if (type === 'title') {\r\n        if (processor === 'jade') {\r\n          return 'title ' + text + '\\n';\r\n        }\r\n\r\n        return '<title>' + text + '</title>\\n';\r\n      }\r\n\r\n      if (type === 'description') {\r\n        if (processor === 'jade') {\r\n          return 'meta(name=\"description\", content=\"' + text + '\")\\n';\r\n        }\r\n\r\n        return '<meta name=\"description\" content=\"' + text + '\">\\n';\r\n      }\r\n\r\n      return text;\r\n    }\r\n\r\n\r\n    if ($template.find('.settings')) {\r\n      $template.find('#title').on('input', function () {\r\n        insertTag('title');\r\n        var html = htmlpanel.getCode();\r\n        var value = this.value;\r\n        var result = html.replace(re.title, function (all, capture) {\r\n          return '<title>' + value.replace(/</g, '&lt;').replace(/>/g, '&gt;') + '</title>';\r\n        });\r\n        updateCode(result);\r\n        jsbin.state.updateSettings({ title: this.value });\r\n      });\r\n\r\n      $template.find('#description').on('input', function () {\r\n        insertTag('meta');\r\n        var html = htmlpanel.getCode();\r\n        var value = this.value;\r\n        var result = html.replace(re.meta, function (all, capture) {\r\n          return capture + value.replace(/\"/g, '&quot;');\r\n        });\r\n        updateCode(result);\r\n        jsbin.state.updateSettings({ description: this.value });\r\n      });\r\n    }\r\n\r\n    function updateCode(result) {\r\n      // capture selection and cursor\r\n      var state = null;\r\n      var cursor = null;\r\n      var cm = htmlpanel.editor;\r\n      var selected = cm.somethingSelected();\r\n      if (panels.named.html.visible) {\r\n        if (selected) {\r\n          state = cm.listSelections();\r\n        }\r\n        cursor = cm.getCursor();\r\n      }\r\n\r\n      htmlpanel.setCode(result);\r\n\r\n      // then restore\r\n      if (panels.named.html.visible) {\r\n        if (!jsbin.mobile) cm.setCursor(cursor);\r\n        if (selected) {\r\n          cm.setSelections(state);\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateInfoCard(event) {\r\n      var meta = jsbin.state.metadata || {};\r\n      var classes = [];\r\n      var owner = false;\r\n\r\n      if (meta.name) {\r\n        $header.find('.name b').html(meta.name);\r\n        $header.find('img').attr('src', meta.avatar);\r\n        classes.push(meta.name);\r\n      }\r\n\r\n      if (jsbin.state.checksum || (jsbin.user && (meta.name === jsbin.user.name))) {\r\n        owner = true;\r\n        classes.push('author');\r\n      }\r\n\r\n      if (s) {\r\n        s.stop();\r\n      }\r\n\r\n      if (!jsbin.state.streaming || owner === true) {\r\n        $header.find('time').html(event ? 'just now' : prettyDate(meta.last_updated));\r\n      } else if (owner === false) {\r\n        $header.find('time').html('Streaming');\r\n        classes.push('streaming');\r\n        if (s) {\r\n          s.start();\r\n        }\r\n      }\r\n\r\n      if (!jsbin.checksum) {\r\n        classes.push('meta');\r\n      }\r\n\r\n      if (meta.pro) {\r\n        classes.push('pro');\r\n      }\r\n\r\n      $header.find('.visibility').text(meta.visibility);\r\n\r\n      if (meta.visibility === 'private') {\r\n        classes.push('private');\r\n      } else if (meta.visibility === 'public') {\r\n        classes.push('public');\r\n      } // TODO handle team\r\n\r\n      if (jsbin.state.code) {\r\n        $template.addClass(classes.join(' ')).parent().removeAttr('hidden');\r\n      }\r\n\r\n      if (jsbin.state.streaming) {\r\n        if (window.EventSource && owner) {\r\n          listenStats(owner);\r\n          handleVisibility(owner);\r\n          var url = jsbin.getURL();\r\n          jsbin.$document.on('saved', function () {\r\n            var newurl = window.location.toString();\r\n            if (url !== newurl) {\r\n              es.close();\r\n              listenStats(owner);\r\n            }\r\n          });\r\n        } else if (jsbin.saveDisabled === true && window.location.pathname.slice(-5) === '/edit') {\r\n          $.getScript(jsbin.static + '/js/spike.js?' + jsbin.version);\r\n          jsbin.$document.on('stats', jsbin.throttle(updateStats, 1000));\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleVisibility(owner) {\r\n      var hiddenProperty = 'hidden' in document ? 'hidden' :\r\n        'webkitHidden' in document ? 'webkitHidden' :\r\n        'mozHidden' in document ? 'mozHidden' :\r\n        null;\r\n      var visibilityStateProperty = 'visibilityState' in document ? 'visibilityState' :\r\n        'webkitVisibilityState' in document ? 'webkitVisibilityState' :\r\n        'mozVisibilityState' in document ? 'mozVisibilityState' :\r\n        null;\r\n\r\n      if (visibilityStateProperty) {\r\n        var visibilityChangeEvent = hiddenProperty.replace(/hidden/i, 'visibilitychange');\r\n        document.addEventListener(visibilityChangeEvent, function visibilityChangeEvent() {\r\n          if (document[hiddenProperty]) { // hidden\r\n            es.close();\r\n          } else {\r\n            listenStats(owner);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function initHandlers() {\r\n      $('a.more').add($header).on('mousedown touchstart', function (e) {\r\n        jsbin.infocardVisible = !jsbin.infocardVisible; // this is hack :-\\\r\n        hideOpen();\r\n        e.preventDefault();\r\n        analytics.infocard('click', 'no-result');\r\n        var toTrigger;\r\n        $template.toggleClass(function (index, klass) {\r\n          toTrigger = klass.indexOf('open') === -1 ? 'open' : 'close';\r\n          jsbin.infocardVisible = toTrigger === 'open';\r\n          return 'open';\r\n        }).trigger(toTrigger);\r\n      });\r\n\r\n      $template.one('open', function () {\r\n        var statusCode = $('#status').data('status') || 200;\r\n        $.getJSON(jsbin.static + '/js/http-codes.json', function (codes) {\r\n          var html = '';\r\n          codes.forEach(function (code) {\r\n            html += '<option value=\"' + code.code + '\">' + code.string + '</option>';\r\n          });\r\n          $('#status').html(html).val(statusCode).on('change', function () {\r\n            jsbin.state.updateSettings({ statusCode: this.value });\r\n          });\r\n        });\r\n      }).on('close', function () {\r\n\r\n      });\r\n\r\n      function updateHeaders() {\r\n        // grab all the headers with values and send that instead\r\n        var headers = {};\r\n        $template.find('.row').each(function () {\r\n          if ($(this).find('[name=\"header-value\"]').val().trim()) {\r\n            headers[$(this).find('input:first').val()] = $(this).find('input:last').val();\r\n          }\r\n        });\r\n\r\n        jsbin.state.updateSettings({ headers: headers }, 'PUT');\r\n      }\r\n\r\n      var $headers = $template.find('#headers');\r\n      $template.on('click', '#headers button', function (event) {\r\n        event.preventDefault();\r\n        var $fields = $headers.find('span:last');\r\n        updateHeaders();\r\n\r\n        var $clones = $fields.clone(true);\r\n        $fields.before($clones);\r\n        $fields.find('input').val('').eq(0).focus();\r\n      });\r\n\r\n      $template.on('input', '.row input', function () {\r\n        updateHeaders($(this).closest('.row'));\r\n      });\r\n    }\r\n\r\n    initHandlers();\r\n    updateInfoCard();\r\n    jsbin.$document.bind('saved', updateInfoCard);\r\n  }\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/last-bin',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n  'use strict';\r\n\r\n  function getExpires() {\r\n    var d = new Date();\r\n\r\n    // expires in 1 hour from now\r\n    d.setTime(+d + 1000 * 60 * 60);\r\n    return d.toUTCString();\r\n  }\r\n\r\n  function save() {\r\n    var url = window.location.href;\r\n    if (url) {\r\n      document.cookie = 'last=' + encodeURIComponent(url) + '; expires=' + getExpires() + '; path=/';\r\n    } else {\r\n      // expire cookie\r\n      document.cookie = 'last=\"\"; expires=-1; path=/';\r\n    }\r\n  }\r\n\r\n  function readCookie(name) {\r\n    var nameEQ = name + '=';\r\n    var ca = document.cookie.split(';');\r\n    for(var i=0;i < ca.length;i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function updateBackButton() {\r\n    var el = document.getElementById('back');\r\n    var back = readCookie('last');\r\n\r\n    if (el && back !== null && back !== '%2Fedit') {\r\n      el.href = decodeURIComponent(back);\r\n    }\r\n  }\r\n\r\n  // save the bin url when the bin is saved, changed and when we load first time\r\n  if (jsbin && jsbin.getURL) {\r\n    jsbin.$document.on('saved', save);\r\n    save();\r\n  } else {\r\n    updateBackButton();\r\n  }\r\n});\ndefine('skylark-jsbin-client/chrome/transfer',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n   var $transfers = $('a.transfer').on('click', function (event) {\r\n      event.preventDefault();\r\n      var to = prompt('Enter the username to transfer this bin to');\r\n      to = (to || '').trim().toLowerCase();\r\n\r\n      if (to.length) {\r\n        $.ajax({\r\n          url: jsbin.getURL({ withRevision: true }) + '/transfer',\r\n          method: 'post',\r\n          data: {\r\n            to: to,\r\n            _csrf: jsbin.state.token,\r\n          },\r\n          success: function () {\r\n            window.location.reload();\r\n          },\r\n          error: function (e) {\r\n            console.log(e);\r\n            if (e.status === 403) {\r\n              alert('This bin cannot be transferred as you do not own it.');\r\n            } else if (e.status === 400) {\r\n              alert('The user \"' + to + '\" couldn\\'t be found, sorry.');\r\n            } else {\r\n              alert('Failed to transfer bin');\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n    });\r\n\r\n    var updateTransfer = function () {\r\n      if (jsbin.owner()) {\r\n        $transfers.show();\r\n      } else {\r\n        $transfers.hide();\r\n      }\r\n    }\r\n\r\n    ///updateTransfer();\r\n\r\n    return updateTransfer;\r\n});\ndefine('skylark-jsbin-client/chrome/welcome-panel',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n   \"../jsbin\",\r\n   \"./analytics\",\r\n   \"./settings\"\r\n],function ($,store,jsbin,analytics,settings) {\r\n    /*global jsbin, $, $body, $document, analytics, settings*/\r\n    'use strict';\r\n\r\n    if (!$('#toppanel').length) {\r\n      return;\r\n    }\r\n\r\n    if (jsbin.settings.gui === undefined) {\r\n      jsbin.settings.gui = {};\r\n    }\r\n    if (jsbin.settings.gui.toppanel === undefined) {\r\n      jsbin.settings.gui.toppanel = true;\r\n      store.localStorage.setItem('settings', JSON.stringify(jsbin.settings));\r\n    }\r\n\r\n    if (jsbin.$body.hasClass('toppanel') && jsbin.settings.gui.toppanel === false) {\r\n      jsbin.$body.addClass('toppanel-close');\r\n      jsbin.$body.removeClass('toppanel');\r\n    }\r\n\r\n    // analytics for panel state\r\n    analytics.welcomePanelState(jsbin.settings.gui.toppanel);\r\n\r\n    var removeToppanel = function() {\r\n      jsbin.settings.gui.toppanel = false;\r\n      settings.save();\r\n      jsbin.$body.addClass('toppanel-close');\r\n      jsbin.$body.removeClass('toppanel');\r\n\r\n      // $document.trigger('sizeeditors');\r\n    };\r\n\r\n    var showToppanel = function() {\r\n      jsbin.settings.gui.toppanel = true;\r\n      settings.save();\r\n      jsbin.$body.removeClass('toppanel-close');\r\n      jsbin.$body.addClass('toppanel');\r\n    };\r\n\r\n    var goSlow = function(e) {\r\n      jsbin.$body.removeClass('toppanel-slow');\r\n      if (e.shiftKey) {\r\n        jsbin.$body.addClass('toppanel-slow');\r\n      }\r\n    };\r\n\r\n    $('.toppanel-logo').on('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(e) {\r\n      jsbin.$document.trigger('sizeeditors');\r\n    });\r\n\r\n    $('.toppanel-hide').click(function(event) {\r\n      event.preventDefault();\r\n      goSlow(event);\r\n      removeToppanel();\r\n    });\r\n    $('.toppanel-logo').click(function(event) {\r\n      event.preventDefault();\r\n      goSlow(event);\r\n      showToppanel();\r\n    });\r\n    // $document.keydown(function (event) {\r\n    //   if (event.which === 27) {\r\n    //     if ($body.hasClass('toppanel')) {\r\n    //       removeToppanel();\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n    function shuffle(array) {\r\n      var m = array.length, t, i;\r\n\r\n      // While there remain elements to shuffle...\r\n      while (m) {\r\n\r\n        // Pick a remaining element...\r\n        i = Math.floor(Math.random() * m--);\r\n\r\n        // And swap it with the current element.\r\n        t = array[m];\r\n        array[m] = array[i];\r\n        array[i] = t;\r\n      }\r\n\r\n      return array;\r\n    }\r\n\r\n    $.ajax({\r\n      // tries to cache once a day\r\n      url: '/blog/all.json?' + (new Date()).toString().split(' ').slice(0, 4).join('-'),\r\n      dataType: 'json',\r\n      cache: true,\r\n      success: function (data) {\r\n        var blogpost = data.blog[0];\r\n        // this is daft, but it means that the landing page is the same\r\n        // for all, and ensures that blog comments end up on a single place\r\n        var root = jsbin.root.replace(/^https/, 'http');\r\n        $('.toppanel-blog ul').html('<li><a href=\"' + root + '/' + blogpost.slug + '\" target=\"_blank\" class=\"toppanel-link\">' + blogpost.title.replace(/TWDTW.*:\\s/, '') + '</a></li>');\r\n\r\n        var last = null;\r\n        var count = 1;\r\n        try {\r\n          last = store.localStorage.getItem('lastpost') || null;\r\n        } catch (e) {}\r\n\r\n        if (last !== null) {\r\n          last *= 1;\r\n          if (last < blogpost.timestamp) {\r\n            count = data.blog.reduce(function (prev, current) {\r\n              if (last < current.timestamp) {\r\n                return prev + 1;\r\n              }\r\n              return prev;\r\n            }, 0);\r\n          } else {\r\n            count = 0;\r\n          }\r\n        }\r\n\r\n        if (count) {\r\n          $('.blog a').attr('href', root + '/' + data.blog[count-1].slug).attr('data-count', count).on('click', function () {\r\n            // this is a weird hack work around to try to clear the storage\r\n            // item that says which was the last post viewed. so we update\r\n            // the timestamp when the user clicks the link, because we know\r\n            // they'll land on the latest post\r\n            try {\r\n              store.localStorage.lastpost = data.blog[count-1].timestamp;\r\n            } catch (e) {}\r\n          });\r\n        }\r\n\r\n        var help = shuffle(data.help);\r\n\r\n        $('.toppanel-help ul').html('<li><a href=\"' + root + '/' + help[0].slug + '\" target=\"_blank\" class=\"toppanel-link\">' + help[0].title + '</a></li><li><a href=\"' + root + '/' + help[1].slug + '\" target=\"_blank\" class=\"toppanel-link\">' + help[1].title + '</a></li>');\r\n\r\n      }\r\n    })\r\n\r\n    // analytics for links\r\n    $('#toppanel').find('.toppanel-link').mousedown(function() {\r\n      analytics.welcomePanelLink(this.href);\r\n    });\r\n\r\n });\ndefine('skylark-jsbin-client/chrome/help-search',[\r\n  \"skylark-jquery\",\r\n   \"../jsbin\"\r\n],function ($,jsbin) {\r\n\r\n    'use strict';\r\n    var results = $('#results');\r\n    var resultCount = $('#result-count');\r\n    var searchTerms = [];\r\n    var search = $('#helpsearch');\r\n    var position = -1;\r\n\r\n    search.on('input', jsbin.throttle(function () {\r\n      if (searchTerms.length === 0) {\r\n        $.ajax({\r\n          url: '/help/search.json?' + (new Date()).toString().split(' ').slice(0, 4).join('-'),\r\n          dataType: 'json',\r\n          cache: true,\r\n          success: function (data) {\r\n            searchTerms = data;\r\n            searchFor(this.value, searchTerms);\r\n          }.bind(this)\r\n        });\r\n      } else {\r\n        searchFor(this.value, searchTerms);\r\n      }\r\n      position = -1;\r\n    }, 200));\r\n\r\n    // document.documentElement.addEventListener('click', function (event) {\r\n    //   if (event.target.id === 'search' || event.target.id === 'results') {\r\n\r\n    //   } else {\r\n    //     resultsEl.hidden = true;\r\n    //   }\r\n    // });\r\n\r\n    results.on('mousemove', function () {\r\n      if (position !== -1) {\r\n        results.children().remove('highlight');\r\n        position = -1;\r\n      }\r\n    });\r\n\r\n    search.on('keydown', function (event) {\r\n      var key = event.which;\r\n      if (key === 38 || key === 40) { // up / down\r\n        event.preventDefault();\r\n        var inc = 1;\r\n        if (key === 38) {\r\n          inc = -1;\r\n        }\r\n\r\n        position += inc;\r\n\r\n        var children = results.children();\r\n\r\n        var length = children.length;\r\n        children.removeClass('hover');\r\n\r\n        if (position < 0) {\r\n          position = length - 1;\r\n        } else if (position > length - 1) {\r\n          position = 0;\r\n        }\r\n\r\n        children.eq(position).addClass('hover');\r\n      } else if (key === 13) { // select\r\n        var url = results.find('.hover')[0];\r\n        if (url) {\r\n          window.open(url.href);\r\n          // window.location = url.href;\r\n        }\r\n      }\r\n    });\r\n\r\n    // search.on('focus', function () {\r\n    //   results.hide();\r\n    // });\r\n\r\n    function wordmap(input) {\r\n      var ignore = \"a an and on in it of if for the i is i'm i'd it's or to me be not was do so at are what bin bins\".split(' ');\r\n\r\n      var endings = 'ing ly lies s';\r\n      var endingRe = new RegExp('(' + endings.split(' ').join('|') + ')$');\r\n\r\n      return (input||'')\r\n        //- strip html\r\n        .replace(/(<([^>]+)>)/ig,'')\r\n        //- strip non-letters\r\n        .replace(/\\W/g, ' ').replace(/[\"'\\.,]/g, '')\r\n        //- turn in to array of lower case words\r\n        .toLowerCase().split(' ')\r\n        //- filter out ignored words\r\n        .filter(function (word) {\r\n          return ignore.indexOf(word.trim()) === -1;\r\n        }).filter(function (e, i, words) {\r\n          //- return unique\r\n          return words.lastIndexOf(e) === i;\r\n        }).filter(function (word) {\r\n          //- return words 3 chars or longer\r\n          return word.length > 2;\r\n        }).map(function (word) {\r\n          return word.trim().replace(endingRe, '');\r\n        }).sort();\r\n    }\r\n\r\n    function searchFor(needles, haystack) {\r\n      'use strict';\r\n      needles = wordmap(needles);\r\n      var matches = haystack.map(function (data) {\r\n        var matches = needles.filter(function (needle) {\r\n          return data.words.indexOf(needle) !== -1;\r\n        }).length;\r\n\r\n        return {\r\n          type: data.type,\r\n          title: data.title,\r\n          slug: data.slug,\r\n          category: data.category,\r\n          matches: matches\r\n        };\r\n      }).filter(function (data) {\r\n        return data.matches > 0;\r\n      }).sort(function (a, b) {\r\n        return b.matches - a.matches;\r\n      });\r\n\r\n      results.html(matches.map(function (result) {\r\n        return '<a target=\"_blank\" class=\"button\" href=\"/' + result.slug + '\">' + result.title + (result.type === 'blog' ? ' (blog)' : '') + '</a>';\r\n      }).join('\\n'));\r\n\r\n      results.show();\r\n      var s = '';\r\n      if (matches.length !== 1) {\r\n        s = 's';\r\n      }\r\n      resultCount.html(matches.length + ' result' + s);\r\n    }\r\n\r\n\r\n});\r\n\ndefine('skylark-jsbin-client/chrome/app',[\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-coder/editors/codemirror\",\r\n   \"../jsbin\",\r\n   \"./gist\",\r\n   \"./analytics\"\r\n],function ($,CodeMirror,jsbin,Gist,analytics) {\r\n  // if a gist has been requested, lazy load the gist library and plug it in\r\n  if (/gist\\/.*/.test(window.location.pathname)) {\r\n    window.editors = editors; // needs to be global when the callback triggers to set the content\r\n    loadGist = function () {\r\n      window.gist = new Gist(window.location.pathname.replace(/.*\\/([^/]+)$/, \"$1\"));\r\n    };\r\n\r\n    if (editors.ready) {\r\n      loadGist();\r\n    } else {\r\n      jsbin.$document.on('jsbinReady', loadGist);\r\n    }\r\n  }\r\n\r\n  // prevent the app from accidently getting scrolled out of view\r\n  if (!jsbin.mobile) {\r\n    document.body.onscroll = window.onscroll = function () {\r\n      if (document.body.scrollTop !== 0) {\r\n        window.scrollTo(0,0);\r\n      }\r\n      return false;\r\n    };\r\n  }\r\n\r\n  window.CodeMirror = CodeMirror; // fix to allow code mirror to break naturally\r\n\r\n  // These are keys that CodeMirror (and Emmet) should never take over\r\n  // ref: https://gist.github.com/rodneyrehm/5213304\r\n  if (CodeMirror.keyMap && CodeMirror.keyMap['default']) {\r\n    var cmd = $.browser.platform === 'mac' ? 'Cmd' : 'Ctrl';\r\n    delete CodeMirror.keyMap['default'][cmd + '-L'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-T'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-W'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-J'];\r\n    delete CodeMirror.keyMap['default'][cmd + '-R'];\r\n  }\r\n\r\n  // var link = document.createElement('link');\r\n  // link.rel = 'stylesheet';\r\n  // link.href = jsbin['static'] + '/css/font.css?' + jsbin.version;\r\n  // link.type = 'text/css';\r\n  // document.getElementsByTagName('head')[0].appendChild(link);\r\n\r\n  if (jsbin.embed) {\r\n    analytics.embed();\r\n  }\r\n\r\n});\ndefine('skylark-jsbin-client/main',[\r\n\t\"skylark-jsbin-coder\",\r\n\t\"./jsbin\",\r\n    \"./chrome/font\",\r\n    \"./chrome/analytics\",\r\n    \"./chrome/settings\",\r\n    \"./render/saved-history-preview\",\r\n    \"./chrome/esc\",\r\n    \"./chrome/share\",\r\n    \"./chrome/issue\",\r\n    \"./chrome/download\",\r\n    \"./chrome/login\",\r\n    \"./chrome/tips\",\r\n    \"./chrome/keys\",\r\n    \"./chrome/save\",\r\n    \"./chrome/navigation\",\r\n    \"./chrome/file-drop\",\r\n    \"./chrome/gist\",\r\n    \"./chrome/infocard\",\r\n    \"./chrome/last-bin\",\r\n    \"./chrome/archive\",\r\n    \"./chrome/transfer\",\r\n    \"./chrome/welcome-panel\",\r\n    \"./chrome/help-search\",\r\n    \"./chrome/app\"\r\n\r\n],function(coder,jsbin){\r\n\treturn jsbin;\r\n});\ndefine('skylark-jsbin-client', ['skylark-jsbin-client/main'], function (main) { return main; });\n\n"]}